C51 COMPILER V7.10   TFT_DISPLAY                                                           02/28/2011 10:30:55 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE TFT_DISPLAY
OBJECT MODULE PLACED IN .\obj\TFT_display.obj
COMPILER INVOKED BY: F:\Keil C 7.10\chengxu\C51\BIN\C51.EXE LCM\TFT_display.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCD
                    -IR(..\libsource\header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\TFT_display.lst) OBJECT(.\obj\TFT_display.o
                    -bj)

line level    source

   1          #include "SPDA2K.h"
   2          #include "..\LCM\LCM_func.h"
   3          #include "..\LCM\TFT_config.h"
   4          #include "..\LCM\TFT_display.h"
   5          #include "..\header\variables.h"
   6          
   7          
   8          xdata   U8      gc_ShowMenuTimer=0;
   9          xdata   U8      gc_FuncPicCount=0;
  10          xdata   U8      gc_PlayBarBak=0;
  11          
  12          extern  data    bit     gb_TFT_VOL_FM;
  13          extern  data    U8      gc_CurrentCard;
  14          
  15          extern  xdata   U8      gc_LanguageSel;
  16          extern  xdata   U16     gw_FileIndex[]; 
  17          extern  xdata   U16     gw_FileTotalNumber[];
  18          extern  DSP_GLOBAL      gs_DSP_GLOBAL_RAM;
  19          extern  xdata   System_Struct gs_System_State;
  20          
  21          extern void LCD_DisplayIcon(U8 tw_IconIDNumber,U8 tc_CurrentOffset);
  22          
  23          
  24          void TFT_HEX_BCD(U16 num,U8 *Hi,U8 *MidH, U8 *MidL, U8 *Low)
  25          {
  26   1              *Hi=num/1000;
  27   1              *MidH=(num-((U16)*Hi*1000) )/100;
  28   1              *MidL=(num- ((U16)*Hi*1000) - ((U16)*MidH*100) )/10;
  29   1              *Low=num%10;
  30   1              if(*Hi>10)
  31   1              { 
  32   2                      *Hi=*Hi%10;
  33   2              }
  34   1      }
  35          
  36          // EQ:NOR/DBB/JAZZ/...
  37          void TFT_ShowEQIcon(void)
  38          {
  39   1              LCM_set_view(TFT_IconDispDir,EQIcon_X_Pos,EQIcon_Y_Pos,EQIcon_H_Size,EQIcon_V_Size);
  40   1              LCD_DisplayIcon(EQIconID,gc_DisplayEQIcon);
  41   1      }
  42          
  43          // 播放模式:Normal/Repeat-1/Repeat-All
  44          void TFT_ShowPlayMode(void)
  45          {
  46   1              LCM_set_view(TFT_IconDispDir,PlayModeIcon_X_Pos,PlayModeIcon_Y_Pos,PlayModeIcon_H_Size,PlayModeIcon_V_Siz
             -e);
  47   1              LCD_DisplayIcon(PlayModeIconID,gc_RepPlayMode);
  48   1      }
  49          
  50          // 儲存裝置:NAND(0)/U-Disk(1)/SDC(2)
  51          void TFT_ShowMediaIcon(void)
  52          {
C51 COMPILER V7.10   TFT_DISPLAY                                                           02/28/2011 10:30:55 PAGE 2   

  53   1              data    U8      i;
  54   1      
  55   1              if(gc_CurrentCard==5)
  56   1              {
  57   2                      i=4;    // Host
  58   2              }
  59   1              else
  60   1              {
  61   2                      i=gc_CurrentCard;
  62   2              }
  63   1      
  64   1              LCM_set_view(TFT_IconDispDir,MediaIcon_X_Pos,MediaIcon_Y_Pos,MediaIcon_H_Size,MediaIcon_V_Size);
  65   1              LCD_DisplayIcon(MediaIconID,i);
  66   1      }
  67          
  68          // 播放狀態:Play/Pause
  69          void TFT_ShowPlayPauseIcon(void)
  70          {
  71   1              LCM_set_view(TFT_IconDispDir,PlayIcon_X_Pos,PlayIcon_Y_Pos,PlayIcon_H_Size,PlayIcon_V_Size);
  72   1              LCD_DisplayIcon(PlayIconID,gc_DispPlayStatus);
  73   1      }
  74          
  75          // 音樂格式:MP3/WMA/APE
  76          void TFT_ShowMusicType(void)
  77          {
  78   1              LCM_set_view(TFT_IconDispDir,MusicType_X_Pos,MusicType_Y_Pos,MusicType_H_Size,MusicType_V_Size);
  79   1              LCD_DisplayIcon(MusicTypeID,gc_Media_type);     
  80   1      }
  81          
  82          // 主畫面FM頻率
  83          void TFT_ShowFMFrequency(void)
  84          {
  85   1              data    U8      BCD[4];
  86   1              data    U8      i,j=0;
  87   1      
  88   1              TFT_HEX_BCD(gw_FM_frequency,(BCD+0),(BCD+1),(BCD+2),(BCD+3));
  89   1              
  90   1              for(i=0;i<4;i++)
  91   1              {
  92   2                      if((i==0)&&(BCD[0]==0))
  93   2                      {
  94   3                              BCD[0]=10;      // Blank
  95   3                      }
  96   2                      else if(i==3)
  97   2                      {
  98   3                              j=FreqDotOffset;
  99   3                      }
 100   2      
 101   2                      LCM_set_view(TFT_IconDispDir,FM_Freq_X_Pos+FM_Freq_H_Size*i+j+i,FM_Freq_Y_Pos,FM_Freq_H_Size,FM_Freq_V_S
             -ize);
 102   2                      LCD_DisplayIcon(FM_FreqID,BCD[i]);
 103   2              }
 104   1      }
 105          
 106          // 播放曲數
 107          void TFT_ShowSongIndex(void)
 108          {
 109   1              data    U8      BCD[4];
 110   1              data    U8      i;
 111   1      
 112   1              TFT_HEX_BCD(gw_FileIndex[gs_System_State.c_FileHandle],(BCD+0),(BCD+1),(BCD+2),(BCD+3));
 113   1              for(i=0;i<4;i++)
C51 COMPILER V7.10   TFT_DISPLAY                                                           02/28/2011 10:30:55 PAGE 3   

 114   1              {
 115   2                      LCM_set_view(TFT_IconDispDir,SongIndex_X_Pos+SongIndex_H_Size*i+i,SongIndex_Y_Pos,SongIndex_H_Size,SongI
             -ndex_V_Size);
 116   2                      LCD_DisplayIcon(SongIndexID,BCD[i]);    
 117   2              }
 118   1      }
 119          
 120          // 總曲數
 121          void TFT_ShowTotalSong(void)
 122          {
 123   1              data    U8      BCD[4];
 124   1              data    U8      i;
 125   1      
 126   1              TFT_HEX_BCD(gw_FileTotalNumber[gs_System_State.c_FileHandle],(BCD+0),(BCD+1),(BCD+2),(BCD+3));
 127   1              for(i=0;i<4;i++)
 128   1              {
 129   2                      LCM_set_view(TFT_IconDispDir,TotalSong_X_Pos+TotalSong_H_Size*i+i,TotalSong_Y_Pos,TotalSong_H_Size,Total
             -Song_V_Size);
 130   2                      LCD_DisplayIcon(TotalSongID,BCD[i]);    
 131   2              }
 132   1      }
 133          
 134          // BitRate
 135          void TFT_ShowBitRate(void)
 136          {
 137   1              data    U8      BCD[4];
 138   1              data    U8      i;
 139   1      
 140   1              TFT_HEX_BCD(gw_DisplayBitRate,(BCD+0),(BCD+1),(BCD+2),(BCD+3));
 141   1              for(i=0;i<3;i++)
 142   1              {
 143   2      #ifdef TFT_18_V
                              LCM_set_view(TFT_IconDispDir,BitRate_X_Pos+(BitRate_H_Size+1)*i,BitRate_Y_Pos,BitRate_H_Size,BitRate_V_S
             -ize);
              #else
 146   2                      LCM_set_view(TFT_IconDispDir,BitRate_X_Pos+(BitRate_H_Size+2)*i,BitRate_Y_Pos,BitRate_H_Size,BitRate_V_S
             -ize);
 147   2      #endif
 148   2                      LCD_DisplayIcon(BitRateID,BCD[i+1]);    
 149   2              }
 150   1      }
 151          
 152          // 音樂播放主畫面
 153          void TFT_Main(void)
 154          {
 155   1              LCM_set_view(TFT_IconDispDir,ID_PlayBG_X_Pos,ID_PlayBG_Y_Pos,ID_PlayBG_H_Size,ID_PlayBG_V_Size);
 156   1          LCD_DisplayIcon(ID_PlayBG,0);
 157   1      
 158   1              if(gc_Play_FileType==2)
 159   1              {
 160   2      #ifdef TFT_18_V
                              LCM_set_view(TFT_IconDispDir,43,18,19,16);      
              #else
 163   2                      LCM_set_view(TFT_IconDispDir,13,54,38,36);
 164   2      #endif
 165   2              LCD_DisplayIcon(39,0);
 166   2              }
 167   1      }
 168          
 169          // 當前播放時間&Bar
 170          void TFT_ShowPlayTime(void)
 171          {
C51 COMPILER V7.10   TFT_DISPLAY                                                           02/28/2011 10:30:55 PAGE 4   

 172   1              data    U8      BCD[4];
 173   1              data    U8      i,j=0;
 174   1      
 175   1              BCD[0]=gw_Disp_CurrentSec/600;
 176   1              BCD[1]=(gw_Disp_CurrentSec/60)%10;
 177   1              BCD[2]=(gw_Disp_CurrentSec%60)/10;
 178   1              BCD[3]=(gw_Disp_CurrentSec%60)%10;
 179   1      
 180   1              for(i=0;i<4;i++)
 181   1              {
 182   2                      if(i==2)
 183   2                      {
 184   3                              j=SecondOffset;
 185   3                      }
 186   2      
 187   2                      LCM_set_view(TFT_IconDispDir,PlayTime_X_Pos+(PlayTime_H_Size+2)*i+j,PlayTime_Y_Pos,PlayTime_H_Size,PlayT
             -ime_V_Size);
 188   2                      LCD_DisplayIcon(PlayTimeID,BCD[i]);
 189   2              }
 190   1              TFT_ShowPlayRatioBar();
 191   1      }
 192          
 193          // 播放時間BAR
 194          void TFT_ShowPlayRatioBar(void)
 195          {
 196   1              data    U8      i;
 197   1      
 198   1              if(gc_Play_FileType==2) // For MP4
 199   1              {
 200   2                      i=PlayRatioBarNum-1;
 201   2              }
 202   1              else
 203   1              {
 204   2                      i=((gw_Disp_CurrentSec*PlayRatioBarNum)/gw_DispTotalTime);
 205   2              }
 206   1      
 207   1              if(i>=PlayRatioBarNum)
 208   1              {
 209   2                      i=PlayRatioBarNum-1;
 210   2              }
 211   1      
 212   1              if(gc_PlayBarBak==i)
 213   1              {
 214   2                      return;
 215   2              }
 216   1      
 217   1              gc_PlayBarBak=i;
 218   1      
 219   1              LCM_set_view(TFT_IconDispDir,PlayRatioBar_X_Pos,PlayRatioBar_Y_Pos,PlayRatioBar_H_Size,PlayRatioBar_V_Siz
             -e);
 220   1              LCD_DisplayIcon(PlayRatioBarID,i);      // need play status
 221   1      }
 222          
 223          
 224          #ifndef TFT_18_V
 225          // 歌曲時間
 226          void TFT_ShowSongLength(void)
 227          {
 228   1              data    U8      BCD[4];
 229   1              data    U8      i,j=0;
 230   1      
 231   1              BCD[0]=gw_DispTotalTime/600;
C51 COMPILER V7.10   TFT_DISPLAY                                                           02/28/2011 10:30:55 PAGE 5   

 232   1              BCD[1]=(gw_DispTotalTime/60)%10;
 233   1              BCD[2]=(gw_DispTotalTime%60)/10;
 234   1              BCD[3]=(gw_DispTotalTime%60)%10;
 235   1              
 236   1              for(i=0;i<4;i++)
 237   1              {
 238   2                      if(i==2)
 239   2                      {
 240   3                              j=SongTotalTimeOffset;
 241   3                      }
 242   2      
 243   2                      LCM_set_view(TFT_IconDispDir,SongTotalTime_X_Pos+SongTotalTime_H_Size*i+i+j,SongTotalTime_Y_Pos,SongTota
             -lTime_H_Size,SongTotalTime_V_Size);
 244   2                      LCD_DisplayIcon(SongTotalTimeID,BCD[i]);
 245   2              }
 246   1      }
 247          #endif
 248          
 249          // FM頻率調整
 250          void TFT_ShowFMFreqAdj(void)
 251          {
 252   1              data    U8      BCD[5];
 253   1              data    U8      i;
 254   1      
 255   1              TFT_HEX_BCD(gw_FM_frequency,(BCD+0),(BCD+1),(BCD+2),(BCD+4));
 256   1              
 257   1              for(i=0;i<5;i++)
 258   1              {
 259   2                      if((i==0)&&(BCD[0]==0))
 260   2                      {
 261   3                              BCD[0]=10;      // Blank
 262   3                      }
 263   2                      else if(i==3)
 264   2                      {
 265   3                              BCD[3]=11;//j=FreqAdjDotOffset;
 266   3                      }
 267   2      
 268   2                      LCM_set_view(TFT_IconDispDir,FMAdj_X_Pos+FMAdj_H_Size*i+i,FMAdj_Y_Pos,FMAdj_H_Size,FMAdj_V_Size);
 269   2                      LCD_DisplayIcon(FMAdjID,BCD[i]);
 270   2              }
 271   1      }
 272          
 273          // VOL調整
 274          void TFT_ShowVOLAdj(void)
 275          {
 276   1          data        U8 tc_vol[2];
 277   1          data        U8 i;
 278   1              xdata   U8 tc_DisplayVol;
 279   1      
 280   1          tc_DisplayVol=gc_DisplayVol/2;   
 281   1      
 282   1          tc_vol[0]=tc_DisplayVol/10;
 283   1          tc_vol[1]=tc_DisplayVol- (tc_DisplayVol/10)*10;
 284   1          for(i=0;i<2;i++)
 285   1          {
 286   2              LCM_set_view(TFT_IconDispDir,VOLAdj_X_Pos+(VOLAdj_H_Size+2)*i,VOLAdj_Y_Pos,VOLAdj_H_Size,VOLAdj_V_
             -Size);
 287   2              LCD_DisplayIcon(VOLAdjID,tc_vol[i]);
 288   2          }
 289   1      }
 290          
 291          // LRC背景圖
C51 COMPILER V7.10   TFT_DISPLAY                                                           02/28/2011 10:30:55 PAGE 6   

 292          void TFT_LRCBackGround(void)
 293          {
 294   1              LCM_set_view(TFT_IconDispDir,0,0,TFT_H_Size,TFT_V_Size);
 295   1              LCD_DisplayIcon(ID_PUBLIC_FULL,OFFSET_FullLRC_BG);
 296   1      }
 297          
 298          // EQ Frame(遙控器選EQ)
 299          void TFT_EQFrame(void)
 300          {
 301   1          U8 x_EQ_F;
 302   1              // EQ frame背景
 303   1              LCM_set_view(TFT_IconDispDir,0,0,TFT_H_Size,TFT_V_Size);
 304   1              //LCD_DisplayIcon(40,0);
 305   1              LCD_DisplayIcon(ID_PUBLIC_FULL,OFFSET_EQ_FRAME);
 306   1              // EQ
 307   1              LCM_set_view(TFT_IconDispDir,EQFrame_X_Pos,EQFrame_Y_Pos,EQFrame_H_Size,EQFrame_V_Size);
 308   1          x_EQ_F= gs_DSP_GLOBAL_RAM.sc_EQ_Type+gc_LanguageSel*6;
 309   1          LCD_DisplayIcon(EQFrameID,x_EQ_F);
 310   1      }
 311          
 312          // IR數字選曲選頻主畫面
 313          void TFT_IRNumMain(void)
 314          {
 315   1              LCM_set_view(TFT_IconDispDir,0,0,TFT_H_Size,TFT_V_Size);
 316   1              LCD_DisplayIcon(FMORSONG_BG,gc_LanguageSel);
 317   1      }
 318          
 319          // IR數字選曲選頻(數字)
 320          void TFT_IRNum(void)
 321          {
 322   1              data    U8      i;
 323   1              data    U8      j;
 324   1      
 325   1              for(i=4;i>0;i--)
 326   1              {
 327   2                      LCM_set_view(TFT_IconDispDir,IRNum_X_Pos+(IRNum_H_Size+2)*(4-i),IRNum_Y_Pos,IRNum_H_Size,IRNum_V_Size);
 328   2      
 329   2                      j=gc_NUMBER[i-1];
 330   2                      if(j==0xFF)
 331   2                      {
 332   3                              j=10;
 333   3                      }
 334   2                      LCD_DisplayIcon(IRNumID,j);
 335   2              }
 336   1      }
 337          
 338          void TFT_ShowError(void)
 339          {
 340   1              LCM_set_view(TFT_IconDispDir,Error_X_Pos,Error_Y_Pos,Error_H_Size,Error_V_Size);
 341   1              LCD_DisplayIcon(ErrorID,0);
 342   1      }
 343          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1653    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      46
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V7.10   TFT_DISPLAY                                                           02/28/2011 10:30:55 PAGE 7   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
