C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 1   


C51 COMPILER V7.10, COMPILATION OF MODULE MJPEG_PROCESS
OBJECT MODULE PLACED IN .\obj\Mjpeg_process.obj
COMPILER INVOKED BY: F:\Keil C 7.10\chengxu\C51\BIN\C51.EXE MJpeg\Mjpeg_process.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS 
                    -INCDIR(..\libsource\header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\Mjpeg_process.lst) OBJECT(.\obj\Mjpeg_p
                    -rocess.obj)

line level    source

   1          #include <string.h>
   2          #include "SPDA2K.h"
   3          #include "dos\fs_struct.h"
   4          #include "dos\dosfile.h"
   5          #include "memalloc.h"
   6          #include "..\header\host_init.h"
   7          
   8          #include "..\LCM\model_define.h"
   9          #include "..\DSP\DSPPHYSIC.H"
  10          #include "..\DSP\dspuser.h"
  11          #include "..\LCM\LCM.h"
  12          #include "..\LCM\UI_icon.h"
  13          #include "..\LCM\TFT_display.h"         // TFT
  14          #include "..\LCM\TFT_config.h"          // TFT
  15          #include "..\header\variables.h"
  16          
  17          #define C_LCM_ROW_MAX 5//6  //20090331--sunzhk modify 100702
  18          
  19          xdata   U16     gw_IMG_DMA_Sz;
  20          xdata   U16     gw_IMG_DMABuf_ptr[4];
  21          extern  UBYTE   xdata EXT_NameC[];
  22          extern  void IR_Service_Process_Menu_1();
  23          extern  void IR_Service_Process();
  24          
  25          U8 MJPEG_DataIn(void);
  26          U8 MJPEG_DataOut(void);
  27          
  28          extern  U8              Image_Download(void);
  29          extern  U8              Image_PlayCmd(void);
  30          extern  U8              Music_ResumeCmd(void);
  31          extern  U8      USER_LogFile_ReadWrite(U8 tbt_ReadOrWrite);//use reserveblock for log
  32          extern  U8              X_Unicode2ISN(unsigned char *UnicodeArray, bit Convert);
  33          extern  void    InitDispVariable(void);
  34          extern  void    LCM_Display_Func1(void);
  35          extern  void    LCM_set_view(U8 view_type, U16 x_start, U16 y_start, U16 x_size, U16 y_size);
  36          extern  void    Image_MCU_LCM_DMA(U16 movesize, U16 tw_Src);
  37          extern  void    DecAndReload1sTimeOutCnt(void);
  38          extern  void    Music_VolumeUpCmd(void);
  39          extern  void    Music_VolumeDownCmd(void);
  40          extern  void    Music_SetVolumeCmd(void);
  41          extern  void    LCM_set_view(U8 view_type, U16 x_start, U16 y_start, U16 x_size, U16 y_size);
  42          extern  void    Image_WakeUp(U8 tc_Type);
  43          extern  void    FM_FREQ_CHG(U8 tc_UP_DOWN,U8 offset);  //20090331
  44          extern  xdata   System_Struct gs_System_State;
  45          extern  struct  str_scroll_t    gs_str_scroll_state;
  46          
  47          /* =============== MJPEG function =============== */
  48          //===================================================================================
  49          //
  50          U8 MJPEG_Download(void)
  51          {
  52   1              U8 tc_Cnt = 0;
  53   1              
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 2   

  54   1              if (DSP_Download(0x08, 0x00) != DSP_SUCCESS)
  55   1              {
  56   2                      return DSP_PLAY_COMMAND_ERROR;
  57   2              }
  58   1              
  59   1      //      dbprintf("MJPEG_Download\n");
  60   1              
  61   1              for (tc_Cnt=0; tc_Cnt<10; ++tc_Cnt) 
  62   1              {
  63   2                      if (DSP_PlayInit() == DSP_SUCCESS)
  64   2                      {
  65   3                              break;
  66   3                      }
  67   2      //              dbprintf("Retry to start DSP\n");
  68   2      
  69   2                      if (tc_Cnt < 5) 
  70   2                      {
  71   3                              GLOBAL_REG[0x02] &= 0xFE;       // Enable DSP Run Normal Mode
  72   3                      }
  73   2                      else
  74   2                      {
  75   3      //                      dbprintf("Hardware Reset DSP!!!!!\n");
  76   3                              GLOBAL_REG[0x02] |= 0x01;       // DSP reset
  77   3                              GLOBAL_REG[0x02] &= 0xFE;       // Enable DSP Run Normal Mode
  78   3                      }
  79   2              }
  80   1      
  81   1              if (tc_Cnt == 10)
  82   1              {
  83   2                      return DSP_PLAY_COMMAND_ERROR;
  84   2              }
  85   1      
  86   1              return DSP_SUCCESS;
  87   1      }
  88          
  89          U8 MJPEG_PlayCmd(void)
  90          {
  91   1              // sent "PLAY" command to DSP
  92   1              if (L2_DSP_SendCommandSet(DCMD_Play) != DCMD_Play)
  93   1              {
  94   2                      return DSP_PLAY_COMMAND_ERROR;
  95   2              }
  96   1      //      dbprintf("Play Cmd Ok~\n");
  97   1      
  98   1              gs_DSP_GLOBAL_RAM.sc_DM_Index = 0;      // reset bitstream buffer index
  99   1              gs_DSP_GLOBAL_RAM.sc_Pixel_Index = 0;   // reset output pixel buffer index
 100   1              gs_DSP_GLOBAL_RAM.sc_End_Of_File = 0;   // reset file end flag
 101   1              
 102   1              // JPEG file open
 103   1              if (DOS_Open_File_r(C_OtherFHandle, C_Open_FoundFile, C_NullFileName))
 104   1              {
 105   2                      return DSP_PLAY_COMMAND_ERROR;
 106   2              }
 107   1      
 108   1              return DSP_SUCCESS;
 109   1      }
 110          
 111          
 112          void MJPEG_MCU_DM_DMA(U8 BufferIndex)
 113          {
 114   1              U8  tc_DSPAddr_High;
 115   1              U16     tw_DSP_Word_Align;
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 3   

 116   1              /*  _______________________________
 117   1               * |___|___________|_______________|
 118   1               *  0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 
 119   1               *  msb 2-bit offset, 14-bit DSP DM address
 120   1           */
 121   1              code U16 MJPEG_DSP_Addr_Table[3] = 
 122   1              {
 123   1                      0x2E00, 0xAEaa, 0x6F55
 124   1              };
 125   1      
 126   1              // ----- DMA Reset -----
 127   1              DMA_REG[0x04] = 0x09;
 128   1              DMA_REG[0x04] = 0x08;
 129   1              DMA_REG[0xC0] = 0x00;           // clear DMA complete
 130   1              DMA_REG[0x30] = 0x01;           // clear checksum
 131   1              
 132   1              // ----- DMA initial settings for DM transfer -----
 133   1              DSP_REG[0x16] = 0x00;           // Remain DSP mode.  When you do MCU -> DM, MCU will stop DSP automaticlly
 134   1              DMA_REG[0x01] = 0x50;           // DMA : SRAM --> DM
 135   1      
 136   1              // Define data size in DMA (assume 512 bytes)
 137   1              DMA_REG[0x02] = 0xFF;
 138   1              DMA_REG[0x03] = 0x01;
 139   1      
 140   1              // Destination
 141   1              DMA_REG[0x40] = 0x00;           // 24-bit DMA
 142   1              tw_DSP_Word_Align = MJPEG_DSP_Addr_Table[BufferIndex];
 143   1              tc_DSPAddr_High = *((U8 *)&tw_DSP_Word_Align);
 144   1              DSP_REG[0x1D] = tc_DSPAddr_High >> 6;
 145   1              DSP_REG[0x18] = tc_DSPAddr_High & 0x3F;
 146   1              DSP_REG[0x17] = *((U8 *)&tw_DSP_Word_Align + 1);
 147   1              CPU_REG[0x12] = 0;
 148   1              CPU_REG[0x13] = (U8)((U16)gc_PlayRecordDataBuf >> 8);
 149   1                      
 150   1              // ------------------------------------------------
 151   1              DMA_REG[0xB0] = 0x01;           // DMA Run (0xB3B0)
 152   1              // wait until DMA cycle is completed (0xB3C0)
 153   1              while(!(DMA_REG[0xC0]&0x01));
 154   1              DSP_REG[0xC0] = 0x00;
 155   1      }
 156          
 157          
 158          void MJPEG_DM_MCU_DMA(U8 BufferIndex, U16 movesize)//Jimi 090813
 159          {
 160   1              // ----- DMA Reset -----
 161   1              DMA_REG[0x04] = 0x09;
 162   1              DMA_REG[0x04] = 0x08;
 163   1              DMA_REG[0xC0] = 0x00;           // clear DMA complete
 164   1              DMA_REG[0x30] = 0x01;           // clear checksum               
 165   1              
 166   1              // ----- DMA initial settings for DM transfer -----             
 167   1              DSP_REG[0x16] = 0x00;           // Remain DSP mode.  When you do MCU -> DM, MCU will stop DSP automaticlly
 168   1              DMA_REG[0x01] = 0x05;           // DM -> SRAM
 169   1      
 170   1              //temp = movesize - 1;
 171   1              DMA_REG[0x02] = (U8)movesize - 1;
 172   1              DMA_REG[0x03] = (U8)((movesize - 1)>>8);
 173   1      
 174   1              // Source
 175   1              DMA_REG[0x40] = 0x01;           // 16-bit DMA
 176   1              DSP_REG[0x1D] = 0x01;
 177   1      
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 4   

 178   1              DSP_REG[0x17] = (U8)gw_IMG_DMABuf_ptr[BufferIndex];
 179   1              DSP_REG[0x18] = (U8)(gw_IMG_DMABuf_ptr[BufferIndex]>>8);                // bitstream start address : 0x2000
 180   1      
 181   1              // Destination
 182   1              CPU_REG[0x14] = 0;
 183   1              CPU_REG[0x15] = (U8)((U16)gc_MotionJpegOutBuf >> 8);
 184   1      
 185   1              // ------------------------------------------------
 186   1              DMA_REG[0xB0] = 0x01;           // DMA1 start
 187   1              // wait until DMA cycle is completed (0xB3C0)           
 188   1              while(!(DMA_REG[0xC0]&0x01));           
 189   1              DMA_REG[0xC0] = 0x00;
 190   1      }
 191          //===================================================================================
 192          //
 193          //===================================================================================
 194          void MJPEG_MCU_LCM_DMA(U16 movesize, U16 tw_Src)
 195          {
 196   1              XBYTE[0xB304] = 0x09; //reset DMA machine
 197   1              XBYTE[0xB304] = 0x08; 
 198   1              
 199   1              XBYTE[0xB423] = 3;              // set NAND /CS(bit 0), /WP(bit 1), ALE(bit 2), CLE(bit 3)
 200   1              
 201   1              FLASH_REG[0x00] = 0x00;
 202   1              DMA_REG[0x01] = 0x20;           //Sram to Flash
 203   1              
 204   1              // source
 205   1              CPU_REG[0x12] = (U8)(tw_Src);
 206   1              CPU_REG[0x13] = (U8)(tw_Src >> 8);
 207   1      
 208   1              // size
 209   1              DMA_REG[0x02] = (U8)(movesize-1);
 210   1              DMA_REG[0x03] = (U8)((movesize-1) >> 8);
 211   1              
 212   1              DMA_REG[0xC0] = 0x00;           //clear DMA completed flag
 213   1              LCM_A0_HI;
 214   1              LCM_CS_LO;
 215   1              DMA_REG[0xB0] = 0x01;           //trigger DMA
 216   1              while(DMA_REG[0xC0] == 0);
 217   1              DMA_REG[0xC0] = 0;
 218   1              LCM_CS_HI;
 219   1              LCM_A0_LO;
 220   1      
 221   1              FLASH_REG[0x00] = 0x01;
 222   1      }
 223          
 224          
 225          U8 MJPEG_DataIn(void)
 226          {
 227   1              U8 tc_DosRead_Status;
 228   1              
 229   1              if (!gs_DSP_GLOBAL_RAM.sc_End_Of_File)
 230   1              {
 231   2                      while(L2_DSP_Read_DMem16(DSP_EmptyBuffer) >= ONE_SECTOR)
 232   2                      {
 233   3                              tc_DosRead_Status=DOS_Read_File(C_OtherFHandle);
 234   3                                      
 235   3                              if (tc_DosRead_Status != DOS_END_OF_FILE)
 236   3                              {
 237   4                                      if(tc_DosRead_Status!=DOS_FALSE)
 238   4                                      {
 239   5                                              MJPEG_MCU_DM_DMA(gs_DSP_GLOBAL_RAM.sc_DM_Index++);
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 5   

 240   5                                              if (L2_DSP_SendCommandSet(DCMD_DatIn) != DCMD_DatIn)
 241   5                                              {
 242   6                                                      return DSP_DATAIN_COMMAND_ERROR;
 243   6                                              }
 244   5                                      
 245   5                                              if (gs_DSP_GLOBAL_RAM.sc_DM_Index >= 3) // JPEG bitstream buffer 0x3400~0x3600, sz = 1536 bytes
 246   5                                              {
 247   6                                                      gs_DSP_GLOBAL_RAM.sc_DM_Index = 0;
 248   6                                              }
 249   5                      
 250   5                                              gs_DSP_GLOBAL_RAM.sdw_sector_num--;
 251   5                                              if (gs_DSP_GLOBAL_RAM.sdw_sector_num == gs_DSP_GLOBAL_RAM.sw_sector_cnt)
 252   5                                              {
 253   6                                                      return DSP_DECODE_END;                          // DSP pre-stop to start ramp down
 254   6                                              }
 255   5                                      }
 256   4                                      else
 257   4                                      {
 258   5      //                                      dbprintf("DOS read state fail!\n");
 259   5                                              L2_DSP_Write_DMem16(0x3F44, 0x00FF);    // JPEG file end flag
 260   5                                              gs_DSP_GLOBAL_RAM.sc_End_Of_File = 1;
 261   5                                              return DSP_DATAIN_COMMAND_ERROR;
 262   5                                      }
 263   4                              }
 264   3                              else
 265   3                              {
 266   4                                      L2_DSP_Write_DMem16(0x3F44, 0x00FF);    // JPEG file end flag
 267   4                                      gs_DSP_GLOBAL_RAM.sc_End_Of_File = 1;
 268   4                                      break;
 269   4                              }                                       
 270   3                      }
 271   2              }
 272   1              return  DSP_SUCCESS;
 273   1      }
 274          
 275          
 276          U8 MJPEG_DataOut(void)
 277          {
 278   1              U16 RemData = L2_DSP_Read_DMem16(DSP_SOutBufRemData);
 279   1      
 280   1              if (RemData >= gw_IMG_DMA_Sz)
 281   1              {
 282   2                      do
 283   2                      {
 284   3                              MJPEG_DM_MCU_DMA(gs_DSP_GLOBAL_RAM.sc_Pixel_Index++, gw_IMG_DMA_Sz);
 285   3      
 286   3                              if (L2_DSP_SendCommandSet(DCMD_DatOut) != DCMD_DatOut)
 287   3                              {
 288   4                                      return DSP_DATAOUT_COMMAND_ERROR;
 289   4                              }
 290   3      
 291   3                              if (gs_DSP_GLOBAL_RAM.sc_Pixel_Index >= 4) //Jimi JPEG SW decoder output buffer from 0x3000~0x3A00
 292   3                              {
 293   4                                      gs_DSP_GLOBAL_RAM.sc_Pixel_Index = 0;
 294   4                              }
 295   3      
 296   3                              /* ==== Display on LCM: DMA Sram to LCM ==== */
 297   3                              MJPEG_MCU_LCM_DMA(gw_IMG_DMA_Sz, (U16)gc_MotionJpegOutBuf);
 298   3                      
 299   3                      }while(L2_DSP_Read_DMem16(DSP_SOutBufRemData) >= gw_IMG_DMA_Sz);
 300   2              
 301   2              }
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 6   

 302   1              else if (L2_DSP_Read_DMem16(DSP_DecodeStatus)&0x00C0)
 303   1              {
 304   2                      if (RemData > 0)
 305   2                      {
 306   3                              MJPEG_DM_MCU_DMA(gs_DSP_GLOBAL_RAM.sc_Pixel_Index, RemData);
 307   3                              if (L2_DSP_SendCommandSet(DCMD_DatOut) != DCMD_DatOut)
 308   3                              {
 309   4                                      return DSP_DATAOUT_COMMAND_ERROR;
 310   4                              }
 311   3      
 312   3                              /* ==== Display on LCM: DMA Sram to LCM ==== */
 313   3                              MJPEG_MCU_LCM_DMA(RemData, (U16)gc_MotionJpegOutBuf);
 314   3                      } 
 315   2                      return DSP_DECODE_END;
 316   2              }
 317   1              else if (L2_DSP_Read_DMem16(DSP_DecodeStatus)&0x0020)
 318   1              {
 319   2                      return DSP_USER_FILE_TYPE_ERROR;
 320   2              }
 321   1      
 322   1              return DSP_SUCCESS;
 323   1      }
 324          
 325          
 326          U8 MJPEG_PauseCmd(void) //Jimi 090406, in order to mute op gain.
 327          {       
 328   1              U16 TimeOUT;
 329   1              if (L2_DSP_SendCommandSet(DCMD_Pause) != DCMD_Pause)
 330   1              {
 331   2                      return DSP_PAUSE_COMMAND_ERROR;
 332   2              }
 333   1      
 334   1              if ((gs_System_State.c_Phase != TASK_PHASE_FASTFWD) && (gs_System_State.c_Phase != TASK_PHASE_FASTREV))
 335   1              {
 336   2                      TimeOUT = 0xffff;
 337   2                      do
 338   2                      {
 339   3                              TimeOUT--;
 340   3                              if (TimeOUT == 0)
 341   3                              {
 342   4                                      return DSP_RUNNING_STATUS1_ERROR;
 343   4                              }
 344   3      
 345   3                              if (MJPEG_DataIn() != DSP_SUCCESS)
 346   3                              {
 347   4                                      gc_PhaseInx = 5;        // End file process
 348   4                                      break;
 349   4                              }
 350   3      
 351   3                              if (MJPEG_DataOut() != DSP_SUCCESS )
 352   3                              {       // "file end" or "error format"
 353   4                                      gc_PhaseInx = 5;        // End file process
 354   4                                      break;
 355   4                              }
 356   3                      } while ((!L2_DSP_Read_DMem16(DSP_RampDownComplete))||(!(L2_DSP_Read_DMem16(DSP_RunningStatus)&0x0002)))
             -; //Jimi 090410
 357   2              }
 358   1              return DSP_SUCCESS;
 359   1      }
 360          
 361          
 362          U8 MJPEG_StopCmd(UBYTE tc_FileHandle)
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 7   

 363          {
 364   1              U8 tc_Ret, tc_state;
 365   1              U16 TimeOUT;
 366   1              
 367   1              tc_Ret = DSP_StopCmd();
 368   1      
 369   1              if (L2_DSP_Read_DMem16(DSP_DecodeStatus)&0x00C0)        // reset DSP_DecodeStatus
 370   1              {
 371   2                      L2_DSP_Write_DMem16(DSP_DecodeStatus, (L2_DSP_Read_DMem16(DSP_DecodeStatus)&0xFF3F));
 372   2              }
 373   1              
 374   1              TimeOUT = 0xffff;
 375   1              while (1)
 376   1              {
 377   2                      TimeOUT--;
 378   2                      if (TimeOUT == 0)
 379   2                      {
 380   3                              tc_Ret = DSP_DECODE_STATUS_TIMEOUT_ERROR;
 381   3                              break;
 382   3                      }
 383   2      
 384   2                      tc_state = MJPEG_DataIn();
 385   2                      if (tc_state == DSP_DATAIN_COMMAND_ERROR)
 386   2                      {
 387   3                              tc_Ret = tc_state;
 388   3                              break;
 389   3                      }
 390   2      
 391   2                      tc_state = MJPEG_DataOut();
 392   2      
 393   2                      if((SD_Detect==1) && (gc_CurrentCard==2))
 394   2                      {
 395   3                              tc_state=DSP_DECODE_END;        
 396   3                      }
 397   2                      if (tc_state == DSP_DATAOUT_COMMAND_ERROR)
 398   2                      {
 399   3                              tc_Ret = tc_state;
 400   3                              break;
 401   3                      }
 402   2                      else if (tc_state == DSP_USER_FILE_TYPE_ERROR)
 403   2                      {
 404   3                              break;
 405   3                      }
 406   2                      else if (tc_state == DSP_DECODE_END)
 407   2                      {
 408   3                              break;
 409   3                      }
 410   2              }
 411   1      
 412   1              // Close current file
 413   1              DOS_Close_File_r(tc_FileHandle);
 414   1      
 415   1              // wait for ramp down ok and Turn off DSP clock, ycc 081113
 416   1              {
 417   2                      U16 dbgTmp;                
 418   2              U16 TimeOUT = 0xFFFF;
 419   2                      do{
 420   3                              dbgTmp = L2_DSP_Read_DMem16(DSP_RestartFlag);  //read DSP 0x3F0B.0 ready status
 421   3                              TimeOUT --;             
 422   3                              if(TimeOUT==0)
 423   3                      {                       
 424   4                              break; 
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 8   

 425   4                              } 
 426   3                      }while(dbgTmp!=0);
 427   2              }
 428   1      
 429   1              if (L2_DSP_Read_DMem16(DSP_DecodeStatus)&0x00E0)        // reset DSP_DecodeStatus
 430   1              {
 431   2                      L2_DSP_Write_DMem16(DSP_DecodeStatus, (L2_DSP_Read_DMem16(DSP_DecodeStatus)&0xFF1F));
 432   2              }
 433   1      
 434   1              set_clock_mode(CLOCK_MODE_MP3);
 435   1      
 436   1              GLOBAL_REG[0x10] &= 0xFE;       //Turn off DSP clock for power saving
 437   1              return tc_Ret;
 438   1      }
 439          
 440          
 441          void mjpeg_idle()
 442          {
 443   1      
 444   1      }
 445          
 446          
 447          void mjpeg_init()
 448          {       
 449   1              if(gw_init_needed & SET_BIT5)
 450   1              {
 451   2                      gw_init_needed&=CLR_BIT5;
 452   2                      
 453   2                      gs_System_State.c_Phase = TASK_PHASE_STOP;
 454   2                      gs_System_State.c_FileHandle=2;
 455   2                      //(JC)search music file overall by FDB, findout 1st one in ROOT
 456   2                      gs_File_FCB[gs_System_State.c_FileHandle].dw_FDB_StartCluster = gdw_DOS_RootDirClus;
 457   2                      EXT_NameC[0] = 2;
 458   2                      EXT_NameC[1] = 'S';
 459   2                      EXT_NameC[2] = 'C';
 460   2                      EXT_NameC[3] = 'V';
 461   2                      EXT_NameC[4] = 'A';
 462   2                      EXT_NameC[5] = 'M';
 463   2                      EXT_NameC[6] = 'V';
 464   2                      DOS_Search_File(C_File_All|C_Cnt_FileNo,C_OtherFileType,C_CmpExtName|C_Next);
 465   2      
 466   2                      if(DOS_Search_File(C_File_All|C_By_FDB, C_OtherFHandle, C_CmpExtName|C_Next))
 467   2                      {
 468   3                              gw_init_needed |= SET_BIT8;
 469   3                              gc_Task_Next=C_Task_Menu;
 470   3                              gc_PhaseInx = 0;
 471   3                              return;
 472   3                      }
 473   2                      gc_Play_FileType=gs_File_FCB[gs_System_State.c_FileHandle].c_FileType;
 474   2                      //#if 1 
 475   2                      //set_clock_mode(3);
 476   2                      //#else
 477   2                      set_clock_mode(CLOCK_MODE_MJPEG);
 478   2                      //#endif
 479   2                      gc_PhaseInx=C_MjpegPause;
 480   2              }
 481   1      }
 482          
 483          
 484          void mjpeg_proc()
 485          {
 486   1              gc_KeyDet_Mask = 0;
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 9   

 487   1              if (MJPEG_DataIn() != DSP_SUCCESS)
 488   1              {
 489   2                      gc_PhaseInx = 5;        // End file process
 490   2                      return;
 491   2              }
 492   1              if (MJPEG_DataOut() != DSP_SUCCESS )
 493   1              {       // "file end" or "error format"
 494   2                      gc_PhaseInx = 5;        // End file process
 495   2              }
 496   1      }
 497          
 498          
 499          void mjpeg_playpause()
 500          {
 501   1              U8  i;
 502   1              U16 k,tw_temp,tw_AudioBR,tw_VideoBR;
 503   1              U8  tc_second, tc_minute;
 504   1              U8  *p_data;
 505   1              U16 tw_hour;
 506   1      
 507   1              switch(gs_System_State.c_Phase)
 508   1              {
 509   2                      case TASK_PHASE_PLAYACT:
 510   2                              if (MJPEG_PauseCmd() != DSP_SUCCESS)
 511   2                              {
 512   3                              }
 513   2      
 514   2                              gs_System_State.c_Phase = TASK_PHASE_PAUSE;
 515   2                              for(i=0;i<2;i++)  //20090604 temp
 516   2                              {
 517   3                                      TFT_PAUSE();
 518   3                              }
 519   2                      break;
 520   2      
 521   2                      case TASK_PHASE_PAUSE:
 522   2                      //Draw a black frame
 523   2                              for (k=0; k<512; k++)
 524   2                              {
 525   3                                      ((U32 *)gc_MotionJpegOutBuf)[k] = 0;
 526   3                              }
 527   2                              LCM_set_view(1, 0, 0, TFT_H_Size, TFT_V_Size); // horizontal view
 528   2      
 529   2                              for (i=0; i<20; i++)            //Jimi 090305
 530   2                              {
 531   3                                      MJPEG_MCU_LCM_DMA(2048, (U16)gc_MotionJpegOutBuf);
 532   3                              }
 533   2      
 534   2                              if (gc_Play_FileType == 0)
 535   2                              {       
 536   3                                      LCM_set_view(1, gw_x_start, gw_y_start, gw_width, gw_height); // horizontal view
 537   3                              }
 538   2                              else
 539   2                              {
 540   3                                      LCM_set_view(3, gw_x_start, gw_y_start, gw_width, gw_height); // horizontal view        
 541   3                              }
 542   2                              //------------------------------------------------------------------------------
 543   2                      //MJPEG resume cmd
 544   2                      if (Music_ResumeCmd() != DSP_SUCCESS)
 545   2                      {
 546   3      
 547   3                      }
 548   2                      gs_System_State.c_Phase = TASK_PHASE_PLAYACT;
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 10  

 549   2                      break;
 550   2      
 551   2                      case TASK_PHASE_FASTFWD:
 552   2                      case TASK_PHASE_FASTREV:
 553   2                              gs_System_State.c_Phase=TASK_PHASE_PLAYACT;
 554   2                      break;
 555   2      
 556   2                      default:
 557   2                              for (k=0; k<512; k++)
 558   2                              {
 559   3                                      ((U32 *)gc_MotionJpegOutBuf)[k] = 0;
 560   3                              }
 561   2                              LCM_set_view(1, 0, 0, TFT_H_Size, TFT_V_Size); // horizontal view
 562   2      
 563   2                              for (i=0; i<20; i++)            //Jimi 090305
 564   2                              {
 565   3                                      MJPEG_MCU_LCM_DMA(2048, (U16)gc_MotionJpegOutBuf);
 566   3                              }
 567   2              
 568   2                              //DSP wake up
 569   2                              Image_WakeUp(DSP_CLK_CTRL | SRAM2T_CTRL);
 570   2                              //DSP download
 571   2                              if(MJPEG_Download())   // Load IM, PM
 572   2                              {
 573   3      //                              dbprintf("DSP IMPM download err\n");
 574   3                              }
 575   2      
 576   2                              //Set file type, 0: SCV, 1: JPEG, 2: BMP, 3: GIF, 4: AMV
 577   2                              if (gc_Play_FileType == 0)
 578   2                              {
 579   3                                      L2_DSP_Write_DMem16(0x3F2F, 0x0000);    // SCV file
 580   3                              }
 581   2                              else
 582   2                              {
 583   3                                      L2_DSP_Write_DMem16(0x3F2F, 0x0004);    // AMV file
 584   3                              }
 585   2      
 586   2                              //initialize structure 'n variables
 587   2                              gs_DSP_GLOBAL_RAM.s_DSP_RAM.sc_RepeatMode = REPEAT_A;   // initial variables
 588   2      
 589   2                              //set volume;restore the volume value
 590   2                              if(gc_VolumeMute==0)
 591   2                              {
 592   3                              Music_SetVolumeCmd();
 593   3                              }
 594   2                              else
 595   2                              {
 596   3                                      L2_DSP_Write_DMem16(DSP_VolumeControl,0);//20090812 chiayen add VOL=0   
 597   3                              }
 598   2      
 599   2                              //Parsing motion jpeg header
 600   2                              if(DOS_Open_File_r(C_OtherFHandle, C_Open_FoundFile, C_NullFileName) || (gs_File_FCB[0].dw_File_TotalSi
             -ze==0)) 
 601   2                              {
 602   3                              }
 603   2                              if (gc_Play_FileType == 0)
 604   2                              {       // Parsing SCV header
 605   3                                      DOS_Read_File(C_OtherFHandle);
 606   3                                      gw_width = *((U16 *)(gc_PlayRecordDataBuf + 0x06));
 607   3                                      gw_height = *((U16 *)(gc_PlayRecordDataBuf + 0x08));
 608   3      
 609   3                                      gs_DSP_GLOBAL_RAM.sc_frame_rate  = gc_PlayRecordDataBuf[10];                    //Jimi 090410
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 11  

 610   3                                      gw_TotalSec =   *((U16 *)(gc_PlayRecordDataBuf+19));//Jimi 090410, total seconds.
 611   3      
 612   3                                      gw_x_start = (TFT_H_Size - gw_width) >> 1;
 613   3                                      gw_y_start = (TFT_V_Size - gw_height) >> 1;
 614   3                                      LCM_set_view(1, gw_x_start, gw_y_start, gw_width, gw_height); // horizontal view in normal order
 615   3      
 616   3                                      tw_AudioBR = *((U16 *)(gc_PlayRecordDataBuf + 0x0B));
 617   3                                      tw_VideoBR = *((U16 *)(gc_PlayRecordDataBuf + 0x0D));
 618   3      
 619   3                                      gs_DSP_GLOBAL_RAM.sw_data_start = ONE_SECTOR;
 620   3                                      gs_DSP_GLOBAL_RAM.sw_kbyte_per_sec = (tw_AudioBR + tw_VideoBR)/8;    //Jimi 090410
 621   3                                      gs_DSP_GLOBAL_RAM.sw_sector_cnt = (U16)(((U32)(tw_AudioBR + tw_VideoBR) * 1000) >> (3 + 1 + 9));        // 0.
             -5 sec for ramp down
 622   3                                      gs_DSP_GLOBAL_RAM.sdw_sector_num = (gs_File_FCB[gs_System_State.c_FileHandle].dw_File_TotalSize - ONE_
             -SECTOR) >> 9;        // minus header size            
 623   3                              }
 624   2                              else
 625   2                              {       // Parsing AMV header
 626   3                                      DOS_Read_File(C_OtherFHandle);
 627   3                                      p_data = (U8 *)(gc_PlayRecordDataBuf + 0x40);
 628   3                                      gw_width = (U16)(*p_data++);
 629   3                                      gw_width |= ((U16)(*p_data) << 8);
 630   3                                      p_data += 3;
 631   3                                      gw_height = (U16)(*p_data++);
 632   3                                      gw_height |= ((U16)(*p_data) << 8);
 633   3      
 634   3                                      gs_DSP_GLOBAL_RAM.sc_frame_rate  = gc_PlayRecordDataBuf[72];    //Jimi 090410
 635   3      
 636   3                                      gw_x_start = (TFT_H_Size - gw_width) >> 1;
 637   3                                      gw_y_start = (TFT_V_Size - gw_height) >> 1;
 638   3                                      LCM_set_view(3, gw_x_start, gw_y_start, gw_width, gw_height); // horizontal view in BMP order
 639   3                              
 640   3                                      p_data += 0x0F;
 641   3                                      tc_second = *p_data++;
 642   3                                      tc_minute = *p_data++;
 643   3                                      tw_hour = (U16)(*p_data++);
 644   3                                      tw_hour |= ((U16)(*p_data++) << 8);
 645   3      
 646   3                                      gw_TotalSec = (tw_hour * 3600) + (tc_minute * 60) + tc_second;
 647   3                                      gs_DSP_GLOBAL_RAM.sw_kbyte_per_sec = gs_File_FCB[gs_System_State.c_FileHandle].dw_File_TotalSize/1000/
             -gw_TotalSec;    //Jimi 090410
 648   3      
 649   3                                      gs_DSP_GLOBAL_RAM.sw_data_start = 0;
 650   3                                      gs_DSP_GLOBAL_RAM.sdw_sector_num = gs_File_FCB[gs_System_State.c_FileHandle].dw_File_TotalSize >> 9;
 651   3                                      gs_DSP_GLOBAL_RAM.sw_sector_cnt = (gs_DSP_GLOBAL_RAM.sdw_sector_num / gw_TotalSec) >> 1;        // 0.5 sec fo
             -r ramp down
 652   3                              }
 653   2      
 654   2                              gw_IMG_DMA_Sz = gw_width << 3;  //DSP_MJPEG_SOutBufDataSz = width *4(Lines) *2(Bytes/pixel)
 655   2                              L2_DSP_Write_DMem16(DSP_MJPEG_SOutBufDataSz, gw_IMG_DMA_Sz);
 656   2                              tw_temp = gw_width <<4;
 657   2                              L2_DSP_Write_DMem16(DSP_MJPEG_SOutBufMaxSzPixel, tw_temp);
 658   2      
 659   2                              gw_IMG_DMABuf_ptr[0] = 0x3000;
 660   2                              tw_temp = gw_IMG_DMA_Sz/2;
 661   2                              for( i =0; i< 3; i++)
 662   2                              {
 663   3                                      gw_IMG_DMABuf_ptr[i+1] = gw_IMG_DMABuf_ptr[i] + tw_temp;
 664   3                              }
 665   2                      
 666   2                              if (MJPEG_PlayCmd() == DSP_PLAY_COMMAND_ERROR)  //motion play cmd
 667   2                              {
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 12  

 668   3      
 669   3                              }
 670   2      
 671   2                              if(gc_Play_FileType == 0)
 672   2                              {
 673   3                                      DOS_Read_File(C_OtherFHandle);
 674   3                              }
 675   2                      
 676   2                              gs_System_State.c_Phase = TASK_PHASE_PLAYACT;
 677   2                      break;
 678   2              }
 679   1              #if 1
 680   1              set_clock_mode(CLOCK_MODE_MJPEG2);
 681   1              #else
                      set_clock_mode(CLOCK_MODE_MJPEG);
                      #endif
 684   1              gc_PhaseInx = 2;
 685   1      }
 686          
 687          
 688          void mjpeg_stop()
 689          {
 690   1              U8 tc_Ret;
 691   1      
 692   1              if (gs_System_State.c_Phase != TASK_PHASE_STOP)
 693   1              {                                       
 694   2                      tc_Ret = MJPEG_StopCmd(gs_System_State.c_FileHandle); //DSP stop cmd
 695   2                      if (tc_Ret != DSP_SUCCESS)
 696   2                      {
 697   3                              //dbprintf("MJPEG stop error !!\n");
 698   3                      }
 699   2      
 700   2                      gs_System_State.c_Phase = TASK_PHASE_STOP;
 701   2              }
 702   1      }
 703          
 704          
 705          void mjpeg_endfile()
 706          {       
 707   1              mjpeg_stop(); //DSP stop cmd// Mark test code   
 708   1          if(gc_RepPlayMode==C_NoRepeat) //no repeat  //20090331
 709   1          {
 710   2              if(gw_FileIndex[gs_System_State.c_FileHandle]==gw_FileTotalNumber[gs_System_State.c_FileHandle])
 711   2              {
 712   3                  gc_PhaseInx=0;  
 713   3                              gc_DispWallpaper=0;
 714   3                              gw_Disp_CurrentSec=0;
 715   3                              gs_System_State.c_Phase=2;
 716   3                              gc_Play_FileType=2;
 717   3                              gw_TotalSec=0;
 718   3                              LCM_Display_Func1();
 719   3              }
 720   2                      else
 721   2                      {
 722   3                              if(gb_DirPlay_Flag==1)
 723   3                              {
 724   4                                      DOS_Search_File(C_File_OneDir|C_By_FDB, C_OtherFileType, C_CmpExtName|C_Next);
 725   4                              }
 726   3                              else
 727   3                              {
 728   4                      DOS_Search_File(C_File_All|C_By_FDB, C_OtherFileType,C_CmpExtName|C_Next);
 729   4                              }
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 13  

 730   3                  gc_PhaseInx=3;                              
 731   3                      }  
 732   2          }
 733   1              else
 734   1              {
 735   2                      if(gc_RepPlayMode==C_RepeatOne) //repeat one
 736   2                  {
 737   3                  gc_PhaseInx=3;      
 738   3              }
 739   2                      else
 740   2                      {
 741   3                              DOS_Search_File(C_File_All|C_By_FDB, C_OtherFileType, C_CmpExtName|C_Next);
 742   3                              gc_PhaseInx = 3;
 743   3                      }
 744   2              }
 745   1              gc_Play_FileType=gs_File_FCB[gs_System_State.c_FileHandle].c_FileType;           //Jimi 090305  
 746   1      }
 747          
 748          
 749          void mjpeg_next()
 750          {
 751   1              U8 tc_Ret;
 752   1      
 753   1              switch(gs_System_State.c_Phase)
 754   1              {
 755   2                      case TASK_PHASE_STOP:
 756   2                              if (gw_FileIndex[gs_System_State.c_FileHandle] == 0)
 757   2                              {
 758   3                                      return;
 759   3                              }
 760   2                              gc_PhaseInx = 0;
 761   2                      break;
 762   2      
 763   2                      case TASK_PHASE_PLAYACT:
 764   2                              gc_PhaseInx = 3;
 765   2                              gc_KeyDet_Mask = 1;
 766   2                      break;
 767   2      
 768   2                      case TASK_PHASE_PAUSE:
 769   2                              gc_PhaseInx = 0;
 770   2                      break;
 771   2              }
 772   1      
 773   1              if (gs_System_State.c_Phase != TASK_PHASE_STOP)
 774   1              {
 775   2                      tc_Ret = MJPEG_StopCmd(gs_System_State.c_FileHandle); //DSP stop cmd
 776   2                      if (tc_Ret != DSP_SUCCESS)
 777   2                      {
 778   3      //                      dbprintf("NEXT MJPEG stop error !!\n");
 779   3                      }               
 780   2                      gs_System_State.c_Phase = TASK_PHASE_STOP;
 781   2              }
 782   1              DOS_Search_File(C_File_All|C_By_FDB, C_OtherFileType, C_CmpExtName|C_Next);     
 783   1              gc_Play_FileType=gs_File_FCB[gs_System_State.c_FileHandle].c_FileType;           //Jimi 090305
 784   1              gs_System_State.c_Phase = TASK_PHASE_STOP;
 785   1      }
 786          
 787          
 788          void mjpeg_prev()
 789          {
 790   1              U8 tc_Ret;
 791   1              switch(gs_System_State.c_Phase)
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 14  

 792   1              {
 793   2                      case TASK_PHASE_STOP:
 794   2                              if (gw_FileIndex[gs_System_State.c_FileHandle] == 0)
 795   2                              {
 796   3                                      return;
 797   3                              }
 798   2                              gc_PhaseInx=0;
 799   2                      break;
 800   2              
 801   2                      case TASK_PHASE_PLAYACT:
 802   2                              gc_PhaseInx = 3;
 803   2                              gc_KeyDet_Mask = 1;     
 804   2                      break;
 805   2              
 806   2                      case TASK_PHASE_PAUSE:
 807   2                              gc_PhaseInx = 0;
 808   2                      break;
 809   2              }
 810   1              
 811   1              if (gs_System_State.c_Phase != TASK_PHASE_STOP)
 812   1              {               
 813   2                      tc_Ret = MJPEG_StopCmd(gs_System_State.c_FileHandle); //DSP stop cmd
 814   2                      if (tc_Ret != DSP_SUCCESS)
 815   2                      {
 816   3      //                      dbprintf("MJPEG stop error !!\n");
 817   3                      }
 818   2                      gs_System_State.c_Phase = TASK_PHASE_STOP;
 819   2              }
 820   1              DOS_Search_File(C_File_All|C_By_FDB, C_OtherFileType, C_CmpExtName|C_Prev);
 821   1              gc_Play_FileType=gs_File_FCB[gs_System_State.c_FileHandle].c_FileType;           //Jimi 090305
 822   1              gs_System_State.c_Phase = TASK_PHASE_STOP;
 823   1      }
 824          
 825          
 826          void mjpeg_fastfwd()
 827          {
 828   1              U8      tc_Ret;
 829   1              U16     tw_curr_sec;
 830   1              U32     tdw_datapoint,tdw_sector;
 831   1      
 832   1              if (gs_System_State.c_Phase == TASK_PHASE_STOP)
 833   1              {
 834   2                      return;
 835   2              }
 836   1      
 837   1              if (gs_System_State.c_Phase != TASK_PHASE_FASTFWD)
 838   1              {
 839   2                      gs_System_State.c_Phase = TASK_PHASE_FASTFWD;
 840   2                      L2_DSP_Write_DMem16(0x3F59, 0x0001);
 841   2              }
 842   1              
 843   1              if (L2_DSP_Read_DMem16(0x3F5A) == 0x0001)  //FF/FR mechanism; accumulate time, overflow?
 844   1              {
 845   2                      tdw_sector = gs_DSP_GLOBAL_RAM.sdw_sector_num - gs_DSP_GLOBAL_RAM.sw_sector_cnt;
 846   2                      gs_File_FCB[gs_System_State.c_FileHandle].dw_File_CurrentCluster = gs_File_FCB[gs_System_State.c_FileHan
             -dle].dw_File_StartCluster;
 847   2                      if (tdw_sector > gs_DSP_GLOBAL_RAM.sw_sector_cnt)
 848   2                      {
 849   3                              tdw_datapoint = gs_File_FCB[gs_System_State.c_FileHandle].dw_File_DataPoint + ((U32)gs_DSP_GLOBAL_RAM.s
             -w_sector_cnt << 9);
 850   3                              gs_File_FCB[gs_System_State.c_FileHandle].dw_File_CurrentCluster = DOS_Seek_File(gs_System_State.c_File
             -Handle, tdw_datapoint>>9);
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 15  

 851   3                              gs_DSP_GLOBAL_RAM.sdw_sector_num = tdw_sector;
 852   3              
 853   3                              tw_curr_sec = tdw_datapoint/1000/gs_DSP_GLOBAL_RAM.sw_kbyte_per_sec;    
 854   3                              gs_DSP_GLOBAL_RAM.sw_frm_cnt = tw_curr_sec * (U16)gs_DSP_GLOBAL_RAM.sc_frame_rate;      
 855   3                              L2_DSP_Write_DMem16(DSP_DecodeFrameCounter, gs_DSP_GLOBAL_RAM.sw_frm_cnt);
 856   3      
 857   3                              gs_DSP_GLOBAL_RAM.sc_DM_Index = 0;              // reset bitstream buffer index
 858   3                              L2_DSP_Write_DMem16(0x3F5A, 0x0000);
 859   3                      }
 860   2                      else
 861   2                      {
 862   3                              tdw_datapoint = gs_File_FCB[gs_System_State.c_FileHandle].dw_File_TotalSize - ((U32)gs_DSP_GLOBAL_RAM.s
             -w_sector_cnt << 9);
 863   3                              gs_File_FCB[gs_System_State.c_FileHandle].dw_File_CurrentCluster = DOS_Seek_File(gs_System_State.c_File
             -Handle, tdw_datapoint>>9);
 864   3                              gs_DSP_GLOBAL_RAM.sdw_sector_num = gs_DSP_GLOBAL_RAM.sw_sector_cnt;
 865   3              
 866   3                              gs_DSP_GLOBAL_RAM.sc_DM_Index = 0;              // reset bitstream buffer index
 867   3                              L2_DSP_Write_DMem16(0x3F59, 0x0000);
 868   3                              L2_DSP_Write_DMem16(0x3F5A, 0x0000);
 869   3      
 870   3                              gs_DSP_GLOBAL_RAM.sw_frm_cnt = gw_TotalSec * (U16)gs_DSP_GLOBAL_RAM.sc_frame_rate;  //20090414 move her
             -e
 871   3                              L2_DSP_Write_DMem16(DSP_DecodeFrameCounter, gs_DSP_GLOBAL_RAM.sw_frm_cnt);
 872   3      
 873   3                              tc_Ret = MJPEG_StopCmd(gs_System_State.c_FileHandle);
 874   3                              if (tc_Ret != DSP_SUCCESS)
 875   3                              {
 876   4                              }
 877   3                              gs_System_State.c_Phase = TASK_PHASE_STOP; //Jimi 090410
 878   3                              return;
 879   3                      }
 880   2              }
 881   1      
 882   1              if (MJPEG_DataIn() == DSP_DATAIN_COMMAND_ERROR)
 883   1              {
 884   2      
 885   2              }
 886   1      
 887   1              if (MJPEG_DataOut() != DSP_SUCCESS )
 888   1              {       // "file end" or "error format"
 889   2      
 890   2              }
 891   1      }
 892          
 893          
 894          void mjpeg_fastrev()
 895          {
 896   1              U8      tc_Ret;
 897   1              U16     tw_curr_sec;
 898   1              U32     tdw_datapoint;
 899   1      
 900   1              if ((gs_System_State.c_Phase != TASK_PHASE_FASTREV) && (gs_System_State.c_Phase != TASK_PHASE_PAUSE))
 901   1              {
 902   2                      gs_System_State.c_Phase = TASK_PHASE_FASTREV;
 903   2                      L2_DSP_Write_DMem16(0x3F59, 0x0001);
 904   2              }
 905   1      
 906   1              if (L2_DSP_Read_DMem16(0x3F5A) == 0x0001)  //FF/FR mechanism; decrease time, underflow??
 907   1              {
 908   2                      gs_File_FCB[gs_System_State.c_FileHandle].dw_File_CurrentCluster = gs_File_FCB[gs_System_State.c_FileHan
             -dle].dw_File_StartCluster;
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 16  

 909   2                      tdw_datapoint = gs_File_FCB[gs_System_State.c_FileHandle].dw_File_DataPoint - ((U32)gs_DSP_GLOBAL_RAM.sw
             -_sector_cnt << 9);
 910   2                      
 911   2                      tw_curr_sec = tdw_datapoint/1000/gs_DSP_GLOBAL_RAM.sw_kbyte_per_sec;  //Jimi 090410     
 912   2                      gs_DSP_GLOBAL_RAM.sw_frm_cnt = tw_curr_sec * (U16)gs_DSP_GLOBAL_RAM.sc_frame_rate;
 913   2                      L2_DSP_Write_DMem16(DSP_DecodeFrameCounter, gs_DSP_GLOBAL_RAM.sw_frm_cnt);
 914   2                      if (tdw_datapoint > gs_DSP_GLOBAL_RAM.sw_data_start)
 915   2                      {
 916   3                              gs_DSP_GLOBAL_RAM.sdw_sector_num += gs_DSP_GLOBAL_RAM.sw_sector_cnt;
 917   3                      }
 918   2                      else
 919   2                      {
 920   3                              tdw_datapoint = gs_DSP_GLOBAL_RAM.sw_data_start;
 921   3                              gs_DSP_GLOBAL_RAM.sdw_sector_num = (gs_File_FCB[gs_System_State.c_FileHandle].dw_File_TotalSize - tdw_d
             -atapoint) >> 9;       // minus header size
 922   3      
 923   3                              L2_DSP_Write_DMem16(0x3F59, 0x0000);
 924   3                              tc_Ret = MJPEG_PauseCmd();
 925   3                              if (tc_Ret != DSP_SUCCESS)
 926   3                              {
 927   4      
 928   4                              }
 929   3                              gs_System_State.c_Phase = TASK_PHASE_PAUSE; //090410
 930   3                              gs_DSP_GLOBAL_RAM.sw_frm_cnt = 0;
 931   3                              L2_DSP_Write_DMem16(DSP_DecodeFrameCounter, gs_DSP_GLOBAL_RAM.sw_frm_cnt);      //Jimi 090408
 932   3                      }
 933   2                      gs_File_FCB[gs_System_State.c_FileHandle].dw_File_CurrentCluster = DOS_Seek_File(gs_System_State.c_FileH
             -andle, tdw_datapoint>>9);
 934   2                      gs_DSP_GLOBAL_RAM.sc_DM_Index = 0;              // reset bitstream buffer index
 935   2                      L2_DSP_Write_DMem16(0x3F5A, 0x0000);
 936   2              }
 937   1      
 938   1              if (MJPEG_DataIn() == DSP_DATAIN_COMMAND_ERROR)
 939   1              {
 940   2      
 941   2              }
 942   1      
 943   1              if (MJPEG_DataOut() != DSP_SUCCESS )
 944   1              {       // "file end" or "error format"
 945   2      
 946   2              }
 947   1      }
 948          
 949          
 950          void mjpeg_fffr_end()
 951          {
 952   1              if ((gs_System_State.c_Phase == TASK_PHASE_FASTFWD) || (gs_System_State.c_Phase == TASK_PHASE_FASTREV))
 953   1              {
 954   2                      L2_DSP_Write_DMem16(0x3F59, 0x0000);
 955   2                      if (L2_DSP_Read_DMem16(0x3F5A) == 0x0001)
 956   2                      {
 957   3                              gs_DSP_GLOBAL_RAM.sc_DM_Index = 0;              // reset bitstream buffer index
 958   3                              L2_DSP_Write_DMem16(0x3F5A, 0x0000);
 959   3                      }
 960   2                      gc_PhaseInx = 3;
 961   2              }
 962   1              else if (gs_System_State.c_Phase == TASK_PHASE_STOP)    // fastfwd to file end
 963   1              {
 964   2                      gc_PhaseInx = 3; //next //Jimi 090406
 965   2                      gc_KeyDet_Mask = 1;
 966   2      
 967   2                      DOS_Search_File(C_File_All|C_By_FDB, C_OtherFileType, C_CmpExtName|C_Next);     
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 17  

 968   2                      gc_Play_FileType=gs_File_FCB[gs_System_State.c_FileHandle].c_FileType;
 969   2              }
 970   1              else if (gs_System_State.c_Phase == TASK_PHASE_PAUSE)   // fastrev to file start
 971   1              {
 972   2                      gc_PhaseInx = 3;                                                                        // if fast backward to the file start then pause and resume
 973   2              }
 974   1      }
 975          
 976          
 977          void mjpeg_volup()
 978          {
 979   1              gw_LogData_Timer=60;
 980   1              Music_VolumeUpCmd();
 981   1      
 982   1              if(gs_System_State.c_Phase==TASK_PHASE_STOP)  //20090331
 983   1          {
 984   2              gc_PhaseInx=C_MjpegIdle;   
 985   2          }
 986   1          else
 987   1          {
 988   2              gc_PhaseInx=C_MjpegProc;
 989   2          }
 990   1      }
 991          
 992          
 993          void mjpeg_voldn()
 994          {
 995   1              gw_LogData_Timer=60;
 996   1              Music_VolumeDownCmd();
 997   1      
 998   1              if(gs_System_State.c_Phase==TASK_PHASE_STOP)  //20090331
 999   1          {
1000   2              gc_PhaseInx=C_MjpegIdle;   
1001   2          }
1002   1          else
1003   1          {
1004   2              gc_PhaseInx=C_MjpegProc;
1005   2          }
1006   1      }
1007          
1008          
1009          void mjpeg_back2uplevel()
1010          {
1011   1              if ((gs_System_State.c_Phase == TASK_PHASE_PLAYACT) || (gs_System_State.c_Phase == TASK_PHASE_PAUSE))
1012   1              {               
1013   2                      mjpeg_stop(); //DSP stop cmd    
1014   2              }
1015   1              
1016   1              gc_Task_Next=C_Task_Menu;
1017   1              gw_init_needed |= SET_BIT8;
1018   1              gc_PhaseInx=0;
1019   1      }
1020          
1021          
1022          void MjpegMenu_Process()
1023          {
1024   1              data    bit     tb_Confirm=0;
1025   1              gc_refresh_type = REFRESH_ALL;
1026   1              if(gc_PhaseInx!=2)
1027   1              {
1028   2              switch(gc_PhaseInx)
1029   2              {
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 18  

1030   3                  case C_MjpegMenu:
1031   3                                      gc_refresh_type = REFRESH_ALL;
1032   3                                      tb_Confirm = 1;
1033   3                  break;
1034   3      
1035   3                  case C_MjpegNext:
1036   3                                      gc_refresh_type = REFRESH_NEXT;
1037   3                                      if(gc_LCMDispIndex==2)
1038   3                                      {
1039   4                                              gc_LCMDispIndex=0;
1040   4                              }
1041   3                                      else
1042   3                                      {
1043   4                                              gc_LCMDispIndex++;
1044   4                                      }
1045   3                                      //TFT_MovieMenu(); //--sunzhenk add 100703
1046   3                                      Menu_Disp_Item_Other(gc_TuneVolFreqStatus,gc_LCMDispIndex,gc_refresh_type);
1047   3                  break;
1048   3      
1049   3                  case C_MjpegPrev:
1050   3                                      gc_refresh_type = REFRESH_PREV;
1051   3                                      if(gc_LCMDispIndex==0)
1052   3                                      {
1053   4                                              gc_LCMDispIndex=2;
1054   4                                      }
1055   3                                      else
1056   3                                      {
1057   4                                              gc_LCMDispIndex--;
1058   4                                      }
1059   3                                      //FT_MovieMenu();
1060   3                                      Menu_Disp_Item_Other(gc_TuneVolFreqStatus,gc_LCMDispIndex,gc_refresh_type);
1061   3                  break;      
1062   3                      }
1063   2                      
1064   2                      if(tb_Confirm==1) //confirm selected item
1065   2                      {
1066   3                              if(gc_LCMDispIndex==0)  //Mjpeg Dir
1067   3                              {
1068   4                                      mjpeg_stop();
1069   4                                      gc_TaskMode_BkUp=C_Task_Mjpeg;
1070   4                                      gc_Task_Next=C_Task_Dir;
1071   4                                      gc_ShowTimer=0;
1072   4                                      gc_TuneVolFreqStatus=0;
1073   4                                      return;
1074   4                              }
1075   3                              else if(gc_LCMDispIndex==1)  //Select Play Mode
1076   3                              {
1077   4                                      gc_DispPlayMenuAct=1;
1078   4                                      gc_TuneVolFreqStatus=22;
1079   4                                      return;
1080   4                              }
1081   3                              else if(gc_LCMDispIndex==2)  //Exit
1082   3                              {
1083   4                                      gc_ShowTimer=0;
1084   4                                      gc_TuneVolFreqStatus=0;
1085   4                                      gc_PhaseInx=C_MjpegPause;
1086   4                                      return;
1087   4                              }
1088   3                      }
1089   2                      gc_PhaseInx=C_MjpegIdle;
1090   2              }       
1091   1      }
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 19  

1092          
1093          
1094          void RepeatMode_Process_Mjpeg()
1095          {
1096   1              data    bit     tb_Confirm=0;
1097   1      
1098   1              if(gc_PhaseInx)
1099   1              {
1100   2              switch(gc_PhaseInx)
1101   2              {
1102   3                  case C_MjpegMenu:
1103   3                                      gc_refresh_type = REFRESH_ALL;
1104   3                                      tb_Confirm=1;
1105   3                  break;
1106   3      
1107   3                  case C_MjpegNext:
1108   3                                      gc_refresh_type = REFRESH_NEXT;
1109   3                                      if(gc_LCMDispIndex==2)
1110   3                                      {
1111   4                                              gc_LCMDispIndex=0;
1112   4                                      }
1113   3                                      else
1114   3                                      {
1115   4                                              gc_LCMDispIndex++;
1116   4                                      }
1117   3                                      //TFT_MoviePlayMode();
1118   3                                      Menu_Disp_Item_Other(gc_TuneVolFreqStatus,gc_LCMDispIndex,gc_refresh_type);
1119   3                  break;
1120   3      
1121   3                  case C_MjpegPrev:
1122   3                                      gc_refresh_type = REFRESH_PREV;
1123   3                                      if(gc_LCMDispIndex==0)
1124   3                                      {
1125   4                                              gc_LCMDispIndex=2;
1126   4                                      }
1127   3                                      else
1128   3                                      {
1129   4                                              gc_LCMDispIndex--;
1130   4                                      }
1131   3                                      //TFT_MoviePlayMode();
1132   3                                      Menu_Disp_Item_Other(gc_TuneVolFreqStatus,gc_LCMDispIndex,gc_refresh_type);
1133   3                  break;
1134   3              }
1135   2              
1136   2                      if(tb_Confirm==1) //enter child dir or confirm selected item
1137   2                      {
1138   3                              if(gc_LCMDispIndex==0)
1139   3                              {
1140   4                                      gc_RepPlayMode=0;
1141   4                              }
1142   3                              else if(gc_LCMDispIndex==1)
1143   3                              {
1144   4                                      gc_RepPlayMode=1;
1145   4                              }
1146   3                              else if(gc_LCMDispIndex==2)
1147   3                              {
1148   4                                      gc_RepPlayMode=2;
1149   4                              }
1150   3                              gc_ShowTimer=0;
1151   3                              gc_TuneVolFreqStatus=0;
1152   3                              gc_DispPlayMenuAct=0;
1153   3                              gc_PhaseInx=C_MjpegPause;
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 20  

1154   3                              return;
1155   3                      }
1156   2                      gc_PhaseInx=C_MjpegIdle;
1157   2              }
1158   1      }       
1159          
1160          void LCM_Display_Mjpeg2()
1161          {
1162   1              if(gc_TuneVolFreqStatus==1)     // VOLUME ADJ.
1163   1              {
1164   2                      if(gc_DispWallpaper!=2)
1165   2                      {
1166   3                              gb_TFT_VOL_FM=0;        // 0=VOL adj.  1=FM adj.
1167   3                              //TFT_Main_VOL_FM_ADJ();
1168   3                              Menu_Disp_Item_Play(gc_TuneVolFreqStatus,gc_LCMDispIndex,gc_refresh_type);
1169   3                              gc_DispWallpaper=2;
1170   3                              gc_DisplayVol=0xFF;
1171   3                      }
1172   2                      if(gc_DisplayVol!=gs_DSP_GLOBAL_RAM.sw_Volume)
1173   2                      {
1174   3                              gc_DisplayVol=gs_DSP_GLOBAL_RAM.sw_Volume;
1175   3                              TFT_ShowVOLAdj();
1176   3                      }
1177   2              }
1178   1              else if(gc_TuneVolFreqStatus==2)        // FM ADJ.
1179   1              {
1180   2                      gc_DispPlayMenuAct=0x12;    //hao.yang add for auto back 090603
1181   2      
1182   2                      if(gc_DispWallpaper!=3)
1183   2                      {
1184   3                              gb_TFT_VOL_FM=1;        // 0=VOL adj.  1=FM adj.
1185   3                              //TFT_Main_VOL_FM_ADJ();
1186   3                              Menu_Disp_Item_Play(gc_TuneVolFreqStatus,gc_LCMDispIndex,gc_refresh_type);
1187   3                              gc_DispWallpaper=3;
1188   3                              gw_DisplayFreq=0;
1189   3                      }
1190   2      
1191   2                      if(gw_DisplayFreq!=gw_FM_frequency)
1192   2                      {
1193   3                              gb_FlashNoFileflag=0;
1194   3                              gw_DisplayFreq=gw_FM_frequency;
1195   3                              TFT_ShowFMFreqAdj(); 
1196   3                      }
1197   2              }
1198   1              else if(gc_TuneVolFreqStatus==21)       //Mjpeg menu
1199   1              {
1200   2                      gc_ShowTimer=72;
1201   2                      IR_Service_Process_Menu_1();
1202   2      
1203   2                      if(gc_DispWallpaper!=22)
1204   2                      {
1205   3                              gc_DispWallpaper=22;
1206   3                              gc_LCMDispIndex=0;
1207   3                              gc_PhaseInx=0;
1208   3                              //TFT_MovieMenu(); //--sunzhenk add 100703
1209   3                              Menu_Disp_Item_Other(gc_TuneVolFreqStatus,gc_LCMDispIndex,gc_refresh_type);
1210   3                      }
1211   2                      MjpegMenu_Process();
1212   2              }
1213   1              else if(gc_TuneVolFreqStatus==22)       //Mjpeg repeat mode menu
1214   1              {
1215   2                      gc_ShowTimer=72;
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 21  

1216   2                      IR_Service_Process_Menu_1();
1217   2      
1218   2                      if(gc_DispWallpaper!=23)
1219   2                      {
1220   3                              gc_DispWallpaper=23;
1221   3                              gc_LCMDispIndex=0;
1222   3                              gc_PhaseInx=0;
1223   3                              //TFT_MoviePlayMode(); //--sunzhenk add 100703
1224   3                              Menu_Disp_Item_Other(gc_TuneVolFreqStatus,gc_LCMDispIndex,gc_refresh_type);
1225   3                      }
1226   2                      RepeatMode_Process_Mjpeg();
1227   2              }       
1228   1      }
1229          
1230          void FM_FREQ_CHGUP_MPEG(void) //chiayen0807
1231          {
1232   1              gw_LogData_Timer=60;
1233   1          FM_FREQ_CHG(1,1);
1234   1      
1235   1              if(gs_System_State.c_Phase==TASK_PHASE_STOP)
1236   1          {
1237   2              gc_PhaseInx=C_MjpegIdle;   
1238   2          }
1239   1          else
1240   1          {
1241   2              gc_PhaseInx=C_MjpegProc;
1242   2          }
1243   1      }
1244          
1245          void FM_FREQ_CHGDOWN_MPEG(void) //chiayen0807
1246          {
1247   1              gw_LogData_Timer=60;
1248   1          FM_FREQ_CHG(0,1);
1249   1      
1250   1              if(gs_System_State.c_Phase==TASK_PHASE_STOP)
1251   1          {
1252   2              gc_PhaseInx=C_MjpegIdle;   
1253   2          }
1254   1          else
1255   1          {
1256   2              gc_PhaseInx=C_MjpegProc;
1257   2          }
1258   1      }
1259          
1260          
1261          void Play_SDFlash_DosInit_Mjpeg()
1262          {
1263   1              gb_FindFlag = 0;
1264   1              gc_PhaseInx=0;
1265   1              gw_init_needed=0xFFFF;
1266   1      
1267   1              if (DOS_Initialize())
1268   1              {
1269   2              }
1270   1              else
1271   1              {
1272   2                      gc_ShowTimer=0;  //20090331
1273   2                      gc_DispWallpaper=1;
1274   2                      gc_TuneVolFreqStatus=0;
1275   2                      gb_FindFlag = 0;
1276   2                      gc_PhaseInx=0;
1277   2                      gw_init_needed=0xFFFF;
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 22  

1278   2      
1279   2                      gc_TaskMode_BkUp=C_Task_Play;//(JC)I0304 for back to rite TASK from Dir-list
1280   2                      gc_Task_Next=C_Task_Play;
1281   2      
1282   2                      gs_System_State.c_FileHandle=0;
1283   2                      gc_MenuItemCount=0;       
1284   2                      gs_File_FCB[0].dw_FDB_StartCluster = gdw_DOS_RootDirClus;           
1285   2                      DOS_Search_File(C_File_All|C_Cnt_FileNo, C_MusicFileType, C_CmpExtName|C_Next);//count music file no. in
             - root
1286   2                      gc_PhaseInx=0;
1287   2                      gb_TFT_refresh=1;
1288   2                      gc_DispWallpaper=0xFF;
1289   2              }
1290   1      }
1291          
1292          
1293          void Play_SourceDetect_Process_Mjpeg()
1294          {
1295   1              gb_SD_Exist_pre=gb_SD_Exist;
1296   1              if(!SD_Detect)  //SD exist
1297   1          {
1298   2                      gb_SD_Exist=1;     //SD exist
1299   2          }
1300   1              else
1301   1              {
1302   2                      gb_SD_Exist=0;
1303   2                      gb_SDNoFileflag=0;
1304   2              }
1305   1              
1306   1              gb_Host_Exist_pre=gb_Host_Exist;
1307   1              if(!Host_DetectDevice())
1308   1              {
1309   2                      gb_Host_Exist=1;        //host_exist            
1310   2              }
1311   1              else
1312   1              {
1313   2                      gb_Host_Exist=0;
1314   2                      gc_HostNoFileflag=0;
1315   2              }
1316   1      
1317   1              if((gc_CurrentCard==0) && ((gb_Host_Exist_pre!=gb_Host_Exist)||(gb_SD_Exist_pre!=gb_SD_Exist)))
1318   1              {
1319   2                      if((gb_Host_Exist_pre!=gb_Host_Exist) && (gb_Host_Exist==1))
1320   2                      {
1321   3                              gc_CurrentCard=5;
1322   3                      }
1323   2                      else if((gb_SD_Exist_pre!=gb_SD_Exist) && (gb_SD_Exist==1))
1324   2                      {
1325   3                              gc_CurrentCard=2;       
1326   3                      }
1327   2                      else
1328   2                      {
1329   3                              gc_CurrentCard=0;       
1330   3                      }
1331   2              }
1332   1              else
1333   1              {
1334   2                      if(gc_CurrentCard==2)
1335   2                      {
1336   3                              if(gc_Dosinitfail==0)  //20090803 chiayen add
1337   3                              {
1338   4                                      if((gb_Host_Exist_pre!=gb_Host_Exist) && (gb_Host_Exist==1))
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 23  

1339   4                                      {
1340   5                                              gc_CurrentCard=5;
1341   5                                      }
1342   4                                      else if(((gb_SD_Exist==0) || (gb_SDNoFileflag==1)) && (gb_Host_Exist==1))
1343   4                                      {
1344   5                                              gc_CurrentCard=5;
1345   5                                              if(gc_HostNoFileflag==1)
1346   5                                              {
1347   6                                                      gc_CurrentCard=0;       
1348   6                                              }
1349   5                                      }
1350   4                                      else if((gb_SD_Exist==0) || (gb_SDNoFileflag==1))
1351   4                                      {
1352   5                                              gc_CurrentCard=0;       
1353   5                                      }
1354   4                              }
1355   3                              else //20090803 chiayen add for SD Dos initial fail
1356   3                              {
1357   4                                      if((gb_Host_Exist==1) && (gc_HostNoFileflag==0))
1358   4                                      {
1359   5                                              gc_CurrentCard=5;
1360   5                                      }
1361   4                                      else
1362   4                                      {
1363   5                                              gc_CurrentCard=0;
1364   5                                      }
1365   4                                      gc_Dosinitfail=0;                               
1366   4                              }
1367   3                      }
1368   2                      if(gc_CurrentCard==5)
1369   2                      {
1370   3                              if(gc_Dosinitfail==0)  //20090803 chiayen add
1371   3                              {
1372   4                                      if((gb_SD_Exist_pre!=gb_SD_Exist) && (gb_SD_Exist==1))
1373   4                                      {
1374   5                                              gc_CurrentCard=2;
1375   5                                      }
1376   4                                      else if(((gb_Host_Exist==0) || (gc_HostNoFileflag==1)) && (gb_SD_Exist==1))
1377   4                                      {
1378   5                                              gc_CurrentCard=2;
1379   5                                              if(gb_SDNoFileflag==1)
1380   5                                              {
1381   6                                                      gc_CurrentCard=0;       
1382   6                                              }
1383   5                                      }
1384   4                                      else if((gb_Host_Exist==0) || (gc_HostNoFileflag==1))
1385   4                                      {
1386   5                                              gc_CurrentCard=0;       
1387   5                                      }
1388   4                              }
1389   3                              else //host dos initial fail  //20090803 chiayen add
1390   3                              {
1391   4                                      if((gb_SD_Exist==1) && (gb_SDNoFileflag==0))
1392   4                                      {
1393   5                                              gc_CurrentCard=2;
1394   5                                      }
1395   4                                      else
1396   4                                      {
1397   5                                              gc_CurrentCard=0;
1398   5                                      }
1399   4                                      gc_Dosinitfail=0;
1400   4                              }
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 24  

1401   3                      }
1402   2              }
1403   1      
1404   1          if(gc_CurrentCard_backup!=gc_CurrentCard)
1405   1          {
1406   2                      U8 tc_CurrentCard;
1407   2                      tc_CurrentCard=gc_CurrentCard;
1408   2                      gc_CurrentCard=gc_CurrentCard_backup;
1409   2                      mjpeg_stop();
1410   2                      gc_MenuItemCount=0;
1411   2                      gc_CurrentCard=tc_CurrentCard;
1412   2                      gc_CurrentCard_backup=gc_CurrentCard;
1413   2      
1414   2                      set_clock_mode(CLOCK_MODE_MP3); //20090803 chiayen add for media change
1415   2      
1416   2                      if(gc_CurrentCard==2)
1417   2              {           
1418   3                  if(SD_Identification_Flow())
1419   3                  {
1420   4                      gc_CardExist |=0x02;
1421   4                  }
1422   3                  else if((gb_Host_Exist==1) && (gc_HostNoFileflag==0)) //20090730 chiayen modify
1423   3                  {
1424   4                                      DEVICE_REG[0x00]= 0x01;  //20090730 chiayen add
1425   4                                      if(!Host_Initial())
1426   4                                      {
1427   5                                              gc_CurrentCard = CURRENT_MEDIA_HOST;
1428   5                                              gb_FindFlag = 0;
1429   5                      }
1430   4                          else
1431   4                          {
1432   5                                              gc_CurrentCard=0;
1433   5                                              gc_CardExist &=0xFD;
1434   5                                              gb_FindFlag = 0;
1435   5                                              InitFlash();                                
1436   5                          }
1437   4                      }
1438   3                              else 
1439   3                      {
1440   4                                      DEVICE_REG[0x00]= 0x01;  //20090730 chiayen add
1441   4                                      gc_CurrentCard=0;
1442   4                                      gc_CardExist &=0xFD;
1443   4                                      gb_FindFlag = 0;
1444   4                                      InitFlash();
1445   4                              }
1446   3                              Play_SDFlash_DosInit_Mjpeg();
1447   3              }
1448   2                      #if 1//(USB_HOST==1)
1449   2                      else if(gc_CurrentCard==CURRENT_MEDIA_HOST)
1450   2                      {
1451   3                              DEVICE_REG[0x00]= 0x01;  //20090803 chiayen add                 
1452   3                              if(!Host_Initial())
1453   3                              {
1454   4                                      gc_CurrentCard = CURRENT_MEDIA_HOST;
1455   4                                      gb_FindFlag = 0;
1456   4                              }
1457   3                              else if((gb_SD_Exist==1) && (gb_SDNoFileflag==0)) //20090730 chiayen add
1458   3                              {
1459   4                          if(SD_Identification_Flow())
1460   4                          { 
1461   5                              gc_CardExist |=0x02;
1462   5                                              gc_CurrentCard=2;      
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 25  

1463   5                                      }
1464   4                                      else
1465   4                                      {
1466   5                                              DEVICE_REG[0x00]= 0x01;
1467   5                                              gc_CurrentCard=0;
1468   5                                              gc_CardExist &=0xFD;
1469   5                                              gb_FindFlag = 0;
1470   5                                              InitFlash();
1471   5                                      }
1472   4                              }
1473   3                              else 
1474   3                      {
1475   4                                      DEVICE_REG[0x00]= 0x01;
1476   4                                      gc_CurrentCard=0;
1477   4                                      gb_FindFlag = 0;
1478   4                                      InitFlash();
1479   4                              }
1480   3                              Play_SDFlash_DosInit_Mjpeg();
1481   3                      }
1482   2                      else if(gc_CurrentCard==0)
1483   2              {
1484   3                              DEVICE_REG[0x00]= 0x01;
1485   3                              gc_CardExist &=0xFD;
1486   3                              InitFlash();
1487   3                              Play_SDFlash_DosInit_Mjpeg();
1488   3                      }
1489   2                      #endif
1490   2      
1491   2                      #if 0
                              if(gc_CurrentCard==2)
                      {           
                          if(SD_Identification_Flow())
                          {
                              gc_CardExist |=0x02;
                                              Play_SDFlash_DosInit_Mjpeg();      
                          }
                          else
                          {
                                              XBYTE[0xB400]= 0x01;
                                              gc_CurrentCard=0;
                                              gc_CardExist &=0xFD;
                                              gb_FindFlag = 0;
                                              InitFlash();
                                              Play_SDFlash_DosInit_Mjpeg();                                       
                          }
                      }
                      else if(gc_CurrentCard==0)
                      {
                                      XBYTE[0xB400]= 0x01;
                                      gc_CardExist &=0xFD;
                                      InitFlash();
                                      Play_SDFlash_DosInit_Mjpeg();
                      }
                              else if(gc_CurrentCard==CURRENT_MEDIA_HOST)
                              {
                                      set_clock_mode(CLOCK_MODE_MP3);
                                      if(!Host_Initial())
                                      {
                                              gc_CurrentCard = CURRENT_MEDIA_HOST;
                                              gb_FindFlag = 0;
                                      }
                                      else
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 26  

                                      {
                                              XBYTE[0xB400]= 0x01;
                                              gc_CurrentCard=0;
                                              gb_FindFlag = 0;
                                              InitFlash();
                                              gc_CurrentCard=0;
                                      }
                                      Play_SDFlash_DosInit_Mjpeg();
                              }
                              #endif
1535   2          }   
1536   1      }
1537          
1538          
1539          void Mjpeg_Task()
1540          {
1541   1              LCD_BACKLIGHT_ON;
1542   1              XBYTE[0xB046]&=~0x04;
1543   1      
1544   1              while (1)
1545   1              {
1546   2                      switch(gc_PhaseInx)
1547   2                      {
1548   3                              case C_MjpegIdle:
1549   3                                      mjpeg_idle();
1550   3                              break;
1551   3      
1552   3                              case C_MjpegInit:
1553   3                                      mjpeg_init();
1554   3                              break;  
1555   3                      
1556   3                              case C_MjpegProc:
1557   3                                      mjpeg_proc();
1558   3                              break;
1559   3                              
1560   3                              case C_MjpegPause:
1561   3                                      if(gc_ShowTimer==0)
1562   3                                      {
1563   4                                              gc_DispWallpaper=1;
1564   4                                              mjpeg_playpause();
1565   4                                      }
1566   3                                      else
1567   3                                      {
1568   4                                              gc_PhaseInx=C_MjpegIdle;        
1569   4                                      }
1570   3                              break;
1571   3      
1572   3                              case C_MjpegStop:
1573   3                                      mjpeg_stop();
1574   3                              break;
1575   3      
1576   3                              case C_MjpegEndfile:
1577   3                                      mjpeg_endfile();        
1578   3                              break;
1579   3      
1580   3                              case C_MjpegNext:
1581   3                                      if(gc_TuneVolFreqStatus==0)  //20090331
1582   3                                      {
1583   4                                              mjpeg_next();
1584   4                                      }
1585   3                                      else if(gc_TuneVolFreqStatus==1)  //20090331
1586   3                                      {
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 27  

1587   4                                              gc_ShowTimer=72;
1588   4                                              if(gs_System_State.c_Phase!=TASK_PHASE_STOP)
1589   4                                              {
1590   5                                                      mjpeg_volup();
1591   5                                              }
1592   4                                              else
1593   4                                              {
1594   5                                                      if (gs_DSP_GLOBAL_RAM.sw_Volume<50)
1595   5                                                  {
1596   6                                                      gs_DSP_GLOBAL_RAM.sw_Volume+=2;
1597   6                                                  }
1598   5                                                      gc_PhaseInx=C_MjpegIdle;
1599   5                                              }
1600   4                                      }
1601   3                                      else if(gc_TuneVolFreqStatus==2)
1602   3                                      {
1603   4                                              FM_FREQ_CHGUP_MPEG();   
1604   4                                      }
1605   3                              break;
1606   3      
1607   3                              case C_MjpegPrev:
1608   3                                      if(gc_TuneVolFreqStatus==0)  //20090331
1609   3                                      {
1610   4                                              mjpeg_prev();
1611   4                                      }
1612   3                                      else if(gc_TuneVolFreqStatus==1)  //20090331
1613   3                                      {
1614   4                                              gc_ShowTimer=72;
1615   4                                              if(gs_System_State.c_Phase!=TASK_PHASE_STOP)
1616   4                                              {
1617   5                                                      mjpeg_voldn();
1618   5                                              }
1619   4                                              else
1620   4                                              {
1621   5                                                  if (gs_DSP_GLOBAL_RAM.sw_Volume>1)
1622   5                                                  {
1623   6                                                      gs_DSP_GLOBAL_RAM.sw_Volume-=2;
1624   6                                                  }
1625   5                                                      gc_PhaseInx=C_MjpegIdle;
1626   5                                              }
1627   4                                      }
1628   3                                      else if(gc_TuneVolFreqStatus==2)
1629   3                                      {
1630   4                                              FM_FREQ_CHGDOWN_MPEG(); 
1631   4                                      }
1632   3                              break;
1633   3      
1634   3                              case C_MjpegFF:
1635   3                                      mjpeg_fastfwd();
1636   3                              break;
1637   3      
1638   3                              case C_MjpegFR:
1639   3                                      mjpeg_fastrev();
1640   3                              break;
1641   3      
1642   3                              case C_MjpegFfFrEnd:
1643   3                                      mjpeg_fffr_end();
1644   3                              break;
1645   3      
1646   3                              case C_MjpegVolUp:
1647   3                              //      mjpeg_volup();
1648   3                                      if(gs_System_State.c_Phase==TASK_PHASE_PLAYACT)
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 28  

1649   3                                      {
1650   4                                              mjpeg_playpause();
1651   4                                      }
1652   3                                              gc_TuneVolFreqStatus=1;
1653   3                                              gc_DispPlayMenuAct=0x11;
1654   3                                              gc_ShowTimer=72;
1655   3                                              if(gs_System_State.c_Phase!=TASK_PHASE_STOP)
1656   3                                              {
1657   4                                      mjpeg_volup();
1658   4                                              }
1659   3                                      
1660   3                              break;
1661   3      
1662   3                              case C_MjpegVolDn:
1663   3                                      //mjpeg_voldn();
1664   3                                       if(gs_System_State.c_Phase==TASK_PHASE_PLAYACT)
1665   3                                      {
1666   4                                              mjpeg_playpause();
1667   4                                      }
1668   3                                              gc_TuneVolFreqStatus=1;
1669   3                                              gc_DispPlayMenuAct=0x11;
1670   3                                              gc_ShowTimer=72;
1671   3                                              if(gs_System_State.c_Phase!=TASK_PHASE_STOP)
1672   3                                              {
1673   4                                      mjpeg_voldn();
1674   4                                              }
1675   3                                              
1676   3                              break;
1677   3                              case C_MjpegChgUp:
1678   3                                      if(gs_System_State.c_Phase==TASK_PHASE_PLAYACT)
1679   3                                      {
1680   4                                              mjpeg_playpause();
1681   4                                      }
1682   3                                              gc_TuneVolFreqStatus=2;
1683   3                                              gc_DispPlayMenuAct=0x11;
1684   3                                              gc_ShowTimer=72;
1685   3                                              if(gs_System_State.c_Phase!=TASK_PHASE_STOP)
1686   3                                              {
1687   4                                                      FM_FREQ_CHGUP_MPEG();
1688   4                                              }
1689   3                              break;
1690   3                              case C_MjpegChgDn:
1691   3                                              if(gs_System_State.c_Phase==TASK_PHASE_PLAYACT)
1692   3                                              {
1693   4                                                      mjpeg_playpause();
1694   4                                              }
1695   3                                              gc_TuneVolFreqStatus=2;
1696   3                                              gc_DispPlayMenuAct=0x11;
1697   3                                              gc_ShowTimer=72;
1698   3                                              if(gs_System_State.c_Phase!=TASK_PHASE_STOP)
1699   3                                              {
1700   4                                                      FM_FREQ_CHGDOWN_MPEG();
1701   4                                              }
1702   3                              break;
1703   3      
1704   3                              case C_MjpegUpLevel:
1705   3                                      mjpeg_back2uplevel();
1706   3                              break;
1707   3      
1708   3                              case C_TuneVolFreq:  //20090331
1709   3                                      if(gs_System_State.c_Phase==TASK_PHASE_PLAYACT)
1710   3                                      {
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 29  

1711   4                                              mjpeg_playpause();
1712   4                                      }
1713   3                                      
1714   3                                      gc_DispPlayMenuAct=0x11;    
1715   3      
1716   3                                      if(gc_TuneVolFreqStatus<3)
1717   3                                      {
1718   4                                              gc_ShowTimer=72;
1719   4                                              gc_TuneVolFreqStatus++;
1720   4                                              if(gc_TuneVolFreqStatus>2)
1721   4                                              {
1722   5                                                      gc_TuneVolFreqStatus=0;
1723   5                                                      gc_ShowTimer=0;
1724   5                                                      gc_PhaseInx=C_MjpegPause;
1725   5                                              }
1726   4                                      }
1727   3      
1728   3                                      if(gs_System_State.c_Phase==TASK_PHASE_STOP)
1729   3                                  {
1730   4                                      gc_PhaseInx=C_MjpegIdle;   
1731   4                                  }
1732   3                                  else
1733   3                                  {
1734   4                                      gc_PhaseInx=C_MjpegProc;
1735   4                                  }
1736   3                              break;
1737   3      
1738   3                              case C_MjpegMenu:  //20090331
1739   3                                      if(gs_System_State.c_Phase==TASK_PHASE_PLAYACT)
1740   3                                      {
1741   4                                              mjpeg_playpause();
1742   4                                      }
1743   3      
1744   3                              gc_ShowTimer=72;
1745   3                                      if((gc_DispPlayMenuAct==0) || (gc_DispPlayMenuAct==0x11))
1746   3                                      {
1747   4                                              gc_TuneVolFreqStatus=21;
1748   4                                      }                                       
1749   3                              break;
1750   3      
1751   3                  case C_PowerOff:
1752   3                                      if(gs_System_State.c_Phase!=TASK_PHASE_STOP)
1753   3                                      {
1754   4                                              mjpeg_stop();
1755   4                                      }
1756   3                                      gc_Task_Next=C_Task_PowerOff;                                           
1757   3                  break;
1758   3      
1759   3                              case C_MainMenu:  //Long Key Mode
1760   3                                      mjpeg_stop();
1761   3                                      gc_Task_Next=C_Task_Menu;
1762   3                              break;
1763   3                      }
1764   2      
1765   2                      if((gc_TuneVolFreqStatus!=0) && (gc_ShowTimer!=0))
1766   2                      {
1767   3                              LCM_Display_Mjpeg2();           
1768   3                      }
1769   2                      else
1770   2                      {
1771   3                              if((gc_DispPlayMenuAct!=0)&&(gs_System_State.c_Phase==TASK_PHASE_PAUSE))
1772   3                              {
C51 COMPILER V7.10   MJPEG_PROCESS                                                         03/02/2011 09:21:43 PAGE 30  

1773   4                                      gc_DispPlayMenuAct=0;
1774   4                                      gc_PhaseInx=C_MjpegPause;                               
1775   4                              }
1776   3                      }
1777   2      
1778   2                      Polling_TaskEvents();
1779   2      
1780   2              if(gc_LogDataFlag==1)
1781   2              {
1782   3                  USER_LogFile_ReadWrite(1);
1783   3                  gc_LogDataFlag=0;
1784   3              }
1785   2      
1786   2                      if(gc_PhaseInx==C_MjpegProc)
1787   2                      {
1788   3                              mjpeg_proc();   
1789   3                      }
1790   2      
1791   2                      if((gc_TuneVolFreqStatus!=21) && (gc_TuneVolFreqStatus!=22))
1792   2                      {
1793   3                              IR_Service_Process();
1794   3                      }
1795   2      
1796   2                      Play_SourceDetect_Process_Mjpeg();
1797   2      
1798   2                      if (gc_Task_Current != gc_Task_Next)
1799   2                      {
1800   3                              gc_Task_Current = gc_Task_Next;
1801   3                              break;  
1802   3                      }
1803   2              }
1804   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5179    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =     10      44
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
