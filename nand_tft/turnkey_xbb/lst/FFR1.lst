C51 COMPILER V9.00   FFR1                                                                  07/10/2012 15:51:54 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE FFR1
OBJECT MODULE PLACED IN .\obj\FFR1.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Play\FFR1.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource\heade
                    -r) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\FFR1.lst) OBJECT(.\obj\FFR1.obj)

line level    source

   1          
   2          #include "SPDA2K.h"
   3          #include "dos\fs_struct.h"
   4          #include "Memalloc.h"
   5          #include "..\DSP\DSPPHYSIC.H"
   6          #include "..\DSP\dspuser.h"
   7          //#include "..\header\music_play.h"
   8          #include "..\IR\remote.h"
   9          #include "..\header\host_init.h"
  10          //#include "..\UI_Display\unicode_hzk.c"
  11          #include "..\header\variables.h"
  12          #include "..\LCM\TFT_display.h"         // TFT
  13          #include "..\LCM\TFT_config.h"          // TFT
  14          #include "..\LCM\LCM.h"
  15          #include "..\LCM\LCM_func.h"
  16          #include "..\LCM\UI_icon.h"
  17          
  18          //--------------------------------------------------------------------------------------------------------
             ---
  19          void UI_fastFFFR_Play(U8 XFFFR);
  20          void play_fffr_end();
  21          U8 MP3_FF_FR_Cmd(void);
  22          U8 WMA_FF_FR_Cmd();
  23          void MP3_seek_trig(void);               //Jimi 080530
  24          static void WMA_seek_trig();            //Jimi 080530
  25          //U8 APE_FF_FR_Cmd();
  26          //static void APE_seek_trig();
  27          
  28          //--------------------------------------------------------------------------------------------------------
             ----
  29          extern  U16 const_timer_get_counter(void);
  30          extern void Music_EQ_Cmd(U8 tc_Type);
  31          extern void Music_SetVolumeCmd(void);
  32          extern void Music_WakeUp(U8 tc_Type);
  33          extern code U8 (code * Music_EOF_Proc[])(void);
  34          extern code U16 (code * Music_Bitrate[])(void);
  35          extern code U16 (code * Music_ReadTime[])(void); 
  36          extern code U8 (code * Music_Data_In[])(void); 
  37          extern code U8 (code * Music_Download[])(void);
  38          
  39          //--------------------------------------------------------------------------------------------------------
             ---
  40          
  41          extern xdata System_Struct gs_System_State;
  42          
  43          
  44          
  45          void UI_fastFFFR_Play(U8 XFFFR)
  46          {
  47   1          data        U8      tc_Ret;
  48   1      
  49   1              if((gs_System_State.c_Phase != TASK_PHASE_FASTFWD)&&(gs_System_State.c_Phase!=TASK_PHASE_FASTREV))
  50   1              {
  51   2                      if(gs_System_State.c_Phase==TASK_PHASE_PLAYACT)       //tangwei add 081010
C51 COMPILER V9.00   FFR1                                                                  07/10/2012 15:51:54 PAGE 2   

  52   2                      {    
  53   3                          if(XFFFR==0)
  54   3                          {// play_fastfwd
  55   4                                  gs_System_State.c_Phase=TASK_PHASE_FASTFWD;
  56   4                          }
  57   3                          else
  58   3                          {// play_fastrev
  59   4                                  gs_System_State.c_Phase=TASK_PHASE_FASTREV;
  60   4                          }
  61   3      
  62   3                          gs_System_State.w_BitRate = (*Music_Bitrate[gc_Play_FileType])();
  63   3                          gw_CurrentSec = (*Music_ReadTime[gc_Play_FileType])();//(JC)Time reset after fffr
  64   3                              switch(gc_Play_FileType)
  65   3                              {
  66   4                                      case 0x00: //MP3
  67   4                                              tc_Ret=MP3_FF_FR_Cmd();
  68   4                                              break;
  69   4                                      case 0x01: //WMA
  70   4                                              tc_Ret=WMA_FF_FR_Cmd();
  71   4                                              break;
  72   4                              }
  73   3      
  74   3                          if (tc_Ret != DSP_SUCCESS)
  75   3                              {
  76   4      //                              dbprintf("FF err!!\n");             
  77   4                              }
  78   3                          gw_CTStartTime=const_timer_get_counter();//(JC)H0925 using const timer
  79   3                      }
  80   2              }
  81   1      
  82   1              if(gs_System_State.c_Phase==TASK_PHASE_FASTFWD)
  83   1              {       
  84   2                      if(gw_CurrentSec<gw_TotalSec)
  85   2                      {
  86   3                              if( (const_timer_get_counter() - gw_CTStartTime) >= 40)//(JC)H0925 using const timer;~200ms
  87   3                              {
  88   4                                      gw_CTStartTime=const_timer_get_counter();//(JC)H0925 using const timer
  89   4                                      gw_CurrentSec+=1;
  90   4                                      gw_Disp_CurrentSec=gw_CurrentSec;//(JC)H0930
  91   4                              }
  92   3                      }
  93   2              }
  94   1              else if(gs_System_State.c_Phase==TASK_PHASE_FASTREV)
  95   1              {
  96   2                      if(gw_CurrentSec!=0)
  97   2                      {
  98   3                              if( (const_timer_get_counter() - gw_CTStartTime) >= 40)//(JC)H0925 using const timer;~200ms
  99   3                              {
 100   4                                      gw_CTStartTime=const_timer_get_counter();//(JC)H0925 using const timer
 101   4                                      gw_CurrentSec-=1;
 102   4                                      gw_Disp_CurrentSec=gw_CurrentSec;//(JC)H0930
 103   4                              }
 104   3                      }
 105   2              }
 106   1      }
 107          
 108          U8 MP3_FF_FR_Cmd(void)
 109          {
 110   1              data    U8  tc_Ret;
 111   1              data    U16 TimeOUT=0xffff;
 112   1              xdata   U16 temp;
 113   1      
C51 COMPILER V9.00   FFR1                                                                  07/10/2012 15:51:54 PAGE 3   

 114   1              tc_Ret = DSP_StopCmd();
 115   1      
 116   1              // Reset decode status
 117   1              do{
 118   2                      TimeOUT --;
 119   2                      if(TimeOUT==0)
 120   2                      {
 121   3                              return DSP_DECODE_STATUS_TIMEOUT_ERROR;
 122   3                      }
 123   2              }while(!((L2_DSP_Read_DMem16(DSP_DecodeStatus)&0x00C0)==0x00C0));  //wait file end
 124   1      
 125   1              temp = L2_DSP_Read_DMem16(DSP_DecodeStatus);
 126   1              L2_DSP_Write_DMem16(DSP_DecodeStatus,temp&0xFF3F);
 127   1              L2_DSP_Write_DMem16(DSP_RemainBuffer, 0);                               //Jimi 081127
 128   1              L2_DSP_Write_DMem16(DSP_EmptyBuffer, 0x3000);                   //Jimi 081127
 129   1              gs_DSP_GLOBAL_RAM.sc_DM_Index = 0;                                              //Jimi 081127
 130   1      
 131   1              return tc_Ret;
 132   1      }
 133          
 134          
 135          U8 WMA_FF_FR_Cmd()
 136          {
 137   1              data    U8  tc_Ret;
 138   1              data    U16 TimeOUT=0xffff;
 139   1      
 140   1              Music_WakeUp(DSP_CLK_CTRL | SRAM2T_CTRL);
 141   1              tc_Ret = DSP_PauseCmd();
 142   1      
 143   1              // Reset decode status
 144   1              do{
 145   2                      TimeOUT --;
 146   2                      if(TimeOUT==0)
 147   2                      {
 148   3                              return DSP_DECODE_STATUS_TIMEOUT_ERROR;
 149   3                      }
 150   2              } while (!L2_DSP_Read_DMem16(DSP_RampDownComplete)); //Jimi 090417, DSP_RampDownComplete = 0x3FB8, indica
             -tes RampDown OK or NOT
 151   1              return tc_Ret;
 152   1      }
 153          
 154          
 155          void play_fffr_end()
 156          {
 157   1              U32     tdw_datapoint;
 158   1      
 159   1          gs_File_FCB[gs_System_State.c_FileHandle].dw_File_CurrentCluster=gs_File_FCB[gs_System_State.c_FileHan
             -dle].dw_File_StartCluster;
 160   1          if(gs_System_State.c_Phase==TASK_PHASE_FASTFWD)
 161   1          {
 162   2                  if(gw_CurrentSec==gw_TotalSec)
 163   2                  {
 164   3                          tdw_datapoint=0;
 165   3                          gs_File_FCB[gs_System_State.c_FileHandle].dw_File_DataPoint=gs_File_FCB[gs_System_State.c_FileHandle
             -].dw_File_TotalSize;
 166   3                              L2_DSP_Write_DMem16(DSP_RemainBuffer, 0);       //Jimi 090213
 167   3                          gs_System_State.c_Phase=TASK_PHASE_STOP;    //Jimi 080530, if fast forward to the end of the file then 
             -stop and play next
 168   3                          gw_CurrentSec=0;
 169   3                          gc_PhaseInx=2;
 170   3                  }
 171   2                  else
C51 COMPILER V9.00   FFR1                                                                  07/10/2012 15:51:54 PAGE 4   

 172   2                  {
 173   3                              tdw_datapoint=gw_CurrentSec*(gs_File_FCB[gs_System_State.c_FileHandle].dw_File_TotalSize/gw_TotalSec);
 174   3                  }
 175   2          }
 176   1          else if(gs_System_State.c_Phase==TASK_PHASE_FASTREV)
 177   1          {
 178   2                  if(gw_CurrentSec==0)
 179   2                  {
 180   3                          tdw_datapoint=0;
 181   3                          gs_File_FCB[gs_System_State.c_FileHandle].dw_File_DataPoint=0;
 182   3                          gs_System_State.c_Phase=TASK_PHASE_STOP;
 183   3                          gc_PhaseInx=3;
 184   3                  }
 185   2                  else
 186   2                  {
 187   3                              tdw_datapoint=gw_CurrentSec*(gs_File_FCB[gs_System_State.c_FileHandle].dw_File_TotalSize/gw_TotalSec);  
 188   3                  }
 189   2          }
 190   1          if(tdw_datapoint>0)
 191   1          {
 192   2                      gs_File_FCB[gs_System_State.c_FileHandle].dw_File_CurrentCluster = DOS_Seek_File(gs_System_State.c_FileH
             -andle, tdw_datapoint>>9);
 193   2                  gc_PhaseInx=3;
 194   2                      switch(gc_Play_FileType)
 195   2                      {
 196   3                              case 0x00: //MP3
 197   3                                      MP3_seek_trig();
 198   3                              break;
 199   3      
 200   3                              case 0x01: //WMA
 201   3                                      WMA_seek_trig();
 202   3                              break;
 203   3                      }
 204   2                      gb_fffr_end=1;//(JC)H1027 for FFFR end WMA current time display
 205   2              }
 206   1      }
 207          
 208          
 209          void MP3_seek_trig(void)                //Jimi 080530
 210          {
 211   1              data    U8      tc_Cnt;
 212   1              data    U16     tw_FrmCnt;
 213   1              data    U8      tc_timeout;
 214   1      
 215   1              // restart DSP, Jimi 081125
 216   1              tw_FrmCnt = L2_DSP_Read_DMem16(DSP_DecodeFrameCounter);
 217   1              for (tc_Cnt=0;tc_Cnt<10;++tc_Cnt) 
 218   1              {
 219   2                      if (DSP_PlayInit()==DSP_SUCCESS)
 220   2                      {
 221   3                              break;
 222   3                      }
 223   2      
 224   2                      if (tc_Cnt < 5) 
 225   2                      {
 226   3                              GLOBAL_REG[0x02] &= 0xFE;               // Enable DSP Run Normal Mode
 227   3                      }
 228   2                      else
 229   2                      {
 230   3                              GLOBAL_REG[0x02] |= 0x01;               // DSP reset
 231   3                              GLOBAL_REG[0x02] &= 0xFE;               // Enable DSP Run Normal Mode
 232   3                      }
C51 COMPILER V9.00   FFR1                                                                  07/10/2012 15:51:54 PAGE 5   

 233   2              }
 234   1      
 235   1              Music_SetVolumeCmd();
 236   1              // Jimi Yu 081208
 237   1              L2_DSP_Write_DMem16(DSP_PostProcessSelect, L2_DSP_Read_DMem16(DSP_PostProcessSelect)|0x0020);
 238   1              tc_timeout = 0xFF;
 239   1              while( (L2_DSP_Read_DMem16(DSP_PostProcessSelect)&0x0020))      //Handshake with DSP to make sure that DSP has
             - ramp digital volume up.
 240   1              {
 241   2                      if(!(tc_timeout--))
 242   2                      {
 243   3                              break;
 244   3                      }
 245   2              }
 246   1              Music_EQ_Cmd(gs_DSP_GLOBAL_RAM.sc_EQ_Type);
 247   1              L2_DSP_Write_DMem16(DSP_DecodeFrameCounter, tw_FrmCnt);
 248   1              L2_DSP_SendCommandSet(DCMD_Play);
 249   1      }
 250          
 251          
 252          void WMA_seek_trig()            //Jimi 080530
 253          {
 254   1              L2_DSP_Write_DMem16(DSP_EmptyBuffer,0x3C00);    //reset BS buffer information //Jimi081112 mdf size to 0x3C0
             -0
 255   1              L2_DSP_Write_DMem16(DSP_RemainBuffer,0x0000);   
 256   1              gs_DSP_GLOBAL_RAM.sc_DM_Index = 0;              
 257   1              L2_DSP_Write_DMem24(DSP_WMASectorOffset,(gs_File_FCB[gs_System_State.c_FileHandle].dw_File_DataPoint>>9))
             -;                
 258   1              L2_DSP_Write_DMem16(DSP_DecodeStatus,0x0000);
 259   1              L2_DSP_Write_DMem16(DSP_WMARandomFlag,0x0001);   //set random flag
 260   1      
 261   1              L2_DSP_SendCommandSet(DCMD_Play);
 262   1      }
 263          
 264          
 265          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    905    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
