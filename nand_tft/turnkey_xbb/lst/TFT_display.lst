C51 COMPILER V9.00   TFT_DISPLAY                                                           07/10/2012 15:51:58 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TFT_DISPLAY
OBJECT MODULE PLACED IN .\obj\TFT_display.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LCM\TFT_display.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource
                    -\header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\TFT_display.lst) OBJECT(.\obj\TFT_display.obj)

line level    source

   1          #include "SPDA2K.h"
   2          #include "..\LCM\LCM_func.h"
   3          #include "..\LCM\TFT_config.h"
   4          #include "..\LCM\TFT_display.h"
   5          #include "..\header\variables.h"
   6          
   7          
   8          xdata   U8      gc_ShowMenuTimer=0;
   9          xdata   U8      gc_FuncPicCount=0;
  10          xdata   U8      gc_PlayBarBak=0;
  11          xdata   U8      gc_ShowPingpuTimer=0;
  12          xdata   U8      gb_ShowPingpu=0;
  13          
  14          extern  data    bit     gb_TFT_VOL_FM;
  15          extern  data    U8      gc_CurrentCard;
  16          
  17          extern  xdata   U8      gc_LanguageSel;
  18          extern  xdata   U16     gw_FileIndex[]; 
  19          extern  xdata   U16     gw_FileTotalNumber[];
  20          extern  DSP_GLOBAL      gs_DSP_GLOBAL_RAM;
  21          extern  xdata   System_Struct gs_System_State;
  22          
  23          extern void LCD_DisplayIcon(U8 tw_IconIDNumber,U8 tc_CurrentOffset);
  24          void TFT_ShowPingPu(void);
  25          
  26          void TFT_HEX_BCD(U16 num,U8 *Hi,U8 *MidH, U8 *MidL, U8 *Low)
  27          {
  28   1              *Hi=num/1000;
  29   1              *MidH=(num-((U16)*Hi*1000) )/100;
  30   1              *MidL=(num- ((U16)*Hi*1000) - ((U16)*MidH*100) )/10;
  31   1              *Low=num%10;
  32   1              if(*Hi>10)
  33   1              { 
  34   2                      *Hi=*Hi%10;
  35   2              }
  36   1      }
  37          
  38          // EQ:NOR/DBB/JAZZ/...
  39          void TFT_ShowEQIcon(void)
  40          {
  41   1              LCM_set_view(TFT_IconDispDir,EQIcon_X_Pos,EQIcon_Y_Pos,EQIcon_H_Size,EQIcon_V_Size);
  42   1              LCD_DisplayIcon(EQIconID,gc_DisplayEQIcon);
  43   1      }
  44          
  45          // 播放模式:Normal/Repeat-1/Repeat-All
  46          void TFT_ShowPlayMode(void)
  47          {
  48   1              LCM_set_view(TFT_IconDispDir,PlayModeIcon_X_Pos,PlayModeIcon_Y_Pos,PlayModeIcon_H_Size,PlayModeIcon_V_Siz
             -e);
  49   1              LCD_DisplayIcon(PlayModeIconID,gc_RepPlayMode);
  50   1      }
  51          
  52          // 儲存裝置:NAND(0)/U-Disk(1)/SDC(2)
  53          void TFT_ShowMediaIcon(void)
C51 COMPILER V9.00   TFT_DISPLAY                                                           07/10/2012 15:51:58 PAGE 2   

  54          {
  55   1              data    U8      i;
  56   1      
  57   1              if(gc_CurrentCard==5)
  58   1              {
  59   2                      i=4;    // Host
  60   2              }
  61   1              else
  62   1              {
  63   2                      i=gc_CurrentCard;
  64   2              }
  65   1      
  66   1              LCM_set_view(TFT_IconDispDir,MediaIcon_X_Pos,MediaIcon_Y_Pos,MediaIcon_H_Size,MediaIcon_V_Size);
  67   1              LCD_DisplayIcon(MediaIconID,i);
  68   1      }
  69          
  70          // 播放狀態:Play/Pause
  71          void TFT_ShowPlayPauseIcon(void)
  72          {
  73   1              LCM_set_view(TFT_IconDispDir,PlayIcon_X_Pos,PlayIcon_Y_Pos,PlayIcon_H_Size,PlayIcon_V_Size);
  74   1              LCD_DisplayIcon(PlayIconID,gc_DispPlayStatus);
  75   1      }
  76          
  77          // 音樂格式:MP3/WMA/APE
  78          void TFT_ShowMusicType(void)
  79          {
  80   1              LCM_set_view(TFT_IconDispDir,MusicType_X_Pos,MusicType_Y_Pos,MusicType_H_Size,MusicType_V_Size);
  81   1              LCD_DisplayIcon(MusicTypeID,gc_Media_type);     
  82   1      }
  83          
  84          // 主畫面FM頻率
  85          void TFT_ShowFMFrequency(void)
  86          {
  87   1              data    U8      BCD[4];
  88   1              data    U8      i,j=0;
  89   1      
  90   1              TFT_HEX_BCD(gw_FM_frequency,(BCD+0),(BCD+1),(BCD+2),(BCD+3));
  91   1              
  92   1              for(i=0;i<4;i++)
  93   1              {
  94   2                      if((i==0)&&(BCD[0]==0))
  95   2                      {
  96   3                              BCD[0]=10;      // Blank
  97   3                      }
  98   2                      else if(i==3)
  99   2                      {
 100   3                              j=FreqDotOffset+6;
 101   3                      }
 102   2                      LCM_set_view(TFT_IconDispDir,FM_Freq_X_Pos+FM_Freq_H_Size*i+j,FM_Freq_Y_Pos,FM_Freq_H_Size,FM_Freq_V_Siz
             -e);
 103   2                      LCD_DisplayIcon(FM_FreqID,BCD[i]);
 104   2              }
 105   1              //賒萸
 106   1                      LCM_set_view(TFT_IconDispDir,ID_FM_DOT_X_Size,ID_FM_DOT_Y_Size,ID_FM_DOT_H_Size,ID_FM_DOT_V_Size);
 107   1                      LCD_DisplayIcon(ID_FM_DOT,0);
 108   1      }
 109          
 110          // 播放曲數
 111          void TFT_ShowSongIndex(void)
 112          {
 113   1              data    U8      BCD[4];
 114   1              data    U8      i;
C51 COMPILER V9.00   TFT_DISPLAY                                                           07/10/2012 15:51:58 PAGE 3   

 115   1      
 116   1              TFT_HEX_BCD(gw_FileIndex[gs_System_State.c_FileHandle],(BCD+0),(BCD+1),(BCD+2),(BCD+3));
 117   1              for(i=0;i<4;i++)
 118   1              {
 119   2                      LCM_set_view(TFT_IconDispDir,SongIndex_X_Pos+SongIndex_H_Size*i+i,SongIndex_Y_Pos,SongIndex_H_Size,SongI
             -ndex_V_Size);
 120   2                      LCD_DisplayIcon(SongIndexID,BCD[i]);    
 121   2              }
 122   1      }
 123          
 124          // 總曲數
 125          void TFT_ShowTotalSong(void)
 126          {
 127   1              data    U8      BCD[4];
 128   1              data    U8      i;
 129   1      
 130   1              TFT_HEX_BCD(gw_FileTotalNumber[gs_System_State.c_FileHandle],(BCD+0),(BCD+1),(BCD+2),(BCD+3));
 131   1              for(i=0;i<4;i++)
 132   1              {
 133   2                      LCM_set_view(TFT_IconDispDir,TotalSong_X_Pos+TotalSong_H_Size*i+i,TotalSong_Y_Pos,TotalSong_H_Size,Total
             -Song_V_Size);
 134   2                      LCD_DisplayIcon(TotalSongID,BCD[i]);    
 135   2              }
 136   1              //珆尨訇話
 137   1                      LCM_set_view(TFT_IconDispDir,ID_XIEGANG_X_Size,ID_XIEGANG_Y_Size,ID_XIEGANG_H_Size,ID_XIEGANG_V_Size);
 138   1                      LCD_DisplayIcon(ID_TOTALNUM_XIEGANG,0); 
 139   1      }
 140          
 141          // BitRate
 142          void TFT_ShowBitRate(void)
 143          {
 144   1              data    U8      BCD[4];
 145   1              data    U8      i;
 146   1      
 147   1              TFT_HEX_BCD(gw_DisplayBitRate,(BCD+0),(BCD+1),(BCD+2),(BCD+3));
 148   1              for(i=0;i<3;i++)
 149   1              {
 150   2      #ifdef TFT_18V
                              LCM_set_view(TFT_IconDispDir,BitRate_X_Pos+(BitRate_H_Size+1)*i,BitRate_Y_Pos,BitRate_H_Size,BitRate_V_S
             -ize);
                              LCD_DisplayIcon(BitRateID,BCD[i+1]);
              #else
 154   2                     LCM_set_view(TFT_IconDispDir,BitRate_X_Pos+(BitRate_H_Size+BitRate_gap)*i,BitRate_Y_Pos,BitRate_H_
             -Size,BitRate_V_Size);
 155   2                              LCD_DisplayIcon(BitRateID,BCD[i+1]);
 156   2                         //賒KBPS
 157   2                      LCM_set_view(TFT_IconDispDir,ID_KBPS_X_Size,ID_KBPS_Y_Size,ID_KBPS_H_Size,ID_KBPS_V_Size);
 158   2                      LCD_DisplayIcon(ID_KBPS,0);     
 159   2      #endif
 160   2                      
 161   2              }
 162   1      }
 163          
 164          // 音樂播放主畫面
 165          void TFT_Main(void)
 166          {
 167   1              LCM_set_view(TFT_IconDispDir,ID_PlayBG_X_Pos,ID_PlayBG_Y_Pos,ID_PlayBG_H_Size,ID_PlayBG_V_Size);
 168   1              LCD_DisplayIcon(ID_PlayBG,0); //090805,蜊峈垀衄弊模腔Play掖劓珆尨眈肮腔芞え 
 169   1              LCM_set_view(TFT_IconDispDir,ID_FM_ICON_X_Size,ID_FM_ICON_Y_Size,ID_FM_ICON_H_Size,ID_FM_ICON_V_Size);
 170   1              LCD_DisplayIcon(ID_FM_ICON,0);
 171   1              TFT_Show_VOL();
 172   1              
C51 COMPILER V9.00   TFT_DISPLAY                                                           07/10/2012 15:51:58 PAGE 4   

 173   1      //珆尨貉棵芞梓
 174   1              LCM_set_view(TFT_IconDispDir,ID_LYRIC_X_Size,ID_LYRIC_Y_Size,ID_LYRIC_H_Size,ID_LYRIC_V_Size);
 175   1              LCD_DisplayIcon(ID_LYRIC,0);
 176   1      
 177   1              if(gc_Play_FileType==2)
 178   1              {
 179   2      #ifdef TFT_18V
                              LCM_set_view(TFT_IconDispDir,43,18,19,16);      
              #else
 182   2                      LCM_set_view(TFT_IconDispDir,13,54,38,36);
 183   2      #endif
 184   2              LCD_DisplayIcon(39,0);
 185   2              }
 186   1      }
 187          
 188          // 當前播放時間&Bar
 189          void TFT_ShowPlayTime(void)
 190          {
 191   1              data    U8      BCD[4];
 192   1              data    U8      i,j=0;
 193   1      
 194   1              BCD[0]=gw_Disp_CurrentSec/600;
 195   1              BCD[1]=(gw_Disp_CurrentSec/60)%10;
 196   1              BCD[2]=(gw_Disp_CurrentSec%60)/10;
 197   1              BCD[3]=(gw_Disp_CurrentSec%60)%10;
 198   1      
 199   1              for(i=0;i<4;i++)
 200   1              {
 201   2                      if(i==2)
 202   2                      {
 203   3                              j=SecondOffset+10;
 204   3                      }
 205   2      
 206   2                      LCM_set_view(TFT_IconDispDir,PlayTime_X_Pos+(PlayTime_H_Size+2)*i+j,PlayTime_Y_Pos,PlayTime_H_Size,PlayT
             -ime_V_Size);
 207   2                      LCD_DisplayIcon(PlayTimeID,BCD[i]);
 208   2              }
 209   1              // 賒奀潔腔謗萸 
 210   1                      LCM_set_view(TFT_IconDispDir,ID_PLAYTIME_DOT_X_Size,ID_PLAYTIME_DOT_Y_Size,ID_PLAYTIME_DOT_H_Size,ID_PLA
             -YTIME_DOT_V_Size);
 211   1                      LCD_DisplayIcon(ID_PLAYTIME_DOT,0);
 212   1      
 213   1      
 214   1              TFT_ShowPlayRatioBar();
 215   1      }
 216          
 217          void TFT_ShowPingPu(void)
 218          {
 219   1                      static U8       k=0;
 220   1              //珆尨けび
 221   1                      LCM_set_view(TFT_IconDispDir,ID_PINGPU_X_Size,ID_PINGPU_Y_Size,ID_PINGPU_H_Size,ID_PINGPU_V_Size);
 222   1                      LCD_DisplayIcon(ID_PingPu,k);
 223   1                      k++;
 224   1                      if(k>13)
 225   1                      {
 226   2                              k=0;
 227   2                      }
 228   1      }
 229          
 230          
 231          // 播放時間BAR
 232          void TFT_ShowPlayRatioBar(void)
C51 COMPILER V9.00   TFT_DISPLAY                                                           07/10/2012 15:51:58 PAGE 5   

 233          {
 234   1              data    U8      i;
 235   1      
 236   1              if(gc_Play_FileType==2) // For MP4
 237   1              {
 238   2                      i=PlayRatioBarNum-1;
 239   2              }
 240   1              else
 241   1              {
 242   2                      i=((gw_Disp_CurrentSec*PlayRatioBarNum)/gw_DispTotalTime);
 243   2              }
 244   1      
 245   1              if(i>=PlayRatioBarNum)
 246   1              {
 247   2                      i=PlayRatioBarNum-1;
 248   2              }
 249   1      
 250   1              if(gc_PlayBarBak==i)
 251   1              {
 252   2                      return;
 253   2              }
 254   1      
 255   1              gc_PlayBarBak=i;
 256   1      
 257   1              LCM_set_view(TFT_IconDispDir,PlayRatioBar_X_Pos,PlayRatioBar_Y_Pos,PlayRatioBar_H_Size,PlayRatioBar_V_Siz
             -e);
 258   1              LCD_DisplayIcon(PlayRatioBarID,i);      // need play status
 259   1      }
 260          
 261          
 262          // 歌曲時間
 263          void TFT_ShowSongLength(void)
 264          {
 265   1              data    U8      BCD[4];
 266   1              data    U8      i,j=0;
 267   1      
 268   1              BCD[0]=gw_DispTotalTime/600;
 269   1              BCD[1]=(gw_DispTotalTime/60)%10;
 270   1              BCD[2]=(gw_DispTotalTime%60)/10;
 271   1              BCD[3]=(gw_DispTotalTime%60)%10;
 272   1              
 273   1              for(i=0;i<4;i++)
 274   1              {
 275   2                      if(i>=2)
 276   2                      {
 277   3                              j=SongTotalTimeOffset;
 278   3                      }
 279   2                      else
 280   2                      {
 281   3                              j=0;
 282   3                      }
 283   2                      LCM_set_view(TFT_IconDispDir,SongTotalTime_X_Pos+SongTotalTime_H_Size*i+i+j,SongTotalTime_Y_Pos,SongTota
             -lTime_H_Size,SongTotalTime_V_Size);
 284   2                      LCD_DisplayIcon(SongTotalTimeID,BCD[i]);
 285   2              }
 286   1              //賒軞奀潔腔萸
 287   1                      LCM_set_view(TFT_IconDispDir,ID_TOTALTIME_DOT_X_Size,ID_TOTALTIME_DOT_Y_Size,ID_TOTALTIME_DOT_H_Size,ID_
             -TOTALTIME_DOT_V_Size);
 288   1                      LCD_DisplayIcon(ID_TOTALTIME_DOT,0);
 289   1      }
 290          
 291          // FM頻率調整
C51 COMPILER V9.00   TFT_DISPLAY                                                           07/10/2012 15:51:58 PAGE 6   

 292          void TFT_ShowFMFreqAdj(void)
 293          {
 294   1              data    U8      BCD[5];
 295   1              data    U8      i;
 296   1      
 297   1              TFT_HEX_BCD(gw_FM_frequency,(BCD+0),(BCD+1),(BCD+2),(BCD+4));
 298   1              
 299   1              for(i=0;i<5;i++)
 300   1              {
 301   2                      if((i==0)&&(BCD[0]==0))
 302   2                      {
 303   3                              BCD[0]=10;      // Blank
 304   3                      }
 305   2                      else if(i==3)
 306   2                      {
 307   3                              BCD[3]=11;//j=FreqAdjDotOffset;
 308   3                      }
 309   2      
 310   2                      LCM_set_view(TFT_IconDispDir,FMAdj_X_Pos+FMAdj_H_Size*i+i,FMAdj_Y_Pos,FMAdj_H_Size,FMAdj_V_Size);
 311   2                      LCD_DisplayIcon(FMAdjID,BCD[i]);
 312   2              }
 313   1      }
 314          void  TFT_Show_VOL()
 315          {
 316   1              data    U8      i;
 317   1              data    U8  k;
 318   1              U8 tc_vol[2];
 319   1          U8 tc_DisplayVol;
 320   1      
 321   1              tc_DisplayVol=gs_DSP_GLOBAL_RAM.sw_Volume/2;   
 322   1      
 323   1          tc_vol[0]=tc_DisplayVol/10;
 324   1          tc_vol[1]=tc_DisplayVol- (tc_DisplayVol/10)*10;
 325   1      
 326   1              LCM_set_view(TFT_IconDispDir,ID_VOL_ICON_X_Size,ID_VOL_ICON_Y_Size,ID_VOL_ICON_H_Size,ID_VOL_ICON_V_Size)
             -;
 327   1          LCD_DisplayIcon(ID_VOL_ICON,0);                                     //賒秞講芞梓
 328   1          for(i=0;i<2;i++)
 329   1          {
 330   2                      if(i==1)
 331   2                      {
 332   3                              k=ID_VOLNUM_SPACE;
 333   3                      }
 334   2                      else k=0;
 335   2                      
 336   2              LCM_set_view(TFT_IconDispDir,ID_VOLNUM_X_Size+(ID_VOLNUM_H_Size*i)+k,ID_VOLNUM_Y_Size,ID_VOLNUM_H_
             -Size,ID_VOLNUM_V_Size);
 337   2              LCD_DisplayIcon(ID_VOLNUM,tc_vol[i]);   //秞講杅趼
 338   2          }
 339   1      }
 340          
 341          // VOL調整
 342          void TFT_ShowVOLAdj(void)
 343          {
 344   1          data        U8 tc_vol[2];
 345   1          data        U8 i;
 346   1              xdata   U8 tc_DisplayVol;
 347   1      
 348   1          tc_DisplayVol=gc_DisplayVol/2;   
 349   1      
 350   1          tc_vol[0]=tc_DisplayVol/10;
 351   1          tc_vol[1]=tc_DisplayVol- (tc_DisplayVol/10)*10;
C51 COMPILER V9.00   TFT_DISPLAY                                                           07/10/2012 15:51:58 PAGE 7   

 352   1          for(i=0;i<2;i++)
 353   1          {
 354   2              LCM_set_view(TFT_IconDispDir,VOLAdj_X_Pos+(VOLAdj_H_Size+2)*i,VOLAdj_Y_Pos,VOLAdj_H_Size,VOLAdj_V_
             -Size);
 355   2              LCD_DisplayIcon(VOLAdjID,tc_vol[i]);
 356   2          }
 357   1      }
 358          
 359          // LRC背景圖
 360          void TFT_LRCBackGround(void)
 361          {
 362   1              LCM_set_view(TFT_IconDispDir,0,0,TFT_H_Size,TFT_V_Size);
 363   1              LCD_DisplayIcon(ID_PUBLIC_FULL,OFFSET_FullLRC_BG);
 364   1      }
 365          
 366          // EQ Frame(遙控器選EQ)
 367          void TFT_EQFrame(void)
 368          {
 369   1          U8 x_EQ_F;
 370   1              // EQ frame背景
 371   1              LCM_set_view(TFT_IconDispDir,0,0,TFT_H_Size,TFT_V_Size);
 372   1              //LCD_DisplayIcon(40,0);
 373   1              LCD_DisplayIcon(ID_PUBLIC_FULL,OFFSET_EQ_FRAME);
 374   1              // EQ
 375   1              LCM_set_view(TFT_IconDispDir,EQFrame_X_Pos,EQFrame_Y_Pos,EQFrame_H_Size,EQFrame_V_Size);
 376   1          x_EQ_F= gs_DSP_GLOBAL_RAM.sc_EQ_Type+gc_LanguageSel*6;
 377   1          LCD_DisplayIcon(EQFrameID,x_EQ_F);
 378   1      }
 379          
 380          // IR數字選曲選頻主畫面
 381          void TFT_IRNumMain(void)
 382          {
 383   1              LCM_set_view(TFT_IconDispDir,0,0,TFT_H_Size,TFT_V_Size);
 384   1              LCD_DisplayIcon(FMORSONG_BG,gc_LanguageSel);
 385   1      }
 386          
 387          // IR數字選曲選頻(數字)
 388          void TFT_IRNum(void)
 389          {
 390   1              data    U8      i;
 391   1              data    U8      j;
 392   1      
 393   1              for(i=4;i>0;i--)
 394   1              {
 395   2                      LCM_set_view(TFT_IconDispDir,IRNum_X_Pos+(IRNum_H_Size+2)*(4-i),IRNum_Y_Pos,IRNum_H_Size,IRNum_V_Size);
 396   2      
 397   2                      j=gc_NUMBER[i-1];
 398   2                      if(j==0xFF)
 399   2                      {
 400   3                              j=10;
 401   3                      }
 402   2                      LCD_DisplayIcon(IRNumID,j);
 403   2              }
 404   1      }
 405          
 406          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2001    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6      16
C51 COMPILER V9.00   TFT_DISPLAY                                                           07/10/2012 15:51:58 PAGE 8   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      48
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
