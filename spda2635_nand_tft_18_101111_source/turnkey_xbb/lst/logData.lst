C51 COMPILER V9.00   LOGDATA                                                               07/10/2012 15:51:54 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LOGDATA
OBJECT MODULE PLACED IN .\obj\logData.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE LogData\logData.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource
                    -\header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\logData.lst) OBJECT(.\obj\logData.obj)

line level    source

   1          #include "..\Header\SPDA2K.h"
   2          #include "..\header\dos\fs_struct.h"
   3          #include "..\header\Memalloc.h"
   4          #include "..\header\variables.h"
   5          
   6          
   7          extern xdata UBYTE gc_RepPlayMode;
   8          extern xdata System_Struct gs_System_State;
   9          
  10          extern bit      gb_DirPlay_Flag;
  11          extern xdata U8  gc_PlayModeChange_Flag;
  12          extern xdata U8  gc_RepPlayMode_Dir;
  13          extern xdata U8  gc_RepPlayMode_Nor;
  14          extern xdata U8  gc_CurrentHZK;
  15          
  16          U8 Read_LogData(void);
  17          U8 Write_LogData(void);
  18          U8 Get_LogData_PageIndex(void);
  19          U8 USER_LogFile_ReadWrite(U8 tbt_ReadOrWrite);//use reserveblock for log
  20          void USER_FillSettingInfo(void);
  21          void USER_GetSettingInfo(void);
  22          
  23          extern  xdata   U8      gc_LanguageSel;
  24          extern  xdata   U8      LanguageTable[];
  25          
  26          U8 Get_LogData_PageIndex(void)  
  27          {
  28   1              U8      data tc_i;
  29   1              U8  EmptyPageExists;
  30   1              U16     data tw_j;
  31   1              
  32   1              gc_UIblock0_index=0;    //initial
  33   1              EmptyPageExists=1;              //initial, 假設有空的page               
  34   1      
  35   1              for(tc_i=gw_PagesPerBlock-1;tc_i>=0;tc_i--)//由後往前檢查所有的pages,找出最近一個使用的page
  36   1              {
  37   2                      UserData_Block_Read(0,tc_i*gc_InAddrMax,1,gc_PlayRecordDataBufHB);      //block 0,sector tc_i*G_Card_PageSize
             - , 1 sector(s), source address is 0xAA00
  38   2                      if(gc_PlayRecordDataBuf[508] != 0xFF)
  39   2                      {//check 1 byte first, 不是空的sector
  40   3                              EmptyPageExists=0;      //flag : this sector is not empty               
  41   3                              break;//不是空的即跳出回圈
  42   3                      }
  43   2                      else
  44   2                      {//檢查1 byte後為空的,再確認其他bytes是否為0xFF
  45   3                              for (tw_j=0;tw_j<512;tw_j++)
  46   3                              {//check all bytes
  47   4                                      if (gc_PlayRecordDataBuf[tw_j]!=0xff)
  48   4                                      {//not empty sector
  49   5                                              EmptyPageExists=0;      //flag : this sector is not empty
  50   5                                              break;  //其他byte不需要再檢查
  51   5                                      }
  52   4      
  53   4                              }
C51 COMPILER V9.00   LOGDATA                                                               07/10/2012 15:51:54 PAGE 2   

  54   3                      }
  55   2      
  56   2                      if (!EmptyPageExists)
  57   2                      {//un-empty page found
  58   3      //                      dbprintf("page isn't empty\n");
  59   3                              break;  //停止檢查其他pages
  60   3                      }
  61   2                      
  62   2      
  63   2                      if (tc_i==0)
  64   2                      {//last checked page,表示整個block都是空的
  65   3                              break;  //avoid tc_i=0-1=0xFF
  66   3              }
  67   2              
  68   2              }//end,for(tc_i=gc_PagesPerBlock-1;tc_i>=0;tc_i--)
  69   1      
  70   1              if (EmptyPageExists)
  71   1              {//all are empty pages(tc_i=0~127 & EmptyPageExists=1)
  72   2                      gc_UIblock0_index =tc_i-1;      //
  73   2              }
  74   1              else
  75   1              {//found 有資料的page(tc_i=0 & EmptyPageExists=0)
  76   2                      gc_UIblock0_index =tc_i;//
  77   2              }
  78   1      
  79   1      //      dbprintf("last LogData at page %bx \n",gc_UIblock0_index);      
  80   1      
  81   1              return 0;
  82   1      }
  83          
  84          
  85          U8 Read_LogData(void)  
  86          {
  87   1              bit     tb_ReadWriteDataArea;
  88   1              
  89   1              tb_ReadWriteDataArea=gb_ReadWriteDataArea;
  90   1              gb_ReadWriteDataArea = 0;
  91   1              
  92   1              EA=0;
  93   1      
  94   1              if (gc_UIblock0_index==0xFF)
  95   1              {//1st page是空的
  96   2              }
  97   1              else
  98   1              {
  99   2                      UserData_Block_Read(0,gc_UIblock0_index*gc_InAddrMax,1,gc_PlayRecordDataBufHB); //block 0,sector gc_UIbl
             -ock0_index*G_Card_PageSize , 1 sector(s), source address is 0xAA00
 100   2              }
 101   1      
 102   1              EA=1;
 103   1              gb_ReadWriteDataArea=tb_ReadWriteDataArea;      //restore
 104   1              return 0;
 105   1      }       
 106          
 107          U8 Write_LogData(void)  
 108          {
 109   1              bit     tb_ReadWriteDataArea;
 110   1      
 111   1              tb_ReadWriteDataArea=gb_ReadWriteDataArea;
 112   1              gb_ReadWriteDataArea = 0;
 113   1      
 114   1              if(gc_UIblock0_index==(gw_PagesPerBlock-1))//already write last page,gc_UIblock0_index為上一筆資訊
C51 COMPILER V9.00   LOGDATA                                                               07/10/2012 15:51:54 PAGE 3   

 115   1              {//如果上一筆已經是最後一個page -> erase 1 block
 116   2      
 117   2                      UserData_Block_Erase(0);        
 118   2                      gc_UIblock0_index=0;    //從sector 0開始寫
 119   2              }
 120   1              else if (gc_UIblock0_index==0xFF)
 121   1              {//1st page是空的
 122   2                      gc_UIblock0_index=0;    //從sector 0開始寫
 123   2              }
 124   1              else
 125   1              {
 126   2                      gc_UIblock0_index=gc_UIblock0_index+1;  //從最後一page有資料的下一page開始寫
 127   2              }       
 128   1      
 129   1              //mark LogDATA valid
 130   1              gc_PlayRecordDataBuf[508] = 'L' ;       //0x4c
 131   1              gc_PlayRecordDataBuf[509] = 'O' ;       //0x4f
 132   1              gc_PlayRecordDataBuf[510] = 'G' ;       //0x47  
 133   1              gc_PlayRecordDataBuf[511] = 'D' ;       //0x44
 134   1      
 135   1              EA=0;
 136   1              UserData_Block_Write(0,gc_UIblock0_index*gc_InAddrMax,1,gc_PlayRecordDataBufHB);        //block 0,sector gc_UIbl
             -ock0_index*G_Card_PageSize , 1 sector(s), source address is 0xAA00
 137   1              EA=1;
 138   1              gb_ReadWriteDataArea=tb_ReadWriteDataArea;      //restore buffer assignment
 139   1              return 0;
 140   1      }
 141          
 142          
 143          void USER_GetSettingInfo(void)
 144          {
 145   1              gs_DSP_GLOBAL_RAM.sw_Volume = gc_PlayRecordDataBuf[0];
 146   1              gs_DSP_GLOBAL_RAM.sc_EQ_Type = gc_PlayRecordDataBuf[1];
 147   1              gc_RepPlayMode=gc_PlayRecordDataBuf[2];
 148   1      //      gc_RepPlayMode = gc_RepPlayMode;
 149   1              gc_LanguageSel=gc_PlayRecordDataBuf[22];
 150   1              gc_Contrast = gc_PlayRecordDataBuf[39];
 151   1              if(gc_LanguageSel>17)
 152   1              {
 153   2                      gc_LanguageSel=HZK_LANGUAGE;
 154   2              }
 155   1              gc_MenuHZK=gc_LanguageSel;//LanguageTable[gc_LanguageSel];//sunzhk modify
 156   1      
 157   1              gw_FM_frequency=((U16)(gc_PlayRecordDataBuf[3])<<8) + (U16)gc_PlayRecordDataBuf[4];
 158   1      
 159   1              if(gc_PlayModeChange_Flag==0)
 160   1              {
 161   2                      if(gc_PlayRecordDataBuf[20]<2)
 162   2                      {
 163   3                              gb_DirPlay_Flag = gc_PlayRecordDataBuf[20];
 164   3                      }
 165   2                      else
 166   2                      {
 167   3                              gb_DirPlay_Flag=0;      
 168   3                      }
 169   2              }
 170   1      
 171   1              gw_LogFileIndex=((U16)(gc_PlayRecordDataBuf[5])<<8) + (U16)gc_PlayRecordDataBuf[6];
 172   1              gw_SDLogFileIndex=((U16)(gc_PlayRecordDataBuf[7])<<8) + (U16)gc_PlayRecordDataBuf[8];
 173   1              gw_USBLogFileIndex=((U16)(gc_PlayRecordDataBuf[9])<<8) + (U16)gc_PlayRecordDataBuf[10];
 174   1              gw_DIRFileIndex=((U16)(gc_PlayRecordDataBuf[15])<<8) + (U16)gc_PlayRecordDataBuf[16];
 175   1              gdw_DIRFDB_StartCluster=((U32)(gc_PlayRecordDataBuf[11]) <<24) + ((U32)gc_PlayRecordDataBuf[12] <<16) + (
C51 COMPILER V9.00   LOGDATA                                                               07/10/2012 15:51:54 PAGE 4   

             -(U32)gc_PlayRecordDataBuf[13] << 8) + (U32)gc_PlayRecordDataBuf[14];
 176   1              gw_DIRFileTotalNumber=((U16)(gc_PlayRecordDataBuf[18])<<8) + (U16)gc_PlayRecordDataBuf[19];
 177   1      
 178   1              gw_SDDIRFileIndex=((U16)(gc_PlayRecordDataBuf[27])<<8) + (U16)gc_PlayRecordDataBuf[28];  //20090216 chiay
             -en add
 179   1              gdw_SDDIRFDB_StartCluster=((U32)(gc_PlayRecordDataBuf[23]) <<24) + ((U32)gc_PlayRecordDataBuf[24] <<16) +
             - ((U32)gc_PlayRecordDataBuf[25] << 8) + (U32)gc_PlayRecordDataBuf[26];
 180   1              gw_SDDIRFileTotalNumber=((U16)(gc_PlayRecordDataBuf[29])<<8) + (U16)gc_PlayRecordDataBuf[30];
 181   1      
 182   1              gw_HostDIRFileIndex=((U16)(gc_PlayRecordDataBuf[35])<<8) + (U16)gc_PlayRecordDataBuf[36];  //20090216 chi
             -ayen add
 183   1              gdw_HostDIRFDB_StartCluster=((U32)(gc_PlayRecordDataBuf[31]) <<24) + ((U32)gc_PlayRecordDataBuf[32] <<16)
             - + ((U32)gc_PlayRecordDataBuf[33] << 8) + (U32)gc_PlayRecordDataBuf[34];
 184   1              gw_HostDIRFileTotalNumber=((U16)(gc_PlayRecordDataBuf[37])<<8) + (U16)gc_PlayRecordDataBuf[38];
 185   1      
 186   1              if(gb_DirPlay_Flag==1)
 187   1              {
 188   2                      if(gc_CurrentCard==0)  //20090216 chiayen add
 189   2                      {
 190   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[0] = gc_PlayRecordDataBuf[11];
 191   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[1] = gc_PlayRecordDataBuf[12];
 192   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[2] = gc_PlayRecordDataBuf[13];
 193   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[3] = gc_PlayRecordDataBuf[14];
 194   3      
 195   3                              ((U8 *)(&gw_FileIndex[0]))[0] = gc_PlayRecordDataBuf[15];
 196   3                              ((U8 *)(&gw_FileIndex[0]))[1] = gc_PlayRecordDataBuf[16];
 197   3              
 198   3                              ((U8 *)(&gw_FileTotalNumber[0]))[0] = gc_PlayRecordDataBuf[18];
 199   3                              ((U8 *)(&gw_FileTotalNumber[0]))[1] = gc_PlayRecordDataBuf[19];
 200   3                      }
 201   2                      else if(gc_CurrentCard==2) //SD CARD
 202   2                      {
 203   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[0] = gc_PlayRecordDataBuf[23];
 204   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[1] = gc_PlayRecordDataBuf[24];
 205   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[2] = gc_PlayRecordDataBuf[25];
 206   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[3] = gc_PlayRecordDataBuf[26];
 207   3                              ((U8 *)(&gw_FileIndex[0]))[0] = gc_PlayRecordDataBuf[27];
 208   3                              ((U8 *)(&gw_FileIndex[0]))[1] = gc_PlayRecordDataBuf[28];
 209   3                              ((U8 *)(&gw_FileTotalNumber[0]))[0] = gc_PlayRecordDataBuf[29];
 210   3                              ((U8 *)(&gw_FileTotalNumber[0]))[1] = gc_PlayRecordDataBuf[30];                 
 211   3                      }
 212   2                      else if(gc_CurrentCard==5)  //HOST
 213   2                      {
 214   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[0] = gc_PlayRecordDataBuf[31];
 215   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[1] = gc_PlayRecordDataBuf[32];
 216   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[2] = gc_PlayRecordDataBuf[33];
 217   3                              ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[3] = gc_PlayRecordDataBuf[34];
 218   3                              ((U8 *)(&gw_FileIndex[0]))[0] = gc_PlayRecordDataBuf[35];
 219   3                              ((U8 *)(&gw_FileIndex[0]))[1] = gc_PlayRecordDataBuf[36];
 220   3                              ((U8 *)(&gw_FileTotalNumber[0]))[0] = gc_PlayRecordDataBuf[37];
 221   3                              ((U8 *)(&gw_FileTotalNumber[0]))[1] = gc_PlayRecordDataBuf[38];
 222   3                      }
 223   2              }
 224   1              gc_PlayModeChange_Flag=0;
 225   1      }
 226          
 227          
 228          void USER_FillSettingInfo(void)
 229          {
 230   1              if(gb_DirPlay_Flag==0)
 231   1              {
 232   2                      if(gc_CurrentCard==0)
C51 COMPILER V9.00   LOGDATA                                                               07/10/2012 15:51:54 PAGE 5   

 233   2                      {
 234   3                              gw_LogFileIndex=gw_FileIndex[0];        
 235   3                      }
 236   2                      else if(gc_CurrentCard==2)
 237   2                      {
 238   3                              gw_SDLogFileIndex=gw_FileIndex[0];              
 239   3                      }
 240   2                      else if(gc_CurrentCard==5)
 241   2                      {
 242   3                              gw_USBLogFileIndex=gw_FileIndex[0];             
 243   3                      }
 244   2                      gc_PlayRecordDataBuf[5] = (U8)(gw_LogFileIndex >>8);//Nand
 245   2                      gc_PlayRecordDataBuf[6] = (U8) gw_LogFileIndex;//Nand           
 246   2                      gc_PlayRecordDataBuf[7] = (U8)(gw_SDLogFileIndex >>8);//SD
 247   2                      gc_PlayRecordDataBuf[8] = (U8) gw_SDLogFileIndex;//SD
 248   2                      gc_PlayRecordDataBuf[9] = (U8)(gw_USBLogFileIndex >>8);//USB
 249   2                      gc_PlayRecordDataBuf[10] = (U8)gw_USBLogFileIndex;//USB
 250   2      
 251   2                      gc_PlayRecordDataBuf[11] = (U8)(gdw_DIRFDB_StartCluster >>24);
 252   2                      gc_PlayRecordDataBuf[12] = (U8)(gdw_DIRFDB_StartCluster>>16);
 253   2                      gc_PlayRecordDataBuf[13] = (U8)(gdw_DIRFDB_StartCluster>>8);
 254   2                      gc_PlayRecordDataBuf[14] = (U8) gdw_DIRFDB_StartCluster;
 255   2      
 256   2                      gc_PlayRecordDataBuf[15] = (U8)(gw_DIRFileIndex >>8);
 257   2                      gc_PlayRecordDataBuf[16] = (U8) gw_DIRFileIndex ;
 258   2      
 259   2                      gc_PlayRecordDataBuf[18] = (U8)(gw_DIRFileTotalNumber >>8);
 260   2                      gc_PlayRecordDataBuf[19] = (U8) gw_DIRFileTotalNumber ;
 261   2      
 262   2                      gc_PlayRecordDataBuf[23] = (U8)(gdw_SDDIRFDB_StartCluster >>24);  //20090216 chiayen add
 263   2                      gc_PlayRecordDataBuf[24] = (U8)(gdw_SDDIRFDB_StartCluster>>16);
 264   2                      gc_PlayRecordDataBuf[25] = (U8)(gdw_SDDIRFDB_StartCluster>>8);
 265   2                      gc_PlayRecordDataBuf[26] = (U8) gdw_SDDIRFDB_StartCluster;
 266   2                      gc_PlayRecordDataBuf[27] = (U8)(gw_SDDIRFileIndex >>8);
 267   2                      gc_PlayRecordDataBuf[28] = (U8) gw_SDDIRFileIndex;
 268   2                      gc_PlayRecordDataBuf[29] = (U8)(gw_SDDIRFileTotalNumber >>8);
 269   2                      gc_PlayRecordDataBuf[30] = (U8) gw_SDDIRFileTotalNumber;
 270   2      
 271   2                      gc_PlayRecordDataBuf[31] = (U8)(gdw_HostDIRFDB_StartCluster >>24);
 272   2                      gc_PlayRecordDataBuf[32] = (U8)(gdw_HostDIRFDB_StartCluster>>16);
 273   2                      gc_PlayRecordDataBuf[33] = (U8)(gdw_HostDIRFDB_StartCluster>>8);
 274   2                      gc_PlayRecordDataBuf[34] = (U8) gdw_HostDIRFDB_StartCluster;
 275   2                      gc_PlayRecordDataBuf[35] = (U8)(gw_HostDIRFileIndex >>8);
 276   2                      gc_PlayRecordDataBuf[36] = (U8) gw_HostDIRFileIndex;
 277   2                      gc_PlayRecordDataBuf[37] = (U8)(gw_HostDIRFileTotalNumber >>8);
 278   2                      gc_PlayRecordDataBuf[38] = (U8) gw_HostDIRFileTotalNumber;  //20090216 chiayen add
 279   2              }
 280   1              else    // Folder
 281   1              {
 282   2                      gc_PlayRecordDataBuf[5] = (U8)(gw_LogFileIndex >>8);//Nand
 283   2                      gc_PlayRecordDataBuf[6] = (U8) gw_LogFileIndex;//Nand           
 284   2                      gc_PlayRecordDataBuf[7] = (U8)(gw_SDLogFileIndex >>8);//SD
 285   2                      gc_PlayRecordDataBuf[8] = (U8) gw_SDLogFileIndex;//SD
 286   2                      gc_PlayRecordDataBuf[9] = (U8)(gw_USBLogFileIndex >>8);//USB
 287   2                      gc_PlayRecordDataBuf[10] = (U8)gw_USBLogFileIndex;//USB 
 288   2      
 289   2                      gc_PlayRecordDataBuf[11] = (U8)(gdw_DIRFDB_StartCluster >>24);  //20090216 chiayen add
 290   2                      gc_PlayRecordDataBuf[12] = (U8)(gdw_DIRFDB_StartCluster>>16);
 291   2                      gc_PlayRecordDataBuf[13] = (U8)(gdw_DIRFDB_StartCluster>>8);
 292   2                      gc_PlayRecordDataBuf[14] = (U8) gdw_DIRFDB_StartCluster;
 293   2      
 294   2                      gc_PlayRecordDataBuf[15] = (U8)(gw_DIRFileIndex >>8);
C51 COMPILER V9.00   LOGDATA                                                               07/10/2012 15:51:54 PAGE 6   

 295   2                      gc_PlayRecordDataBuf[16] = (U8) gw_DIRFileIndex ;
 296   2      
 297   2                      gc_PlayRecordDataBuf[18] = (U8)(gw_DIRFileTotalNumber >>8);
 298   2                      gc_PlayRecordDataBuf[19] = (U8) gw_DIRFileTotalNumber ;
 299   2                      gc_PlayRecordDataBuf[23] = (U8)(gdw_SDDIRFDB_StartCluster >>24);
 300   2                      gc_PlayRecordDataBuf[24] = (U8)(gdw_SDDIRFDB_StartCluster>>16);
 301   2                      gc_PlayRecordDataBuf[25] = (U8)(gdw_SDDIRFDB_StartCluster>>8);
 302   2                      gc_PlayRecordDataBuf[26] = (U8) gdw_SDDIRFDB_StartCluster;
 303   2                      gc_PlayRecordDataBuf[27] = (U8)(gw_SDDIRFileIndex >>8);
 304   2                      gc_PlayRecordDataBuf[28] = (U8) gw_SDDIRFileIndex;
 305   2                      gc_PlayRecordDataBuf[29] = (U8)(gw_SDDIRFileTotalNumber >>8);
 306   2                      gc_PlayRecordDataBuf[30] = (U8) gw_SDDIRFileTotalNumber;
 307   2      
 308   2                      gc_PlayRecordDataBuf[31] = (U8)(gdw_HostDIRFDB_StartCluster >>24);
 309   2                      gc_PlayRecordDataBuf[32] = (U8)(gdw_HostDIRFDB_StartCluster>>16);
 310   2                      gc_PlayRecordDataBuf[33] = (U8)(gdw_HostDIRFDB_StartCluster>>8);
 311   2                      gc_PlayRecordDataBuf[34] = (U8) gdw_HostDIRFDB_StartCluster;
 312   2                      gc_PlayRecordDataBuf[35] = (U8)(gw_HostDIRFileIndex >>8);
 313   2                      gc_PlayRecordDataBuf[36] = (U8) gw_HostDIRFileIndex;
 314   2                      gc_PlayRecordDataBuf[37] = (U8)(gw_HostDIRFileTotalNumber >>8);
 315   2                      gc_PlayRecordDataBuf[38] = (U8) gw_HostDIRFileTotalNumber;  //20090216 chiayen add
 316   2      
 317   2                      if(gc_CurrentCard==0)  //20090216 chiayen add
 318   2                      {
 319   3                              gc_PlayRecordDataBuf[11] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[0];
 320   3                              gc_PlayRecordDataBuf[12] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[1];
 321   3                              gc_PlayRecordDataBuf[13] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[2];
 322   3                              gc_PlayRecordDataBuf[14] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[3];
 323   3      
 324   3                              gc_PlayRecordDataBuf[15] = ((U8 *)(&gw_FileIndex[0]))[0];
 325   3                              gc_PlayRecordDataBuf[16] = ((U8 *)(&gw_FileIndex[0]))[1];
 326   3                      
 327   3                              gc_PlayRecordDataBuf[17] = gs_File_FCB[0].c_FileType;
 328   3                              gc_PlayRecordDataBuf[18] = ((U8 *)(&gw_FileTotalNumber[0]))[0];
 329   3                              gc_PlayRecordDataBuf[19] = ((U8 *)(&gw_FileTotalNumber[0]))[1]; 
 330   3                      }
 331   2                      else if(gc_CurrentCard==2)  //20090216 chiayen add
 332   2                      {
 333   3                              gc_PlayRecordDataBuf[23] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[0];
 334   3                              gc_PlayRecordDataBuf[24] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[1];
 335   3                              gc_PlayRecordDataBuf[25] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[2];
 336   3                              gc_PlayRecordDataBuf[26] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[3];
 337   3                              gc_PlayRecordDataBuf[27] = ((U8 *)(&gw_FileIndex[0]))[0];
 338   3                              gc_PlayRecordDataBuf[28] = ((U8 *)(&gw_FileIndex[0]))[1];
 339   3                              gc_PlayRecordDataBuf[29] = ((U8 *)(&gw_FileTotalNumber[0]))[0];
 340   3                              gc_PlayRecordDataBuf[30] = ((U8 *)(&gw_FileTotalNumber[0]))[1];         
 341   3                      }
 342   2                      else if(gc_CurrentCard==5)  //20090216 chiayen add
 343   2                      {
 344   3                              gc_PlayRecordDataBuf[31] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[0];
 345   3                              gc_PlayRecordDataBuf[32] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[1];
 346   3                              gc_PlayRecordDataBuf[33] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[2];
 347   3                              gc_PlayRecordDataBuf[34] = ((U8 *)(&gs_File_FCB[0].dw_FDB_StartCluster))[3];
 348   3                              gc_PlayRecordDataBuf[35] = ((U8 *)(&gw_FileIndex[0]))[0];
 349   3                              gc_PlayRecordDataBuf[36] = ((U8 *)(&gw_FileIndex[0]))[1];
 350   3                              gc_PlayRecordDataBuf[37] = ((U8 *)(&gw_FileTotalNumber[0]))[0];
 351   3                              gc_PlayRecordDataBuf[38] = ((U8 *)(&gw_FileTotalNumber[0]))[1];                 
 352   3                      }       
 353   2              }
 354   1              gc_PlayRecordDataBuf[0] = gs_DSP_GLOBAL_RAM.sw_Volume;//Vol
 355   1              gc_PlayRecordDataBuf[1] = gs_DSP_GLOBAL_RAM.sc_EQ_Type;//EQ
 356   1              gc_PlayRecordDataBuf[2] = gc_RepPlayMode;
C51 COMPILER V9.00   LOGDATA                                                               07/10/2012 15:51:54 PAGE 7   

 357   1              gc_PlayRecordDataBuf[3] = (U8)(gw_FM_frequency >>8);
 358   1              gc_PlayRecordDataBuf[4] = (U8) gw_FM_frequency;
 359   1      
 360   1              gc_PlayRecordDataBuf[20] = gb_DirPlay_Flag;
 361   1              gc_PlayRecordDataBuf[22] = gc_LanguageSel;
 362   1              gc_PlayRecordDataBuf[39] = gc_Contrast;
 363   1      }
 364          
 365          
 366          U8 USER_LogFile_ReadWrite(U8 tbt_ReadOrWrite)//use reserveblock for log
 367          {
 368   1              if(tbt_ReadOrWrite==0)//read log
 369   1              {
 370   2                      Read_LogData();
 371   2                      USER_GetSettingInfo();
 372   2              }
 373   1              else
 374   1              {
 375   2                      USER_FillSettingInfo();
 376   2                      Write_LogData();
 377   2              }
 378   1              return 0;
 379   1      }
 380          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1728    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
