A51 MACRO ASSEMBLER  L51_BANK                                                             07/10/2012 15:51:43 PAGE     1


MACRO ASSEMBLER A51 V8.01
OBJECT MODULE PLACED IN .\obj\L51_BANK.obj
ASSEMBLER INVOKED BY: C:\Keil\C51\BIN\A51.EXE ..\LIBSOURCE\ASM\L51_BANK.A51 SET(LARGE) DEBUG PRINT(.\lst\L51_BANK.lst) O
                      BJECT(.\obj\L51_BANK.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     
                       2     $nomod51  NOLINES
                       3     $nocond 
                       4     
  00B0                 5     P3      EQU     0B0H
  0084                 6     DPL1    EQU     084H
  0085                 7     DPH1    EQU     085H
  0086                 8     DPS     EQU     086H
  00A8                 9     IE      EQU     0A8H
  00AF                10     EA      EQU     0A8H.7
  00E0                11     ACC     EQU     0E0H
  008D                12     TH1     EQU     08DH
  0018                13     Using3_R0 EQU   018H
  0019                14     Using3_R1 EQU   019H
  001A                15     Using3_R2 EQU   01AH
  001B                16     Using3_R3 EQU   01BH
  001C                17     Using3_R4 EQU   01CH
  001D                18     Using3_R5 EQU   01DH
  001E                19     Using3_R6 EQU   01EH
  001F                20     Using3_R7 EQU   01FH
                      21     ;************************ Configuration Section *******************************
  0020                22     ?B_NBANKS       EQU  32   ; Define max. Number of Banks                       *
                      23     ;                         ; The following values are allowed: 2, 4, 8, 16, 32 *
                      24     ;                         ; the max. value for ?B_BANKS is 32                 *
                      25     ;                                                                             *
  0000                26     ?B_MODE         EQU  0    ; 0 for Bank-Switching via 8051 Port                *
                      27     ;                         ; 1 for Bank-Switching via XDATA Port               *
                      28     ;                         ; 4 for user-provided bank switch code              *
                      29     ;                                                                             *
  0000                30     ?B_RTX          EQU  0    ; 0 for applications without RTX-51 FULL            *
                      31     ;                         ; 1 for applications using RTX-51 FULL              *
                      32     ;                                                                             *
  0000                33     ?B_VAR_BANKING  EQU  0    ; Enable Variable Banking in XDATA and CODE memory  *
                      34     ;                         ; 0 Variable Banking is disabled                    *
                      35     ;                         ; 1 XDATA and CODE banking with same address lines  *
                      36     ;                         ; 2 XDATA uses a different banking port             *
                      37     ;                                                                             *
  009A                38     ROMPAGE         DATA    9AH      ; I/O Port Address                           *
                      39     
                             ENDIF;                                                                        *
                      54     ;                                                                             *
                      55     ;-----------------------------------------------------------------------------*
                      56     ; if ?BANK?MODE is 0 define the following values                              *
                      57     ; For Bank-Switching via 8051 Port define Port Address / Bits                 *
                      58     ;                                                                             *
                      59     ;ROMPAGE         DATA    9AH      ; I/O Port Address                           *
                      60     ;                                                                             *
  009A                61     ?B_PORT         EQU     ROMPAGE  ; default is P1                              *
  0000                62     ?B_FIRSTBIT     EQU     0        ; default is Bit 0                           *
                      63     ;-----------------------------------------------------------------------------*
                      64     
                      65     ;                                                                             *
                      66     ;******************************************************************************
                      67     ;                                                                             *
                      68     ; THEORY OF OPERATION                                                         *
                      69     ; -------------------                                                         *
                      70     ; The section below describes the code generated by BL51 or L251 and the      *
A51 MACRO ASSEMBLER  L51_BANK                                                             07/10/2012 15:51:43 PAGE     2

                      71     ; operation of the L51_BANK.A51 module.  BL51/L251 generates for each         *
                      72     ; function that is located in a code memory bank and called from the common   *
                      73     ; area or a different code bank and entry into the INTRABANK CALL TABLE.  The *
                      74     ; INTRABANK CALL TABLE is located in the SEGMENT ?BANK?SELECT and listed in   *
                      75     ; the Linker MAP file. The entries in that TABLE have the following format:   *
                      76     ;                                                                             *
                      77     ;   ?FCT?1:  MOV  DPTR,#FCT     ; Load Address of target FCT                  *
                      78     ;            JMP  ?B_BANKn      ; Switch to Bank and Jump to Target Code      *
                      79     ;                                                                             *
                      80     ; Instead of directly calling the function FCT, the Linker changes the entry  *
                      81     ; to ?FCT?1.  This entry selects the bank where the function FCT is located   *
                      82     ; and calls that function via the routines defined in this L51_BANK.A51 file. *
                      83     ; The L51_BANK.A51 file contains two sets of functions for each bank:         *
                      84     ;                                                                             *
                      85     ; ?B_BANKn    is a routine which saves the entry of the ?B_SWITCHn function   *
                      86     ;             for the current active bank on the STACK and switches to the    *
                      87     ;             bank 'n'.  Then it jumps to the address specified by the DPTR   *
                      88     ;             register.  It is allowed to modify the following registers in   *
                      89     ;             the ?B_BANKn routine:  A, B, R0, DPTR, PSW                      *
                      90     ;                                                                             *
                      91     ; ?B_SWITCHn  is a function which selects the bank 'n'.  This function is     *
                      92     ;             used at the end of a user function to return to the calling     *
                      93     ;             code bank.  Only the following registers may be altered in the  *
                      94     ;             ?B_SWITCHn function:  R0, DPTR                                  *
                      95     ;                                                                             *
                      96     ; The current active bank is stored in ?B_CURRENTBANK.  RTX-51 uses this      *
                      97     ; variable to restore the code bank after a task switch.  To get correct      *
                      98     ; results, ?B_CURRENTBANK must be set to the code bank before the hardware    *
                      99     ; switch is done, or the code banking sequences must be interrupt protected.  *
                     100     ;******************************************************************************
                     101     
                     102                     NAME    ?BANK?SWITCHING
                     103     
                     104                     PUBLIC  ?B_NBANKS
                     105     
                     106     ; Standard SFR Symbols required in L51_BANK.A51
                     107     
                     108     ;EXTRN DATA (gc_bank_status, gc_bank_number)
                     109     EXTRN CODE (perform_nand_bank_call)
                     110     ;;==============MACRO===================
                     111     SELECT          MACRO   N
                     112                     PUBLIC  ?B_BANK&N
                     113     ?B_BANK&N:   
                     114                             mov     A,#0N
                     115                     jmp     perform_nand_bank_call ;?B_SWITCH&N
                     116                     ENDM
                     117     
                     118     ;;==============BANK SELECT=============
                     119     ?BANK?SELECT    SEGMENT  CODE ;INBLOCK
                     120     
----                 121                     RSEG    ?BANK?SELECT
  0000               122     CNT             SET     0
                     123     
                     124                     REPT    ?B_NBANKS
                     125                     SELECT  %CNT
                     126     CNT             SET     CNT+1
                     127                     ENDM
                     128+1                   SELECT  %CNT
                     134+1                   SELECT  %CNT
                     140+1                   SELECT  %CNT
                     146+1                   SELECT  %CNT
                     152+1                   SELECT  %CNT
                     158+1                   SELECT  %CNT
                     164+1                   SELECT  %CNT
                     170+1                   SELECT  %CNT
                     176+1                   SELECT  %CNT
A51 MACRO ASSEMBLER  L51_BANK                                                             07/10/2012 15:51:43 PAGE     3

                     182+1                   SELECT  %CNT
                     188+1                   SELECT  %CNT
                     194+1                   SELECT  %CNT
                     200+1                   SELECT  %CNT
                     206+1                   SELECT  %CNT
                     212+1                   SELECT  %CNT
                     218+1                   SELECT  %CNT
                     224+1                   SELECT  %CNT
                     230+1                   SELECT  %CNT
                     236+1                   SELECT  %CNT
                     242+1                   SELECT  %CNT
                     248+1                   SELECT  %CNT
                     254+1                   SELECT  %CNT
                     260+1                   SELECT  %CNT
                     266+1                   SELECT  %CNT
                     272+1                   SELECT  %CNT
                     278+1                   SELECT  %CNT
                     284+1                   SELECT  %CNT
                     290+1                   SELECT  %CNT
                     296+1                   SELECT  %CNT
                     302+1                   SELECT  %CNT
                     308+1                   SELECT  %CNT
                     314+1                   SELECT  %CNT
                     320     ;;======================================
                     321     ;;==============MACRO===================
                     322     SWITCH          MACRO   N
                     323                     ORG     0;N * 8
                     324                     PUBLIC  ?B_SWITCH&N
                     325     ?B_SWITCH&N:  
                     326                     nop ;jmp        perform_nand_bank_call
                     327                     ENDM
                     328     
                     329     ;;==============BANK SWITCH=============                        
                     330     ?BANK?SWITCH    SEGMENT  CODE  
                     331     
----                 332                     RSEG    ?BANK?SWITCH
  0000               333     CNT             SET     0
                     334     
                     335                     REPT    ?B_NBANKS
                     336                     SWITCH  %CNT
                     337     CNT             SET     CNT+1
                     338                     ENDM
                     339+1                   SWITCH  %CNT
                     345+1                   SWITCH  %CNT
                     351+1                   SWITCH  %CNT
                     357+1                   SWITCH  %CNT
                     363+1                   SWITCH  %CNT
                     369+1                   SWITCH  %CNT
                     375+1                   SWITCH  %CNT
                     381+1                   SWITCH  %CNT
                     387+1                   SWITCH  %CNT
                     393+1                   SWITCH  %CNT
                     399+1                   SWITCH  %CNT
                     405+1                   SWITCH  %CNT
                     411+1                   SWITCH  %CNT
                     417+1                   SWITCH  %CNT
                     423+1                   SWITCH  %CNT
                     429+1                   SWITCH  %CNT
                     435+1                   SWITCH  %CNT
                     441+1                   SWITCH  %CNT
                     447+1                   SWITCH  %CNT
                     453+1                   SWITCH  %CNT
                     459+1                   SWITCH  %CNT
                     465+1                   SWITCH  %CNT
                     471+1                   SWITCH  %CNT
                     477+1                   SWITCH  %CNT
A51 MACRO ASSEMBLER  L51_BANK                                                             07/10/2012 15:51:43 PAGE     4

                     483+1                   SWITCH  %CNT
                     489+1                   SWITCH  %CNT
                     495+1                   SWITCH  %CNT
                     501+1                   SWITCH  %CNT
                     507+1                   SWITCH  %CNT
                     513+1                   SWITCH  %CNT
                     519+1                   SWITCH  %CNT
                     525+1                   SWITCH  %CNT
                     531     ;;======================================
                     532     
A51 MACRO ASSEMBLER  L51_BANK                                                             07/10/2012 15:51:43 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E                 T Y P E  V A L U E   ATTRIBUTES

?BANK?SELECT . . . . .  C SEG    00A0H       REL=UNIT
?BANK?SWITCH . . . . .  C SEG    0001H       REL=UNIT
?BANK?SWITCHING. . . .  N NUMB   -----       
?B_BANK0 . . . . . . .  C ADDR   0000H   R   SEG=?BANK?SELECT
?B_BANK1 . . . . . . .  C ADDR   0005H   R   SEG=?BANK?SELECT
?B_BANK10. . . . . . .  C ADDR   0032H   R   SEG=?BANK?SELECT
?B_BANK11. . . . . . .  C ADDR   0037H   R   SEG=?BANK?SELECT
?B_BANK12. . . . . . .  C ADDR   003CH   R   SEG=?BANK?SELECT
?B_BANK13. . . . . . .  C ADDR   0041H   R   SEG=?BANK?SELECT
?B_BANK14. . . . . . .  C ADDR   0046H   R   SEG=?BANK?SELECT
?B_BANK15. . . . . . .  C ADDR   004BH   R   SEG=?BANK?SELECT
?B_BANK16. . . . . . .  C ADDR   0050H   R   SEG=?BANK?SELECT
?B_BANK17. . . . . . .  C ADDR   0055H   R   SEG=?BANK?SELECT
?B_BANK18. . . . . . .  C ADDR   005AH   R   SEG=?BANK?SELECT
?B_BANK19. . . . . . .  C ADDR   005FH   R   SEG=?BANK?SELECT
?B_BANK2 . . . . . . .  C ADDR   000AH   R   SEG=?BANK?SELECT
?B_BANK20. . . . . . .  C ADDR   0064H   R   SEG=?BANK?SELECT
?B_BANK21. . . . . . .  C ADDR   0069H   R   SEG=?BANK?SELECT
?B_BANK22. . . . . . .  C ADDR   006EH   R   SEG=?BANK?SELECT
?B_BANK23. . . . . . .  C ADDR   0073H   R   SEG=?BANK?SELECT
?B_BANK24. . . . . . .  C ADDR   0078H   R   SEG=?BANK?SELECT
?B_BANK25. . . . . . .  C ADDR   007DH   R   SEG=?BANK?SELECT
?B_BANK26. . . . . . .  C ADDR   0082H   R   SEG=?BANK?SELECT
?B_BANK27. . . . . . .  C ADDR   0087H   R   SEG=?BANK?SELECT
?B_BANK28. . . . . . .  C ADDR   008CH   R   SEG=?BANK?SELECT
?B_BANK29. . . . . . .  C ADDR   0091H   R   SEG=?BANK?SELECT
?B_BANK3 . . . . . . .  C ADDR   000FH   R   SEG=?BANK?SELECT
?B_BANK30. . . . . . .  C ADDR   0096H   R   SEG=?BANK?SELECT
?B_BANK31. . . . . . .  C ADDR   009BH   R   SEG=?BANK?SELECT
?B_BANK4 . . . . . . .  C ADDR   0014H   R   SEG=?BANK?SELECT
?B_BANK5 . . . . . . .  C ADDR   0019H   R   SEG=?BANK?SELECT
?B_BANK6 . . . . . . .  C ADDR   001EH   R   SEG=?BANK?SELECT
?B_BANK7 . . . . . . .  C ADDR   0023H   R   SEG=?BANK?SELECT
?B_BANK8 . . . . . . .  C ADDR   0028H   R   SEG=?BANK?SELECT
?B_BANK9 . . . . . . .  C ADDR   002DH   R   SEG=?BANK?SELECT
?B_FIRSTBIT. . . . . .  N NUMB   0000H   A   
?B_MODE. . . . . . . .  N NUMB   0000H   A   
?B_NBANKS. . . . . . .  N NUMB   0020H   A   
?B_PORT. . . . . . . .  D ADDR   009AH   A   
?B_RTX . . . . . . . .  N NUMB   0000H   A   
?B_SWITCH0 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH1 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH10. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH11. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH12. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH13. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH14. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH15. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH16. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH17. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH18. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH19. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH2 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH20. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH21. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH22. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH23. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH24. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH25. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH26. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
A51 MACRO ASSEMBLER  L51_BANK                                                             07/10/2012 15:51:43 PAGE     6

?B_SWITCH27. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH28. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH29. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH3 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH30. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH31. . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH4 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH5 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH6 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH7 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH8 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_SWITCH9 . . . . . .  C ADDR   0000H   R   SEG=?BANK?SWITCH
?B_VAR_BANKING . . . .  N NUMB   0000H   A   
ACC. . . . . . . . . .  N NUMB   00E0H   A   
CNT. . . . . . . . . .  N NUMB   0020H   A   
DPH1 . . . . . . . . .  N NUMB   0085H   A   
DPL1 . . . . . . . . .  N NUMB   0084H   A   
DPS. . . . . . . . . .  N NUMB   0086H   A   
EA . . . . . . . . . .  B ADDR   00A8H.7 A   
IE . . . . . . . . . .  N NUMB   00A8H   A   
P3 . . . . . . . . . .  N NUMB   00B0H   A   
PERFORM_NAND_BANK_CALL  C ADDR   -----       EXT
ROMPAGE. . . . . . . .  D ADDR   009AH   A   
TH1. . . . . . . . . .  N NUMB   008DH   A   
USING3_R0. . . . . . .  N NUMB   0018H   A   
USING3_R1. . . . . . .  N NUMB   0019H   A   
USING3_R2. . . . . . .  N NUMB   001AH   A   
USING3_R3. . . . . . .  N NUMB   001BH   A   
USING3_R4. . . . . . .  N NUMB   001CH   A   
USING3_R5. . . . . . .  N NUMB   001DH   A   
USING3_R6. . . . . . .  N NUMB   001EH   A   
USING3_R7. . . . . . .  N NUMB   001FH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
