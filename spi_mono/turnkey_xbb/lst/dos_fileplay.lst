C51 COMPILER V9.00   DOS_FILEPLAY                                                          07/09/2012 21:16:46 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DOS_FILEPLAY
OBJECT MODULE PLACED IN .\obj\dos_fileplay.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DOS\dos_fileplay.C LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsourc
                    -e\header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\dos_fileplay.lst) OBJECT(.\obj\dos_fileplay.obj)

line level    source

   1          #include <string.h>
   2          #include "..\header\SPDA2K.h"
   3          #include "..\header\variables.h"
   4          
   5          #ifdef SPI_1M
   6          
   7          void UNICODE_READ_HZK_SECTOR_ISN(U16 tw_SectorCount)
   8          {
   9   1              SPI_DSPHZK_Block_Read(1,tw_SectorCount,gc_PlayRecordDataBufHB);
  10   1      }
  11          
  12          void X_UnicodeConvGB2312BIGSJIS(unsigned char *Unicode1,unsigned char *Unicode2)
  13          {       
  14   1              bit hit;
  15   1              U8      aa=11,counter=2,number=0,len=22;
  16   1              U16     tw_hzkbyteoffest = 0;
  17   1              U16     tw_hzksectoroffest = 0;
  18   1              U32     (*UtoX_Table_Offset)[3];
  19   1              U32     InputOffset;
  20   1      
  21   1              U32 code UtoG_table_offset[][3]=
  22   1              {
  23   1                      { 322,  406,  322},
  24   1                      { 924,  42,  518},
  25   1                      { 1414,  14,  966},
  26   1                      { 1820,  126,  1358},
  27   1                      { 2044,  168,  1456},
  28   1                      { 16422,  84,  15666},
  29   1                      { 16898,  56,  16058},
  30   1                      { 17080,  112,  16184},
  31   1                      { 17416,  224,  16408},
  32   1                      { 17710,  42,  16478},
  33   1                      { 17948,  14,  16674},
  34   1                      { 18620,  126,  17332},
  35   1                      { 18942,  238,  17528},
  36   1                      { 19264,  98,  17612},
  37   1                      { 19460,  28,  17710},
  38   1                      { 19572,  28,  17794},
  39   1                      { 24570,  602,  22764},
  40   1                      { 25662,  28,  23254},
  41   1                      { 39928,  41818,  37492},
  42   1                      { 128016,  14,  83762},
  43   1                      { 130550,  210,  86282},
  44   1                      { 130998,  28,  86520}
  45   1              };
  46   1      
  47   1      
  48   1      
  49   1              InputOffset = (((U16)(*Unicode1) << 8) + *Unicode2);
  50   1              hit=0;
  51   1      
  52   1              InputOffset=InputOffset*2;
  53   1      
  54   1              UtoX_Table_Offset=UtoG_table_offset;
C51 COMPILER V9.00   DOS_FILEPLAY                                                          07/09/2012 21:16:46 PAGE 2   

  55   1      
  56   1              while(!hit)
  57   1              {
  58   2                      counter*=2;
  59   2                      if( (InputOffset>=UtoX_Table_Offset[aa][0]) && ( InputOffset <= UtoX_Table_Offset[aa+1][0] ))
  60   2                      {
  61   3                              if((InputOffset>=UtoX_Table_Offset[aa][0]) && (InputOffset <= (U32)UtoX_Table_Offset[aa][0]+ (U32)UtoX_
             -Table_Offset[aa][1] ))
  62   3                              {
  63   4                                      hit=1;
  64   4                              }
  65   3                              else
  66   3                              { 
  67   4                                      goto CantFindUnicode;
  68   4                              }
  69   3                      }
  70   2                      else
  71   2                      {
  72   3                              number=len/counter;
  73   3                              if(number<1) number=1;
  74   3                              if(InputOffset>UtoX_Table_Offset[aa][0])
  75   3                              {
  76   4                                      aa=aa+number; 
  77   4                              }
  78   3                              else
  79   3                              {
  80   4                                      aa=aa-number; 
  81   4                                      if (aa<0)
  82   4                                      {
  83   5                                              goto CantFindUnicode;
  84   5                                      }                               
  85   4                              }
  86   3                      }
  87   2              }
  88   1      
  89   1              InputOffset = InputOffset-UtoX_Table_Offset[aa][2];
  90   1      
  91   1              tw_hzksectoroffest = InputOffset/512;
  92   1              tw_hzkbyteoffest = InputOffset%512;
  93   1              UNICODE_READ_HZK_SECTOR_ISN(390+tw_hzksectoroffest);
  94   1      
  95   1              *Unicode1 = gc_PlayRecordDataBuf[tw_hzkbyteoffest];
  96   1              *Unicode2 = gc_PlayRecordDataBuf[tw_hzkbyteoffest+1];
  97   1              
  98   1              return;
  99   1      
 100   1      CantFindUnicode:
 101   1              *Unicode1 = 0x20;
 102   1              *Unicode2 = 0x20;
 103   1              return;
 104   1      }
 105          
 106          
 107          U8 X_Unicode2ISN(U8 *UnicodeArray)
 108          {
 109   1              U16     ISNByteNum,i,UnicodeLenth;
 110   1              
 111   1              if(!UnicodeArray[2])
 112   1              {//long
 113   2                      U8 tc_Temp;     
 114   2                      ((U8 *)(&UnicodeLenth))[0] = UnicodeArray[3];
 115   2                      ((U8 *)(&UnicodeLenth))[1] = UnicodeArray[4];
C51 COMPILER V9.00   DOS_FILEPLAY                                                          07/09/2012 21:16:46 PAGE 3   

 116   2                      for(i=5;i < UnicodeLenth+5;i+=2)
 117   2                      {
 118   3                              tc_Temp = UnicodeArray[i];
 119   3                              UnicodeArray[i] = UnicodeArray[i+1];
 120   3                              UnicodeArray[i+1] = tc_Temp;
 121   3                      }
 122   2                      ISNByteNum = 5;
 123   2                      for(i=5;i < UnicodeLenth+5;i+=2)
 124   2                      {
 125   3                              if(*(UnicodeArray+i)==0x00)
 126   3                              {
 127   4                                      if(*(UnicodeArray+i+1)==0x00)
 128   4                                              break;
 129   4                                      *(UnicodeArray+ISNByteNum)=*(UnicodeArray+i+1);
 130   4                                      ISNByteNum++;
 131   4                              }
 132   3                              else
 133   3                              {
 134   4                                      X_UnicodeConvGB2312BIGSJIS( (UnicodeArray+i), (UnicodeArray+i+1) );
 135   4                                      *(UnicodeArray+ISNByteNum)=*(UnicodeArray+i);
 136   4                                      *(UnicodeArray+ISNByteNum+1)=*(UnicodeArray+i+1);
 137   4                                      ISNByteNum+=2;
 138   4                              }
 139   3                      }
 140   2                      ISNByteNum -= 5;
 141   2                      UnicodeArray[3] = ((U8 *)(&ISNByteNum))[0];
 142   2                      UnicodeArray[4] = ((U8 *)(&ISNByteNum))[1];     
 143   2                      UnicodeArray[2] = 0x01;
 144   2              }
 145   1              return ISNByteNum;
 146   1      }
 147          #endif
 148          
 149          U8 DOS_GetLongFileName(U8 tc_FileHandle, U8 * tpc_LongName)
 150          {
 151   1              data    bit     tb_EndSign=0;
 152   1              data    U8      tc_Chksum=0;
 153   1              data    U8      tc_LogAddrNum=1;
 154   1              data    U8      j;
 155   1              data    U16     i;
 156   1              data    U16     tw_FDB_Offset;
 157   1              data    U16     tw_LFN_Offset;
 158   1              data    U16     tw_FileNameLen;
 159   1              xdata   U8  tc_Array[26];
 160   1              xdata   U32     tdw_Addr;
 161   1      
 162   1              tdw_Addr=gs_File_FCB[tc_FileHandle].dw_FDB_LogAdd;
 163   1              tw_FDB_Offset=gs_File_FCB[tc_FileHandle].w_FDB_Offset;
 164   1      
 165   1              gb_ReadWriteDataArea=1;
 166   1              DOS_Read_LogicSector(tdw_Addr);
 167   1      
 168   1              memcpy(tc_Array,&gc_UserDataBuf[tw_FDB_Offset],11);
 169   1      
 170   1              for(j=0;j<11;j++)
 171   1              {
 172   2                      tc_Chksum = ((tc_Chksum & 1) ? 0x80 : 0) + (tc_Chksum >> 1) + gc_UserDataBuf[tw_FDB_Offset+j];
 173   2              }//compute the Chksum!
 174   1              
 175   1              tw_LFN_Offset=tw_FDB_Offset;
 176   1              i=5;//fill the UNICODE from the offset 3! 
 177   1              while(i<512)
C51 COMPILER V9.00   DOS_FILEPLAY                                                          07/09/2012 21:16:46 PAGE 4   

 178   1              {        
 179   2                      if(tw_LFN_Offset>=32)
 180   2                      {       
 181   3                              tw_LFN_Offset-=32;
 182   3                      }
 183   2                      else
 184   2                      {
 185   3                              if(tc_LogAddrNum==1)
 186   3                              {
 187   4                                      tdw_Addr=gs_File_FCB[tc_FileHandle].dw_LongFDB_LogAdd0;
 188   4                                      tc_LogAddrNum=2;
 189   4                              } 
 190   3                              else if(tc_LogAddrNum==2) 
 191   3                              {
 192   4                                      tdw_Addr=gs_File_FCB[tc_FileHandle].dw_LongFDB_LogAdd1;
 193   4                              }
 194   3                              if(gc_CurrentCard==9)
 195   3                              {
 196   4                                      return 1;
 197   4                              }
 198   3                              gb_ReadWriteDataArea=1;
 199   3                              DOS_Read_LogicSector(tdw_Addr);
 200   3                              tw_LFN_Offset=512-32;
 201   3                      }
 202   2                      
 203   2                      if((gc_UserDataBuf[tw_LFN_Offset]&0x40)==0x40)
 204   2                      {
 205   3                              tb_EndSign=1;
 206   3                      }       
 207   2      
 208   2                      if(((gc_UserDataBuf[tw_LFN_Offset+11]==0x0f)||(gc_UserDataBuf[tw_LFN_Offset+11]==0x3f))&&(gc_UserDataBuf
             -[tw_LFN_Offset+12]==0x00)&&(gc_UserDataBuf[tw_LFN_Offset+13]==tc_Chksum))
 209   2                      {        
 210   3                              j=26;
 211   3                              while(j>0)
 212   3                              {
 213   4                                      tpc_LongName[i]=gc_UserDataBuf[tw_LFN_Offset+Unicode_Offset[j-1]];//fill        the long file name into the a
             -rray
 214   4                                      tpc_LongName[i+1]=gc_UserDataBuf[tw_LFN_Offset+Unicode_Offset[j-2]];
 215   4                                      i+=2;
 216   4                                      j-=2;
 217   4                              }
 218   3                      } 
 219   2                      else 
 220   2                      { 
 221   3                              j=0;
 222   3                              gb_ReadWriteDataArea=1;
 223   3                              DOS_Read_LogicSector(gs_File_FCB[tc_FileHandle].dw_FDB_LogAdd);
 224   3                              tpc_LongName[0]=0;
 225   3                              tpc_LongName[1]=0;
 226   3                              tpc_LongName[3]=0;
 227   3                              tpc_LongName[2]=K_ShortFileName;
 228   3                              while(j<8)
 229   3                              {
 230   4                                      tpc_LongName[5+j]=tc_Array[j];
 231   4                                      if(tc_Array[j]==0x20)
 232   4                                      {
 233   5                                              break;
 234   5                                      }       
 235   4                                      j++;
 236   4                              }
 237   3                              if (tc_Array[8] != 0x20)
C51 COMPILER V9.00   DOS_FILEPLAY                                                          07/09/2012 21:16:46 PAGE 5   

 238   3                              {
 239   4                                      tpc_LongName[5+j]=0x2e;
 240   4                                      j+=1;
 241   4                              }
 242   3                              if (tc_Array[8] != 0x20)
 243   3                              {
 244   4                                      tpc_LongName[5+j]=tc_Array[8];
 245   4                                      j++;
 246   4                                      if (tc_Array[9] != 0x20)
 247   4                                      {
 248   5                                              tpc_LongName[5+j]=tc_Array[9];
 249   5                                              j++;
 250   5                                              if (tc_Array[10] != 0x20)
 251   5                                              {
 252   6                                                      tpc_LongName[5+j]=tc_Array[10];
 253   6                                                      j++;
 254   6                                              }
 255   5                                      }
 256   4                              }
 257   3      
 258   3                              tpc_LongName[4]=j;
 259   3                                      
 260   3                              return 0;               
 261   3                      }
 262   2                      
 263   2                      if(tb_EndSign) //when end,fill the first 3 bytes indicate the information of long file name!
 264   2                      {
 265   3                              tpc_LongName[0]=gc_UserDataBuf[tw_LFN_Offset];
 266   3                              tpc_LongName[2]=K_LongFileName;
 267   3      
 268   3      
 269   3                              for (j = 26; j > 0; j=j-2)
 270   3                              {
 271   4                                      if((gc_UserDataBuf[tw_LFN_Offset+Unicode_Offset[j-1]]==0)&&(gc_UserDataBuf[tw_LFN_Offset+Unicode_Offse
             -t[j-2]]==0))
 272   4                                      {
 273   5                                              break; 
 274   5                                      }
 275   4                              }
 276   3                              tpc_LongName[1] = j;
 277   3                              tw_FileNameLen=(((tpc_LongName[0]&0x3f)-1)*26)+(26-tpc_LongName[1]-1);
 278   3                              tpc_LongName[3]=((U8 *)(&tw_FileNameLen))[0];            //save the high 4bit 
 279   3                              tpc_LongName[4]=((U8 *)(&tw_FileNameLen))[1];          //save the low 4bit
 280   3                              return 0;
 281   3                      }
 282   2              }
 283   1              return 0;
 284   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1647    ----
   CONSTANT SIZE    =    264    ----
   XDATA SIZE       =   ----      65
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
