C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE HOST_INIT
OBJECT MODULE PLACED IN .\obj\Host_init.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Host\Host_init.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource\
                    -header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\Host_init.lst) OBJECT(.\obj\Host_init.obj)

line level    source

   1          #include "..\header\SPDA2K.h"
   2          #include "..\header\host_init.h"
   3          #include "..\header\variables.h"
   4          
   5          
   6          void Host_register_INIT(void)
   7          {
   8   1          XBYTE[0xB002]|=0x06;        // USB & Host Reset
   9   1          XBYTE[0xB002]=0;
  10   1              XBYTE[0xB0E9]&=0xFE;
  11   1              XBYTE[0xB5e6]=0x00;      //bulk sram gated clock
  12   1          XBYTE[0xB017]=0x01;   //USB2.0 UTMI op mode set
  13   1              XBYTE[0xB522]=0x01;      //USB2.0 UTMI clock mode set                           
  14   1              XBYTE[0xB019]=0x01;   //host mode
  15   1              Syn_Reset();
  16   1      }
  17          
  18          U8 Host_Initial(void)
  19          {
  20   1              data    U8      i;
  21   1              data    U8      tc_EP_flag;
  22   1              data    U8      states;
  23   1              data    U8      tc_StrProductName;
  24   1              data    U8      tc_StrSerialNum;
  25   1              data    U16     Stg_idx;
  26   1      
  27   1      USB_HOST_Init:
  28   1              gc_HostDeviceAddress=1;
  29   1              gb_HostConnect=1;
  30   1              gb_HostInitial=1;
  31   1      
  32   1              EA=0;
  33   1              XBYTE[0xB530]=0xFF;
  34   1              XBYTE[0xB01F]=0x01;
  35   1              Host_register_INIT();
  36   1              XBYTE[0xB01C]&=0xDF;    //Auto Ack in   
  37   1              delay(5000);
  38   1      
  39   1              // USB SUSPEND
  40   1              XBYTE[0xB610]=0x04; //force full-speed
  41   1              delay(60000);
  42   1              XBYTE[0xB610]=0x04;     
  43   1              delay(200);
  44   1              // USB RESET
  45   1              XBYTE[0xB610]=0x03; //force full-speed
  46   1              delay(20000);
  47   1              XBYTE[0xB610]=0x03;     
  48   1              delay(200);
  49   1      
  50   1              XBYTE[0xB630]=0x01;             //SOF ON
  51   1              XBYTE[0xB632]=0xB8;             //EOF point
  52   1              XBYTE[0xB633]=0x0B;
  53   1              delay(10000);
  54   1      
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 2   

  55   1              gdw_pollingtime=320000;
  56   1      
  57   1              i=0;
  58   1              tc_EP_flag=0;
  59   1              EA=1;
  60   1              while(1)
  61   1              {
  62   2                      delay(2000);
  63   2                      states = GetDescriptor(0,0x100,0,0x40);
  64   2                      if(states == 0x00)
  65   2                      {
  66   3                  gc_HostMaxTransLength = XBYTE[HOST_BUF_SA+7];
  67   3                              break;
  68   3                      }
  69   2                      else
  70   2                      {
  71   3                              i++;
  72   3                              if(i==3)
  73   3                              {
  74   4                                      gb_HostConnect=0;
  75   4                                      return HOST_GETDESCRIPTOR_FAIL;
  76   4                              }
  77   3      
  78   3                              if(gb_HostConnect == 0)
  79   3                              {
  80   4                                      return HOST_PHYCOUNECT_FAIL;
  81   4                              }
  82   3                      }
  83   2              }
  84   1              EA=0;
  85   1              gb_HostInitial=0;
  86   1              XBYTE[0xB002] |= 0x02;   //bit 2   turn on USB_host_SW_RESET
  87   1              XBYTE[0xB002] &=~0x02;   //bit 2   turn off USB_host_SW_RESET
  88   1      
  89   1              // USB RESET
  90   1              XBYTE[0xB610]=0x03; //force full-speed
  91   1              delay(1200);
  92   1              XBYTE[0xB610]=0x03;     
  93   1              delay(200);
  94   1              XBYTE[0xB630]=0x01;             //SOF ON
  95   1              XBYTE[0xB632]=0xB8;             //EOF point
  96   1              XBYTE[0xB633]=0x0B;
  97   1              delay(5000);
  98   1              XBYTE[0xB01C]|=0x10;    //clear RX error flags
  99   1              XBYTE[0xB01C]&=0xEF;
 100   1              EA=1;
 101   1              
 102   1              // Set address--00 05 01 00 00 00 00 00
 103   1              states=SetAddress();
 104   1              if(states)
 105   1              {
 106   2                      return HOST_SETADDRESS_FAIL;
 107   2              }
 108   1              delay(50000);
 109   1              gb_dtg_in=0;
 110   1              gb_dtg_out=0;
 111   1      
 112   1              //---- 80 06 00 01 00 00 12 00----
 113   1          if(gb_HostConnect == 0)
 114   1              {
 115   2                  return HOST_PHYCOUNECT_FAIL;
 116   2              }
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 3   

 117   1          states = GetDescriptor(gc_HostDeviceAddress,0x0100,0x00,0x12);
 118   1      
 119   1              if(states)
 120   1              {
 121   2                      return HOST_GETDESCRIPTOR_FAIL;
 122   2              }
 123   1      
 124   1          tc_StrProductName=XBYTE[HOST_BUF_SA+15];
 125   1          tc_StrSerialNum=XBYTE[HOST_BUF_SA+16];
 126   1      
 127   1              gw_HostVID=XBYTE[HOST_BUF_SA+8]+(XBYTE[HOST_BUF_SA+9]<<8);
 128   1      
 129   1              //---- 80 06 00 02 00 00 09 00 ----
 130   1              if(gb_HostConnect == 0)
 131   1              {
 132   2                      return HOST_PHYCOUNECT_FAIL;
 133   2              }
 134   1              delay(1000);
 135   1              states = GetDescriptor(gc_HostDeviceAddress,0x200,0,0x09);
 136   1              if(states)  
 137   1              {
 138   2                      return HOST_GETDESCRIPTOR_FAIL;
 139   2              }            
 140   1              Syn_Reset();
 141   1              gc_Host_ConfigDescLength=XBYTE[HOST_BUF_SA+2];
 142   1      
 143   1              //---- 80 06 00 03 00 00 FF 00 ----
 144   1              //---- 80 06 3r 03 09 04 FF 00 ----
 145   1              if(tc_StrSerialNum!=0)
 146   1              {
 147   2              if(gb_HostConnect == 0)
 148   2                      {
 149   3                      return HOST_PHYCOUNECT_FAIL;
 150   3                      }
 151   2                      delay(1000);
 152   2                      states = GetDescriptor(gc_HostDeviceAddress,0x300,0,0xFF);
 153   2      
 154   2                      if(states) 
 155   2                      {
 156   3                              return HOST_GETDESCRIPTOR_FAIL;
 157   3                      }                       
 158   2      
 159   2                      Stg_idx=(U16)(XBYTE[HOST_BUF_SA+3]<<8)+XBYTE[HOST_BUF_SA+2];
 160   2      
 161   2                  if(gb_HostConnect == 0)
 162   2                      {
 163   3                          return HOST_PHYCOUNECT_FAIL;
 164   3                      }
 165   2                      delay(1000);
 166   2                      states = GetDescriptor(gc_HostDeviceAddress,tc_StrSerialNum+0x0300,Stg_idx,0xFF);
 167   2      
 168   2                  if(states) 
 169   2                      {
 170   3                              return HOST_GETDESCRIPTOR_FAIL;
 171   3                      }                       
 172   2                  Syn_Reset();
 173   2              }
 174   1      
 175   1              //---- 80 06 00 02 00 00 FF 00 ----
 176   1              if(gb_HostConnect == 0)
 177   1              {
 178   2                      return HOST_PHYCOUNECT_FAIL;
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 4   

 179   2              }
 180   1              delay(1000);
 181   1              states = GetDescriptor(gc_HostDeviceAddress,0x200,0,0xFF);
 182   1      
 183   1              if(states)  
 184   1              {
 185   2                      return HOST_GETDESCRIPTOR_FAIL;
 186   2              }       
 187   1      
 188   1              //---- 80 06 00 06 00 00 0A 00 ----
 189   1              delay(1000);
 190   1              GetDescriptor(gc_HostDeviceAddress,0x0600,0,0x0A);
 191   1      
 192   1              //---- 80 06 00 03 00 00 FF 00 ----
 193   1              //---- 80 06 PP 03 09 04 FF 00 ----
 194   1              //---- 80 06 00 03 00 00 FF 00 ----
 195   1              //---- 80 06 PP 03 09 04 FF 00 ----
 196   1              if(tc_StrProductName!=0)
 197   1              {
 198   2                      data    U8      i;
 199   2                      for(i=0;i<2;i++)
 200   2                      {
 201   3                      if(gb_HostConnect == 0)
 202   3                              {
 203   4                              return HOST_PHYCOUNECT_FAIL;
 204   4                              }
 205   3                              delay(1000);
 206   3                              states=GetDescriptor(gc_HostDeviceAddress,0x300,0,0xFF);
 207   3              
 208   3                              if(states) 
 209   3                              {
 210   4                                      return HOST_GETDESCRIPTOR_FAIL;
 211   4                              }                       
 212   3              
 213   3                              Stg_idx=(U16)(XBYTE[HOST_BUF_SA+3]<<8)+XBYTE[HOST_BUF_SA+2];
 214   3              
 215   3                          if(gb_HostConnect == 0)
 216   3                              {
 217   4                                  return HOST_PHYCOUNECT_FAIL;
 218   4                              }
 219   3                              delay(1000);
 220   3                              states = GetDescriptor(gc_HostDeviceAddress,tc_StrProductName+0x0300,Stg_idx,0xFF);
 221   3              
 222   3                          if(states) 
 223   3                              {
 224   4                                      return HOST_GETDESCRIPTOR_FAIL;
 225   4                              }                       
 226   3                      }
 227   2              }
 228   1      
 229   1              //---- 80 06 00 01 00 00 12 00 ----
 230   1          if(gb_HostConnect == 0)
 231   1              {
 232   2                  return HOST_PHYCOUNECT_FAIL;
 233   2              }
 234   1              delay(1000);
 235   1          states = GetDescriptor(gc_HostDeviceAddress,0x0100,0x00,0x12);
 236   1              if(states)
 237   1              {
 238   2                      return HOST_GETDESCRIPTOR_FAIL;
 239   2              }
 240   1      
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 5   

 241   1              //---- 80 06 00 02 00 00 09 00 ----
 242   1              delay(1000);
 243   1              GetDescriptor(gc_HostDeviceAddress,0x0200,0x00,0x09);
 244   1              //---- 80 06 00 02 00 00 xx 00 ----
 245   1              delay(1000);
 246   1              GetDescriptor(gc_HostDeviceAddress,0x0200,0x00,gc_Host_ConfigDescLength);
 247   1      
 248   1              gc_Host_CFGValue=XBYTE[HOST_BUF_SA+0x05];
 249   1      
 250   1              //---- Set Endpoint Value ----
 251   1              for(i=0;i<gc_Host_ConfigDescLength;)
 252   1              {
 253   2                      if(XBYTE[HOST_BUF_SA+i]== 0x09)
 254   2                      {
 255   3                              i += 0x09;
 256   3                      }
 257   2                      else if(XBYTE[HOST_BUF_SA+i]== 0x07)
 258   2                      {
 259   3                              if((XBYTE[HOST_BUF_SA+i+1]==0x05)&&(XBYTE[HOST_BUF_SA+i+3]==0x02))
 260   3                  {                   
 261   4                                      if(XBYTE[HOST_BUF_SA+i+2]&0x80)
 262   4                      { 
 263   5                              gc_Host_EPIN=XBYTE[HOST_BUF_SA+i+2]&0x0F;
 264   5                              tc_EP_flag=tc_EP_flag+0x01;
 265   5                      }
 266   4                      else
 267   4                      {              
 268   5                                      gc_Host_EPOUT=XBYTE[HOST_BUF_SA+i+2]&0x0F;      
 269   5                              tc_EP_flag=tc_EP_flag+0x10;
 270   5                      }
 271   4                              }
 272   3                  if(tc_EP_flag == 0x11)
 273   3                              {
 274   4                                      break;
 275   4                              }
 276   3                  i += 0x07;
 277   3                      }
 278   2              else
 279   2                      {
 280   3                              i++;
 281   3                      }
 282   2              }
 283   1      
 284   1              //---- 80 06 00 03 00 00 02 00 ----
 285   1              delay(1000);
 286   1              GetDescriptor(gc_HostDeviceAddress,0x0300,0x00,0x02);
 287   1              //---- 80 06 00 03 00 00 04 00 ----
 288   1              delay(1000);
 289   1              GetDescriptor(gc_HostDeviceAddress,0x0300,0x00,0x04);
 290   1      
 291   1              //---- 80 06 SS 03 09 04 02 00 ----
 292   1              if(tc_StrSerialNum!=0)
 293   1              {
 294   2                      U8      tc_leng;
 295   2                      if(gb_HostConnect == 0)
 296   2                      {
 297   3                              return HOST_PHYCOUNECT_FAIL;
 298   3                      }
 299   2                      delay(1000);
 300   2                      states = GetDescriptor(gc_HostDeviceAddress,0x300+tc_StrSerialNum,Stg_idx,0x02);
 301   2                      if(states) 
 302   2                      {
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 6   

 303   3                              return HOST_GETDESCRIPTOR_FAIL;
 304   3                      }                       
 305   2      
 306   2                      tc_leng=XBYTE[HOST_BUF_SA];
 307   2      
 308   2                  if(gb_HostConnect == 0)
 309   2                      {
 310   3                          return HOST_PHYCOUNECT_FAIL;
 311   3                      }
 312   2                      delay(1000);
 313   2                  states = GetDescriptor(gc_HostDeviceAddress,0x0300+tc_StrSerialNum,Stg_idx,tc_leng);
 314   2      
 315   2                  if(states)  
 316   2                      {
 317   3                              return HOST_GETDESCRIPTOR_FAIL;
 318   3                      }                       
 319   2              }
 320   1      
 321   1              //---- 00 09 xx 00 00 00 00 00 ----
 322   1              if(gb_HostConnect == 0)
 323   1              {
 324   2                      return HOST_PHYCOUNECT_FAIL;
 325   2              }
 326   1              delay(1000);
 327   1              states=SetConfiguration(gc_HostDeviceAddress,gc_Host_CFGValue,0,0);
 328   1      
 329   1              //---- Get MaxLun ----
 330   1              if(gb_HostConnect == 0)
 331   1              {
 332   2              return HOST_PHYCOUNECT_FAIL;
 333   2              }
 334   1              gb_HostStallFlag=0;
 335   1              delay(1000);
 336   1              GetMAXLUN();
 337   1              if(gb_HostStallFlag==1)
 338   1              {
 339   2                      gc_HostMaxLUN=0;
 340   2              }
 341   1      
 342   1              XBYTE[0xB01C]&=0xdf;    //Auto Ack in   
 343   1              delay(30000);
 344   1      
 345   1              SCSICMD_12_INQUIRY();
 346   1              delay(1000);
 347   1              states=SCSICMD_23_READFORMATCAPACITY();
 348   1              if(states!=0) 
 349   1              {
 350   2                      return HOST_PHYCOUNECT_FAIL;            
 351   2              }
 352   1              states=SCSICMD_23_READFORMATCAPACITY();
 353   1              if(states!=0) 
 354   1              {
 355   2                      return HOST_PHYCOUNECT_FAIL;            
 356   2              }
 357   1      
 358   1              if(gb_HostConnect == 0)
 359   1              {
 360   2              return HOST_PHYCOUNECT_FAIL;
 361   2              }
 362   1      
 363   1              gc_Host_StallCmd_Timeout=0;
 364   1              while(1)
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 7   

 365   1              {
 366   2                      states = SCSICMD_25_READCAPACITY();
 367   2                      if(gb_HostConnect == 0)
 368   2                      {
 369   3                      return HOST_PHYCOUNECT_FAIL;
 370   3                      }
 371   2      
 372   2                      if(gc_Host_StallCmd_Timeout>60)
 373   2                      {
 374   3                              return 0x77;    // Initial fail 
 375   3                      }
 376   2      
 377   2                      if(states!=HOST_STALL)
 378   2                      {
 379   3                              break;
 380   3                      }
 381   2              }
 382   1      
 383   1          gc_CurrentCard=5;
 384   1              gdw_pollingtime=3000;
 385   1              gdw_HOSTStartSectorRead=0xFFFFFFF0;
 386   1              delay(30000);
 387   1              states=HOST_Read_Logicsector(0);
 388   1              if(states==3)
 389   1              {       
 390   2                      goto USB_HOST_Init;
 391   2              }
 392   1              SCSICMD_1A_MODESENCE();
 393   1              return 0;
 394   1      }
 395          
 396          
 397          U8 GetDescriptor(U8 addr,U16 wValue,U16 wIndex,U16 wLength)
 398          {
 399   1          data        bit     toggle=1;
 400   1              data    U8      tc_state;
 401   1              data    U16     offset=0;
 402   1      
 403   1              XBYTE[HOST_BUF_SA]              =0x80;
 404   1              XBYTE[HOST_BUF_SA+1]    =0x06;
 405   1              XBYTE[HOST_BUF_SA+2]    =(U8)(wValue&0xff);
 406   1              XBYTE[HOST_BUF_SA+3]    =(U8)((wValue>>8)&0xff);
 407   1              XBYTE[HOST_BUF_SA+4]    =(U8)(wIndex&0xff);
 408   1              XBYTE[HOST_BUF_SA+5]    =(U8)((wIndex>>8)&0xff);
 409   1              XBYTE[HOST_BUF_SA+6]    =(U8)(wLength&0xff);
 410   1              XBYTE[HOST_BUF_SA+7]    =(U8)((wLength>>8)&0xff);
 411   1      
 412   1          //trans Descript CMD    
 413   1              tran_setup(addr);
 414   1              tc_state=Host_phy_Command_check();
 415   1              
 416   1              if((tc_state!=0)&&(gb_HostInitial!=1))
 417   1              {
 418   2                      if(tc_state!=HOST_TEST_ERROR1)
 419   2                      {
 420   3                              return HOST_TRANSETUP_ERROR;
 421   3                      }
 422   2              }
 423   1      
 424   1              gb_HostShortPack=0;
 425   1          if(addr==0x00) 
 426   1              {               
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 8   

 427   2                      setup_in(addr, wLength, offset, toggle);
 428   2                      tc_state=Host_phy_Command_check();
 429   2      
 430   2                      if(tc_state!=0)
 431   2                      {
 432   3                              return HOST_SETUPIN_ERROR;
 433   3                      }
 434   2                      else
 435   2                      {
 436   3                              if(gb_HostConnect == 0)
 437   3                              {
 438   4                                      return HOST_PHYCOUNECT_FAIL;
 439   4                              }
 440   3                              setup_out(addr, 0, 0, offset, 1);
 441   3      
 442   3                              tc_state=Host_phy_Command_check();
 443   3                              if((tc_state==HOST_TEST_ERROR)||(tc_state==HOST_TimeOut_ERROR))            
 444   3                              {
 445   4                              }
 446   3                              else if(tc_state)
 447   3                              {
 448   4                                      return HOST_SETUPOUT_ERROR;
 449   4                              }
 450   3                  else 
 451   3                              {
 452   4                                      return 0;
 453   4                      }
 454   3              }
 455   2              }
 456   1          else
 457   1          {
 458   2                      while (wLength>0)
 459   2              {
 460   3                      if(gb_HostConnect == 0)
 461   3                              {
 462   4                                      return HOST_PHYCOUNECT_FAIL;
 463   4                              }
 464   3      
 465   3                      if(wLength <  gc_HostMaxTransLength) 
 466   3                              {
 467   4                                      setup_in(addr, wLength, offset, toggle);
 468   4                                      tc_state=Host_phy_Command_check();
 469   4                              }
 470   3                      else 
 471   3                      {
 472   4                                      setup_in(addr, gc_HostMaxTransLength, offset, toggle);
 473   4                                      tc_state=Host_phy_Command_check();
 474   4                              }
 475   3      
 476   3                              if(gb_HostShortPack==1)
 477   3                              {
 478   4                                      break;
 479   4                              }
 480   3                      if(tc_state != 0)
 481   3                      {
 482   4                      if(tc_state == 0x20)
 483   4                                      {
 484   5                              break;
 485   5                                      }
 486   4                      if((tc_state > 0x20)&&(offset>0))
 487   4                              {
 488   5                                              break;
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 9   

 489   5                                      }
 490   4      
 491   4                      return HOST_SETUPIN_ERROR;
 492   4                      }
 493   3      
 494   3                      if((wValue>0x0300)&(offset == 0))
 495   3                      {
 496   4                                      if(wLength > XBYTE[HOST_BUF_SA])
 497   4                                      {
 498   5                                              wLength = XBYTE[HOST_BUF_SA];
 499   5                                      }
 500   4                      }
 501   3                      toggle ^= 1;
 502   3                      offset  = offset+gc_HostMaxTransLength;
 503   3        
 504   3                      if(wLength>=gc_HostMaxTransLength)
 505   3                      {
 506   4                                      wLength=wLength-gc_HostMaxTransLength;
 507   4                      }
 508   3                      else
 509   3                      {
 510   4                                      wLength=0;
 511   4                              }
 512   3                      }
 513   2              }
 514   1      
 515   1          setup_out(addr, 0, 0, offset, 1);
 516   1              tc_state=Host_phy_Command_check();
 517   1      
 518   1          if(tc_state)
 519   1              {
 520   2                      return HOST_SETUPOUT_ERROR;
 521   2              }
 522   1          else 
 523   1              {
 524   2                      return 0;
 525   2              }
 526   1      }
 527          
 528          
 529          void GetMAXLUN(void)
 530          {
 531   1              data    U8 tc_state;
 532   1      
 533   1              XBYTE[HOST_BUF_SA+0]=0xA1;
 534   1              XBYTE[HOST_BUF_SA+1]=0xFE;
 535   1              XBYTE[HOST_BUF_SA+2]=0x00;
 536   1              XBYTE[HOST_BUF_SA+3]=0x00;
 537   1              XBYTE[HOST_BUF_SA+4]=0x00;
 538   1              XBYTE[HOST_BUF_SA+5]=0x00;
 539   1              XBYTE[HOST_BUF_SA+6]=0x01;
 540   1              XBYTE[HOST_BUF_SA+7]=0x00;
 541   1          
 542   1              tran_setup(1);
 543   1              tc_state=Host_phy_Command_check();
 544   1              if(tc_state)
 545   1          {
 546   2                      Syn_Reset();
 547   2              return;
 548   2          }
 549   1              setup_in(1, 1, 0, 1);
 550   1              tc_state=Host_phy_Command_check();
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 10  

 551   1              if(tc_state)
 552   1          {
 553   2                      Syn_Reset();
 554   2                      return;
 555   2          }
 556   1      
 557   1              setup_out(1,0,0,0,1);
 558   1              tc_state=Host_phy_Command_check();
 559   1              if(tc_state==0)
 560   1              {
 561   2                      gc_HostMaxLUN=XBYTE[HOST_BUF_SA];
 562   2              }
 563   1              else
 564   1              {
 565   2                      Syn_Reset();
 566   2                      return;
 567   2              }    
 568   1      }
 569          
 570          
 571          U8 SetConfiguration(U8 addr, U16 wValue, U16 wIndex, U16 wLength)
 572          {
 573   1              data    U16     offset;
 574   1              xdata   U8      tc_state;
 575   1              
 576   1              XBYTE[HOST_BUF_SA+0]=0x00;
 577   1              XBYTE[HOST_BUF_SA+1]=0x09;
 578   1              XBYTE[HOST_BUF_SA+2]=(U8)(wValue&0xff);
 579   1              XBYTE[HOST_BUF_SA+3]=(U8)((wValue>>8)&0xff);
 580   1              XBYTE[HOST_BUF_SA+4]=(U8)(wIndex&0xff);
 581   1              XBYTE[HOST_BUF_SA+5]=(U8)((wIndex>>8)&0xff);
 582   1              XBYTE[HOST_BUF_SA+6]=(U8)(wLength&0xff);
 583   1              XBYTE[HOST_BUF_SA+7]=(U8)((wLength>>8)&0xff);
 584   1      
 585   1              offset=0;
 586   1              tran_setup(addr);
 587   1              tc_state=Host_phy_Command_check();
 588   1      
 589   1          if(tc_state)
 590   1              {
 591   2                      return HOST_TRANSETUP_ERROR;
 592   2              }
 593   1      
 594   1              delay(1000);
 595   1              setup_in(addr,0,offset,1);
 596   1              tc_state=Host_phy_Command_check();
 597   1      
 598   1          if(tc_state)
 599   1              {
 600   2                      return HOST_SETUPIN_ERROR;
 601   2              }
 602   1              else
 603   1              {
 604   2                      return 0;
 605   2              }
 606   1      }
 607          
 608          
 609          U8 SetAddress(void)
 610          {
 611   1              xdata   U8 tc_state;
 612   1      
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 11  

 613   1              XBYTE[HOST_BUF_SA+0]=0x00;
 614   1              XBYTE[HOST_BUF_SA+1]=0x05;
 615   1              XBYTE[HOST_BUF_SA+2]=0x01;      // Address=1
 616   1              XBYTE[HOST_BUF_SA+3]=0x00;
 617   1              XBYTE[HOST_BUF_SA+4]=0x00;
 618   1              XBYTE[HOST_BUF_SA+5]=0x00;
 619   1              XBYTE[HOST_BUF_SA+6]=0x00;
 620   1              XBYTE[HOST_BUF_SA+7]=0x00;
 621   1      
 622   1              tran_setup(0);
 623   1              tc_state=Host_phy_Command_check();
 624   1      
 625   1              if(tc_state)
 626   1              {
 627   2                      return HOST_TRANSETUP_ERROR;
 628   2              }
 629   1      
 630   1              delay(1000);
 631   1      
 632   1              setup_in(0,0,0,1);
 633   1              tc_state=Host_phy_Command_check();
 634   1      
 635   1              if(tc_state)
 636   1              {
 637   2                      return HOST_SETUPIN_ERROR;
 638   2              }
 639   1              else
 640   1              {
 641   2                      return 0;
 642   2              }
 643   1      }
 644          
 645          
 646          U8 SCSICMD_25_READCAPACITY(void)
 647          {
 648   1              xdata   U8      i;
 649   1              data    U8      tc_state;
 650   1              code    U8      READ_CAPACITY[31]={0x55,0x53,0x42,0x43,0x55,0xAA,0xBB,0x05,0x08,0x00,0x00,0x00,0x80,0x00,0x0A,0x2
             -5,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
 651   1      
 652   1              // Prepare CBW data
 653   1              for(i=0;i<31;i++)
 654   1              {
 655   2                      XBYTE[HOST_BUF_SA+i]=READ_CAPACITY[i];
 656   2              }
 657   1      
 658   1              // OUT CBW
 659   1              tran_out(gc_HostDeviceAddress,31);
 660   1              Host_phy_Command_check();
 661   1              delay(1000);    //for action mp3 player
 662   1      
 663   1              // IN data
 664   1              tran_in(gc_HostDeviceAddress,8,0);
 665   1              tc_state=Host_phy_Command_check();
 666   1      
 667   1              gc_HostSectorUnit=XBYTE[HOST_BUF_SA+6]/2;
 668   1      
 669   1              if(!tc_state)
 670   1              {
 671   2                      ((U8 *)(&gdw_CARD_TotalSizeMB))[0]=XBYTE[HOST_BUF_SA+0];
 672   2                      ((U8 *)(&gdw_CARD_TotalSizeMB))[1]=XBYTE[HOST_BUF_SA+1];
 673   2                      ((U8 *)(&gdw_CARD_TotalSizeMB))[2]=XBYTE[HOST_BUF_SA+2];
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 12  

 674   2                      ((U8 *)(&gdw_CARD_TotalSizeMB))[3]=XBYTE[HOST_BUF_SA+3];
 675   2              }
 676   1      
 677   1              if(tc_state==HOST_STALL)
 678   1              {
 679   2                      gc_Host_StallCmd_Timeout++;
 680   2                      gb_dtg_in=0;
 681   2                      ClearFeature(gc_HostDeviceAddress,0,gc_Host_EPIN,0);
 682   2                      tran_in(gc_HostDeviceAddress, 13, 0);
 683   2                      tc_state=Host_phy_Command_check();
 684   2                      if(tc_state!=0)
 685   2                      {
 686   3                              return tc_state;
 687   3                      }                           
 688   2                      SCSICMD_03_REQUESTSENSE();
 689   2                      delay(10000);
 690   2                      return HOST_STALL;
 691   2              }
 692   1      
 693   1              if(tc_state!=0)
 694   1              {
 695   2                      gb_dtg_in=0;
 696   2                      Syn_Reset();
 697   2                      ClearFeature(gc_HostDeviceAddress,0,gc_Host_EPIN,0);
 698   2              }
 699   1              // IN CSW
 700   1              delay(1000);
 701   1              tran_in(gc_HostDeviceAddress, 13, 0);
 702   1              Host_phy_Command_check();
 703   1                      
 704   1              if(XBYTE[HOST_BUF_SA+12]!=0)
 705   1              {
 706   2                      SCSICMD_03_REQUESTSENSE();
 707   2                      return 1;
 708   2              }
 709   1              else
 710   1              {
 711   2                      return 0;
 712   2              }
 713   1      }
 714          
 715          
 716          U8 SCSICMD_23_READFORMATCAPACITY(void)
 717          {
 718   1              data    U8      i;
 719   1              data    U8      tc_state;
 720   1              code    U8      READ_FORMAT_CAPACITY[31]={0x55,0x53,0x42,0x43,0xf8,0x98,0x56,0x85,0xFC,0x00,0x00,0x00,0x80,0x00,0
             -x0A,0x23,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
 721   1      
 722   1              while(1)
 723   1              {
 724   2                      // Prepare CBW data
 725   2                  for(i=0;i<31;i++)           
 726   2                      {
 727   3                      XBYTE[HOST_BUF_SA+i]=READ_FORMAT_CAPACITY[i];
 728   3                      }               
 729   2              
 730   2                      // OUT CBW
 731   2                      tran_out(gc_HostDeviceAddress, 31); 
 732   2                      Host_phy_Command_check();
 733   2                      delay(1000);
 734   2      
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 13  

 735   2                      // IN data(The data is useless)
 736   2                      if(gb_HostConnect == 0)
 737   2                      { 
 738   3                              return HOST_PHYCOUNECT_FAIL;
 739   3                      }       
 740   2                      for(i=0;i<4;i++)
 741   2                      {
 742   3                              gb_HostShortPack=0;
 743   3                              tran_in(gc_HostDeviceAddress, 64, 0);
 744   3                              tc_state=Host_phy_Command_check();                 
 745   3                              if((gb_HostShortPack==1)||(tc_state==HOST_STALL)) // 20080620
 746   3                              {
 747   4                                      break;
 748   4                              }
 749   3                      }
 750   2      
 751   2                      if(tc_state==HOST_STALL)
 752   2                      {                       
 753   3                              gb_dtg_in=0;
 754   3                              ClearFeature(gc_HostDeviceAddress,0,gc_Host_EPIN,0);
 755   3                              tran_in(gc_HostDeviceAddress,13,0);
 756   3                              tc_state=Host_phy_Command_check();
 757   3                              if(tc_state!=0) // 20080620
 758   3                              {
 759   4                                      return tc_state;
 760   4                              }                           
 761   3                              SCSICMD_03_REQUESTSENSE();
 762   3                              delay(10000);
 763   3                      }
 764   2                      else
 765   2                      {
 766   3                              // 20080623
 767   3                              tran_in_(gc_HostDeviceAddress, 13, 0);
 768   3                              tc_state=Host_phy_Command_check();
 769   3                              if(tc_state==HOST_STALL)
 770   3                              {
 771   4                                      gb_dtg_in=0;
 772   4                                      ClearFeature(gc_HostDeviceAddress,0,gc_Host_EPIN,0);
 773   4                                      tran_in(gc_HostDeviceAddress,13,0);
 774   4                                      Host_phy_Command_check();
 775   4                              }
 776   3                              return 0;
 777   3                      }
 778   2      
 779   2                      if(gb_HostRetry==0)
 780   2                      {
 781   3                              return 0;
 782   3                      }
 783   2              }
 784   1      }
 785          
 786          
 787          U8 SCSICMD_12_INQUIRY(void)
 788          {
 789   1              xdata   U8      i;
 790   1              xdata   U8      tc_state;
 791   1              code U8 INQUIRY[31]={0x55,0x53,0x42,0x43,0xf8,0x98,0x56,0x85,0x24,0x00,0x00,0x00,0x80,0x00,0x06,0x12,0x00
             -,0x00,0x00,0x24,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
 792   1      
 793   1              // Prepare CBW data
 794   1          for(i=0;i<31;i++)
 795   1              {
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 14  

 796   2                      XBYTE[HOST_BUF_SA+i]=INQUIRY[i];
 797   2              }
 798   1      
 799   1              // OUT CBW
 800   1              if(gb_HostConnect==0)
 801   1              {
 802   2                      return HOST_PHYCOUNECT_FAIL;
 803   2              }
 804   1      
 805   1              tran_out(gc_HostDeviceAddress,31);
 806   1          Host_phy_Command_check();
 807   1      
 808   1              delay(1000);    //for action mp3 player
 809   1              
 810   1              // IN data      
 811   1              if(gb_HostConnect == 0) 
 812   1              {
 813   2                      return HOST_PHYCOUNECT_FAIL;
 814   2              }
 815   1      
 816   1              for(i=0;i<20;i++)
 817   1              {
 818   2                      tran_in(gc_HostDeviceAddress, 36, 0);
 819   2                      tc_state=Host_phy_Command_check();              
 820   2                      if((tc_state==0)&&(gb_HostShortPack==0))
 821   2                      {
 822   3                              break;
 823   3                      }
 824   2                      gb_dtg_in=(!gb_dtg_in);
 825   2              }
 826   1      
 827   1              // IN CSW
 828   1              if(gb_HostConnect == 0)
 829   1              { 
 830   2                      return HOST_PHYCOUNECT_FAIL;
 831   2              }
 832   1      
 833   1              for(i=0;i<20;i++)
 834   1              {
 835   2                      tran_in(gc_HostDeviceAddress,13,0);
 836   2                      tc_state=Host_phy_Command_check();              
 837   2                      if((tc_state==0)&&(gb_HostShortPack==0))
 838   2                      {
 839   3                              break;
 840   3                      }
 841   2                      gb_dtg_in=(!gb_dtg_in);
 842   2              }
 843   1              return 0;
 844   1      }
 845          
 846          U8 SCSICMD_1A_MODESENCE(void)
 847          {
 848   1              xdata   U8      i;
 849   1              xdata   U8      tc_state;
 850   1              code U8 INQUIRY[31]={0x55,0x53,0x42,0x43,0xA0,0x69,0xC5,0x88,0xC0,0x00,0x00,0x00,0x80,0x00,0x06,0x1A,0x00
             -,0x1C,0x00,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
 851   1      
 852   1              // Prepare CBW data
 853   1          for(i=0;i<31;i++)
 854   1              {
 855   2                      XBYTE[HOST_BUF_SA+i]=INQUIRY[i];
 856   2              }
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 15  

 857   1      
 858   1              // OUT CBW
 859   1              tran_out(gc_HostDeviceAddress,31);
 860   1          Host_phy_Command_check();
 861   1      
 862   1              delay(1000);    //for action mp3 player
 863   1              
 864   1              // IN data & CSW
 865   1              for(i=0;i<5;i++)
 866   1              {
 867   2                      tran_in(gc_HostDeviceAddress,64,0);
 868   2                      Host_phy_Command_check();
 869   2                      gb_dtg_in=(!gb_dtg_in);
 870   2                      if(XBYTE[HOST_BUF_SA]==0x55&&XBYTE[HOST_BUF_SA+1]==0x53&&XBYTE[HOST_BUF_SA+2]==0x42&&XBYTE[HOST_BUF_SA+3
             -]==0x53)
 871   2                      {
 872   3                              break;
 873   3                      }
 874   2                      else if(gb_HostStallFlag==1)
 875   2                      {
 876   3                              ClearFeature(gc_HostDeviceAddress,0,gc_Host_EPIN,0);
 877   3                              tran_in(gc_HostDeviceAddress,13,0);
 878   3                              tc_state=Host_phy_Command_check();              
 879   3                              gb_dtg_in=(!gb_dtg_in);
 880   3                              return 0;
 881   3                      } 
 882   2              }
 883   1      
 884   1              // OUT CBW
 885   1          for(i=0;i<31;i++)
 886   1              {
 887   2                      XBYTE[HOST_BUF_SA+i]=INQUIRY[i];
 888   2              }
 889   1              XBYTE[HOST_BUF_SA+5]=0x3F;
 890   1              XBYTE[HOST_BUF_SA+17]=0x3F;
 891   1              tran_out(gc_HostDeviceAddress,31);
 892   1          Host_phy_Command_check();
 893   1      
 894   1              delay(1000);    //for action mp3 player
 895   1              
 896   1              // IN data & CSW
 897   1              for(i=0;i<5;i++)
 898   1              {
 899   2                      tran_in(gc_HostDeviceAddress,64,0);
 900   2                      Host_phy_Command_check();
 901   2                      gb_dtg_in=(!gb_dtg_in);
 902   2                      if(XBYTE[HOST_BUF_SA]==0x55&&XBYTE[HOST_BUF_SA+1]==0x53&&XBYTE[HOST_BUF_SA+2]==0x42&&XBYTE[HOST_BUF_SA+3
             -]==0x53)
 903   2                      {
 904   3                              break;
 905   3                      }
 906   2                      else if(gb_HostStallFlag==1)
 907   2                      {
 908   3                              ClearFeature(gc_HostDeviceAddress,0,gc_Host_EPIN,0);
 909   3                              tran_in(gc_HostDeviceAddress,13,0);
 910   3                              tc_state=Host_phy_Command_check();              
 911   3                              gb_dtg_in=(!gb_dtg_in);
 912   3                              return 0;
 913   3                      } 
 914   2              }
 915   1              return 0;
 916   1      }
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 16  

 917          
 918          
 919          U8 SCSICMD_03_REQUESTSENSE(void)
 920          {
 921   1              xdata   U8      i;
 922   1              data    U8      tc_state;
 923   1              code    U8      CBW_REQUEST_SENSE[31]={0x55,0x53,0x42,0x43,0xf8,0x98,0x56,0x85,0x12,0x00,0x00,0x00,0x80,0x00,0x0C
             -,0x03,0x00,0x00,0x00,0x12,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
 924   1      
 925   1              gb_HostRetry=0;
 926   1      
 927   1              // Prepare CBW data
 928   1              for(i=0;i<31;i++)               
 929   1              {
 930   2                      XBYTE[HOST_BUF_SA+i]=CBW_REQUEST_SENSE[i];
 931   2              }       
 932   1              
 933   1              // OUT CBW
 934   1              tran_out(gc_HostDeviceAddress, 31);//send command 03
 935   1              Host_phy_Command_check();
 936   1      
 937   1              // IN data
 938   1          if(gb_HostConnect == 0)
 939   1          {
 940   2                      return HOST_PHYCOUNECT_FAIL;
 941   2              }
 942   1      
 943   1              for(i=0;i<20;i++)
 944   1              {
 945   2                      tran_in(gc_HostDeviceAddress, 18, 0);
 946   2                      tc_state=Host_phy_Command_check();              
 947   2                      if((tc_state==0)&&(gb_HostShortPack==0))
 948   2                      {
 949   3                              break;
 950   3                      }
 951   2                      gb_dtg_in=(!gb_dtg_in);
 952   2              }
 953   1      
 954   1              if(XBYTE[HOST_BUF_SA+0x02]==0x06)
 955   1              {
 956   2                      if(XBYTE[HOST_BUF_SA+0x0C]==0x3A)
 957   2                      {
 958   3                              gb_HostRetry=1;
 959   3                      }
 960   2                      else if(XBYTE[HOST_BUF_SA+0x0C]==0x28)  // Media change
 961   2                      {
 962   3                              gb_HostInitAgain=1;
 963   3                      }
 964   2              }
 965   1              // IN CSW
 966   1              if(gb_HostConnect == 0)
 967   1          {
 968   2                      return HOST_PHYCOUNECT_FAIL;
 969   2              }
 970   1              for(i=0;i<20;i++)
 971   1              {
 972   2                      tran_in(gc_HostDeviceAddress, 13, 0);
 973   2                      tc_state=Host_phy_Command_check();
 974   2                      if((tc_state==0)&&(gb_HostShortPack==0))
 975   2                      {
 976   3                              break;
 977   3                      }
C51 COMPILER V9.00   HOST_INIT                                                             07/09/2012 21:16:48 PAGE 17  

 978   2                      gb_dtg_in=(!gb_dtg_in);
 979   2              }
 980   1              return 0;
 981   1      }
 982          
 983          
 984          void Syn_Reset(void)
 985          {
 986   1              XBYTE[0xB601]=0x04;     //syn reset
 987   1              delay(1000);
 988   1              XBYTE[0xB601]=0x04;
 989   1              delay(8000);
 990   1      }
 991          
 992          
 993          U8 ClearFeature(U8 addr, U16 wValue, U16 wIndex, U16 wLength)
 994          {
 995   1              xdata   U8 tc_state;
 996   1      
 997   1              XBYTE[HOST_BUF_SA+0]=0x02;
 998   1              XBYTE[HOST_BUF_SA+1]=0x01;
 999   1              XBYTE[HOST_BUF_SA+2]=(U8)(wValue&0xff);
1000   1              XBYTE[HOST_BUF_SA+3]=(U8)((wValue>>8)&0xff);
1001   1              XBYTE[HOST_BUF_SA+4]=(U8)(wIndex&0xff)|0x80;
1002   1              XBYTE[HOST_BUF_SA+5]=(U8)((wIndex>>8)&0xff);
1003   1              XBYTE[HOST_BUF_SA+6]=(U8)(wLength&0xff);
1004   1              XBYTE[HOST_BUF_SA+7]=(U8)((wLength>>8)&0xff);
1005   1      
1006   1              tran_setup(addr);
1007   1              tc_state=Host_phy_Command_check();
1008   1      
1009   1              if(tc_state)
1010   1              {
1011   2                      return HOST_TRANSETUP_ERROR;
1012   2              }
1013   1              delay(1000);
1014   1              setup_in(addr,0,0,1);
1015   1              tc_state=Host_phy_Command_check();
1016   1      
1017   1              if(tc_state)
1018   1              {
1019   2                      return HOST_SETUPIN_ERROR;
1020   2              }
1021   1              else
1022   1              {
1023   2                      return 0;
1024   2              }
1025   1      }
1026          
1027          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2977    ----
   CONSTANT SIZE    =    155    ----
   XDATA SIZE       =   ----      27
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
