C51 COMPILER V9.00   CALENDAR                                                              07/09/2012 21:16:44 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE CALENDAR
OBJECT MODULE PLACED IN .\obj\Calendar.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Calendar\Calendar.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsour
                    -ce\header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\Calendar.lst) OBJECT(.\obj\Calendar.obj)

line level    source

   1          #include "..\Header\SPDA2K.h"
   2          #include "..\header\variables.h"
   3          #ifdef SPI_1M
   4          void DisplayCalendar(void)
   5          {
   6   1              data    U8      tc_temp;
   7   1      
   8   1              RTC_Calendar(); // RTC seconds to Calendar(YY-MM-DD HH:MM:SS)
   9   1              gc_Year+=100;   // RTC year=2010~2039, Calendar year=1910~2099(Base offset 100)
  10   1              LCM_ShowCalendarFrame();
  11   1              gc_MenuTimer=10;
  12   1              while(1)
  13   1              {
  14   2                      Key_Detect();
  15   2                      if(gc_KeyEvent!=0)
  16   2                      {
  17   3                              gc_MenuTimer=10;
  18   3                              switch(gc_KeyEvent)
  19   3                              {
  20   4                                      case 0x03:      // Next
  21   4                                              gb_ADJ=0;
  22   4                                              Day_Adj();
  23   4                                              LCM_ShowCalendarDay();
  24   4                                              tc_temp=gc_Week;
  25   4                                              if(gb_AdjOver)
  26   4                                              {
  27   5                                                      Month_Adj();
  28   5                                                      LCM_ShowCalendarMonth();
  29   5                                                      if(gb_AdjOver)
  30   5                                                      {
  31   6                                                              Year_Adj();
  32   6                                                              LCM_ShowCalendarYear();
  33   6                                                      }
  34   5                                              }
  35   4                                              gc_Week=tc_temp;
  36   4                                              LCM_ShowCalendarWeek();
  37   4                                              if(gc_CurrentHZK==LANG_CHS)
  38   4                                              {
  39   5                                                      Get_Lunar(gc_Year+1910,gc_Month,gc_Day);
  40   5                                                      LCM_ShowLunar();
  41   5                                              }
  42   4                                      break;
  43   4      
  44   4                                      case 0x04:      // Prev
  45   4                                              gb_ADJ=1;
  46   4                                              Day_Adj();
  47   4                                              LCM_ShowCalendarDay();
  48   4                                              tc_temp=gc_Week;
  49   4                                              if(gb_AdjOver)
  50   4                                              {
  51   5                                                      Month_Adj();
  52   5                                                      LCM_ShowCalendarMonth();
  53   5                                                      if(gb_AdjOver)
  54   5                                                      {
C51 COMPILER V9.00   CALENDAR                                                              07/09/2012 21:16:44 PAGE 2   

  55   6                                                              Year_Adj();
  56   6                                                              LCM_ShowCalendarYear();
  57   6                                                      }
  58   5                                              }
  59   4                                              gc_Week=tc_temp;
  60   4                                              LCM_ShowCalendarWeek();
  61   4                                              if(gc_CurrentHZK==LANG_CHS)
  62   4                                              {
  63   5                                                      Get_Lunar(gc_Year+1910,gc_Month,gc_Day);
  64   5                                                      LCM_ShowLunar();
  65   5                                              }
  66   4                                      break;
  67   4      
  68   4                                      case 0x13:      // L-Next
  69   4                                              gc_LongKeyCount=20;
  70   4                                              gb_ADJ=0;
  71   4                                              Month_Adj();
  72   4                                              LCM_ShowCalendarDay();
  73   4                                              LCM_ShowCalendarMonth();
  74   4                                              if(gb_AdjOver)
  75   4                                              {
  76   5                                                      Year_Adj();
  77   5                                                      LCM_ShowCalendarYear();
  78   5                                              }
  79   4                                              LCM_ShowCalendarWeek();
  80   4                                              if(gc_CurrentHZK==LANG_CHS)
  81   4                                              {
  82   5                                                      Get_Lunar(gc_Year+1910,gc_Month,gc_Day);
  83   5                                                      LCM_ShowLunar();
  84   5                                              }
  85   4                                      break;
  86   4      
  87   4                                      case 0x14:      // L-Prev
  88   4                                              gc_LongKeyCount=20;
  89   4                                              gb_ADJ=1;
  90   4                                              Month_Adj();
  91   4                                              LCM_ShowCalendarDay();
  92   4                                              LCM_ShowCalendarMonth();
  93   4                                              if(gb_AdjOver)
  94   4                                              {
  95   5                                                      Year_Adj();
  96   5                                                      LCM_ShowCalendarYear();
  97   5                                              }
  98   4                                              LCM_ShowCalendarWeek();
  99   4                                              if(gc_CurrentHZK==LANG_CHS)
 100   4                                              {
 101   5                                                      Get_Lunar(gc_Year+1910,gc_Month,gc_Day);
 102   5                                                      LCM_ShowLunar();
 103   5                                              }
 104   4                                      break;
 105   4      
 106   4                                      case 0x06:      // M
 107   4                                              gc_MenuTimer=0; // Exit
 108   4                                      break;
 109   4                              }
 110   3                      }
 111   2      
 112   2                      if(gb_RTC_wakeup)
 113   2                      {
 114   3                              gb_RTC_wakeup=0;
 115   3                              gc_Sec++;
 116   3                              if(gc_Sec==60)
C51 COMPILER V9.00   CALENDAR                                                              07/09/2012 21:16:44 PAGE 3   

 117   3                              {
 118   4                                      gc_Sec=0;
 119   4                              }
 120   3                              LCM_ShowCalendarSecond();
 121   3                              if(gc_Sec==0)
 122   3                              {
 123   4                                      gc_Min++;
 124   4                                      LCM_ShowCalendarMinute();
 125   4                                      if(gc_Min>59)
 126   4                                      {
 127   5                                              gc_Hour++;
 128   5                                              if(gc_Hour>23)
 129   5                                              {
 130   6                                                      gc_Hour=0;
 131   6                                              }
 132   5                                              LCM_ShowCalendarHour();
 133   5                                      }
 134   4                              }
 135   3                      }
 136   2      
 137   2                      if(gc_MenuTimer==0)
 138   2                      {
 139   3                              gc_Task_Current=C_Task_Idle;
 140   3                              return;
 141   3                      }
 142   2      
 143   2                      if(gb_OrderRecordTrigger==1)
 144   2                      {
 145   3                              gc_Task_Current=C_Task_FM;
 146   3                              return;
 147   3                      }
 148   2              }
 149   1      }
 150          
 151          #else
              void DisplayCalendar(void)
              {
                      data    U8      tc_temp;
              
                      RTC_Calendar(); // RTC seconds to Calendar(YY-MM-DD HH:MM:SS)
                      gc_Year+=100;   // RTC year=2010~2039, Calendar year=1910~2099(Base offset 100)
                      LCM_ShowCalendarFrame();
                      gc_MenuTimer=10;
                      while(1)
                      {
                              Key_Detect();
                              if(gc_KeyEvent!=0)
                              {
                                      gc_MenuTimer=10;
                                      switch(gc_KeyEvent)
                                      {
                                              case 0x03:      // Next
                                                      gb_ADJ=0;
                                                      Day_Adj();
                                                      LCM_ShowCalendarDay();
                                                      tc_temp=gc_Week;
                                                      if(gb_AdjOver)
                                                      {
                                                              Month_Adj();
                                                              LCM_ShowCalendarMonth();
                                                              if(gb_AdjOver)
                                                              {
C51 COMPILER V9.00   CALENDAR                                                              07/09/2012 21:16:44 PAGE 4   

                                                                      Year_Adj();
                                                                      LCM_ShowCalendarYear();
                                                              }
                                                      }
                                                      gc_Week=tc_temp;
                                                      LCM_ShowCalendarWeek();
                                                      if(gc_CurrentHZK==LANG_CHS||gc_CurrentHZK==LANG_CHT)
                                                      {
                                                              Get_Lunar(gc_Year+1910,gc_Month,gc_Day);
                                                              LCM_ShowLunar();
                                                      }
                                              break;
              
                                              case 0x04:      // Prev
                                                      gb_ADJ=1;
                                                      Day_Adj();
                                                      LCM_ShowCalendarDay();
                                                      tc_temp=gc_Week;
                                                      if(gb_AdjOver)
                                                      {
                                                              Month_Adj();
                                                              LCM_ShowCalendarMonth();
                                                              if(gb_AdjOver)
                                                              {
                                                                      Year_Adj();
                                                                      LCM_ShowCalendarYear();
                                                              }
                                                      }
                                                      gc_Week=tc_temp;
                                                      LCM_ShowCalendarWeek();
                                                      if(gc_CurrentHZK==LANG_CHS||gc_CurrentHZK==LANG_CHT)
                                                      {
                                                              Get_Lunar(gc_Year+1910,gc_Month,gc_Day);
                                                              LCM_ShowLunar();
                                                      }
                                              break;
              
                                              case 0x13:      // L-Next
                                                      gc_LongKeyCount=20;
                                                      gb_ADJ=0;
                                                      Month_Adj();
                                                      LCM_ShowCalendarDay();
                                                      LCM_ShowCalendarMonth();
                                                      if(gb_AdjOver)
                                                      {
                                                              Year_Adj();
                                                              LCM_ShowCalendarYear();
                                                      }
                                                      LCM_ShowCalendarWeek();
                                                      if(gc_CurrentHZK==LANG_CHS||gc_CurrentHZK==LANG_CHT)
                                                      {
                                                              Get_Lunar(gc_Year+1910,gc_Month,gc_Day);
                                                              LCM_ShowLunar();
                                                      }
                                              break;
              
                                              case 0x14:      // L-Prev
                                                      gc_LongKeyCount=20;
                                                      gb_ADJ=1;
                                                      Month_Adj();
                                                      LCM_ShowCalendarDay();
                                                      LCM_ShowCalendarMonth();
C51 COMPILER V9.00   CALENDAR                                                              07/09/2012 21:16:44 PAGE 5   

                                                      if(gb_AdjOver)
                                                      {
                                                              Year_Adj();
                                                              LCM_ShowCalendarYear();
                                                      }
                                                      LCM_ShowCalendarWeek();
                                                      if(gc_CurrentHZK==LANG_CHS||gc_CurrentHZK==LANG_CHT)
                                                      {
                                                              Get_Lunar(gc_Year+1910,gc_Month,gc_Day);
                                                              LCM_ShowLunar();
                                                      }
                                              break;
              
                                              case 0x06:      // M
                                                      gc_MenuTimer=0; // Exit
                                              break;
                                      }
                              }
              
                              if(gb_RTC_wakeup)
                              {
                                      gb_RTC_wakeup=0;
                                      gc_Sec++;
                                      if(gc_Sec==60)
                                      {
                                              gc_Sec=0;
                                      }
                                      LCM_ShowCalendarSecond();
                                      if(gc_Sec==0)
                                      {
                                              gc_Min++;
                                              LCM_ShowCalendarMinute();
                                              if(gc_Min>59)
                                              {
                                                      gc_Hour++;
                                                      if(gc_Hour>23)
                                                      {
                                                              gc_Hour=0;
                                                      }
                                                      LCM_ShowCalendarHour();
                                              }
                                      }
                              }
              
                              if(gc_MenuTimer==0)
                              {
                                      gc_Task_Current=C_Task_Idle;
                                      return;
                              }
              
                              if(gb_OrderRecordTrigger==1)
                              {
                                      gc_Task_Current=C_Task_FM;
                                      return;
                              }
                      }
              }
              
              #endif
 300          void Year_Adj(void)
 301          {
 302   1              if(gb_ADJ==0)
C51 COMPILER V9.00   CALENDAR                                                              07/09/2012 21:16:44 PAGE 6   

 303   1              {
 304   2                      gc_Year++;
 305   2                      if(gc_Year>179)
 306   2                      {
 307   3                              gc_Year=0;
 308   3                      }
 309   2              }
 310   1              else
 311   1              {
 312   2                      if(gc_Year==0)
 313   2                      {
 314   3                              gc_Year=179;
 315   3                      }
 316   2                      else
 317   2                      {
 318   3                              gc_Year--;
 319   3                      }
 320   2              }
 321   1      }
 322          
 323          void Month_Adj(void)
 324          {
 325   1              xdata   U8      tc_x;
 326   1      
 327   1              tc_x=0;
 328   1              gb_AdjOver=0;
 329   1              if(((gc_Year+2)&0x03)==0)
 330   1              {
 331   2                      tc_x=1;
 332   2              }
 333   1      
 334   1              if(gb_ADJ==0)
 335   1              {
 336   2                      gc_Month++;
 337   2                      if(gc_Month>12)
 338   2                      {
 339   3                              gc_Month=1;
 340   3                              gb_AdjOver=1;
 341   3                      }
 342   2                      if(gc_Month==3)
 343   2                      {
 344   3                              gc_Week+=tc_x;
 345   3                      }
 346   2                      else if(gc_Month==5||gc_Month==7||gc_Month==10||gc_Month==12)
 347   2                      {
 348   3                              gc_Week+=2;
 349   3                      }
 350   2                      else
 351   2                      {
 352   3                              gc_Week+=3;
 353   3                      }
 354   2              }
 355   1              else
 356   1              {
 357   2                      gc_Month--;
 358   2                      if(gc_Month==0)
 359   2                      {
 360   3                              gc_Month=12;
 361   3                              gb_AdjOver=1;
 362   3                      }
 363   2      
 364   2                      if(gc_Month==2)
C51 COMPILER V9.00   CALENDAR                                                              07/09/2012 21:16:44 PAGE 7   

 365   2                      {
 366   3                              gc_Week+=tc_x;
 367   3                      }
 368   2                      else if(gc_Month==4||gc_Month==6||gc_Month==9||gc_Month==11)
 369   2                      {
 370   3                              gc_Week+=5;
 371   3                      }
 372   2                      else
 373   2                      {
 374   3                              gc_Week+=4;
 375   3                      }
 376   2              }
 377   1      
 378   1              if(gc_Month==2)
 379   1              {
 380   2                      if(gc_Day>(28+tc_x))
 381   2                      {
 382   3                              gc_Week=gc_Week+7-(gc_Day-28-tc_x);
 383   3                              gc_Day=28+tc_x;
 384   3                      }
 385   2              }
 386   1              else if(gc_Month==4||gc_Month==6||gc_Month==9||gc_Month==11)
 387   1              {
 388   2                      if(gc_Day>30)
 389   2                      {
 390   3                              gc_Week=gc_Week+6;
 391   3                              gc_Day=30;
 392   3                      }
 393   2              }
 394   1              gc_Week%=7;
 395   1      }
 396          
 397          
 398          void Day_Adj(void)
 399          {
 400   1              xdata   U8 tc_x;
 401   1      
 402   1              tc_x=0;
 403   1              gb_AdjOver=0;
 404   1      
 405   1              if(((gc_Year+2)%4)==0)
 406   1              {
 407   2                      tc_x=1;
 408   2              }
 409   1      
 410   1              if(gb_ADJ==0)   // INC
 411   1              {
 412   2                      gc_Day++;
 413   2                      if(gc_Month==2)
 414   2                      {
 415   3                              if(gc_Day>28+tc_x)
 416   3                              {
 417   4                                      gc_Day=1;
 418   4                                      gb_AdjOver=1;
 419   4                              }
 420   3                      }
 421   2                      else if(gc_Month==4||gc_Month==6||gc_Month==9||gc_Month==11)
 422   2                      {
 423   3                              if(gc_Day>30)
 424   3                              {
 425   4                                      gc_Day=1;
 426   4                                      gb_AdjOver=1;
C51 COMPILER V9.00   CALENDAR                                                              07/09/2012 21:16:44 PAGE 8   

 427   4                              }
 428   3                      }
 429   2                      else
 430   2                      {
 431   3                              if(gc_Day>31)
 432   3                              {
 433   4                                      gc_Day=1;
 434   4                                      gb_AdjOver=1;
 435   4                              }
 436   3                      }
 437   2      
 438   2                      if(gc_Week==6)
 439   2                      {
 440   3                              gc_Week=0;
 441   3                      }
 442   2                      else
 443   2                      {
 444   3                              gc_Week++;
 445   3                      }
 446   2              }
 447   1              else
 448   1              {
 449   2                      gc_Day--;
 450   2                      if(gc_Day==0)
 451   2                      {
 452   3                              gb_AdjOver=1;
 453   3                              if(gc_Month==3)
 454   3                              {
 455   4                                      gc_Day=28+tc_x;
 456   4                              }
 457   3                              else if(gc_Month==5||gc_Month==7||gc_Month==10||gc_Month==12)
 458   3                              {
 459   4                                      gc_Day=30;
 460   4                              }
 461   3                              else
 462   3                              {
 463   4                                      gc_Day=31;
 464   4                              }
 465   3                      }
 466   2      
 467   2                      if(gc_Week==0)
 468   2                      {
 469   3                              gc_Week=6;
 470   3                      }
 471   2                      else
 472   2                      {
 473   3                              gc_Week--;
 474   3                      }
 475   2              }
 476   1      }
 477          
 478          void Day_Adj1(void)
 479          {
 480   1              xdata   U8 tc_x;
 481   1      
 482   1              tc_x=0;
 483   1      
 484   1              if(((gc_Year+2)%4)==0)
 485   1              {
 486   2                      tc_x=1;
 487   2              }
 488   1      
C51 COMPILER V9.00   CALENDAR                                                              07/09/2012 21:16:44 PAGE 9   

 489   1              gc_Day--;
 490   1              if(gc_Day==0)
 491   1              {
 492   2                      if(gc_Month==2)
 493   2                      {
 494   3                              gc_Day=28+tc_x;
 495   3                      }
 496   2                      else if(gc_Month==4||gc_Month==6||gc_Month==9||gc_Month==11)
 497   2                      {
 498   3                              gc_Day=30;
 499   3                      }
 500   2                      else
 501   2                      {
 502   3                              gc_Day=31;
 503   3                      }
 504   2              }
 505   1      }
 506          
 507          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    908    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
