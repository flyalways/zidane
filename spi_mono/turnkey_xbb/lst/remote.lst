C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE REMOTE
OBJECT MODULE PLACED IN .\obj\remote.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE IR\remote.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource\heade
                    -r) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\remote.lst) OBJECT(.\obj\remote.obj)

line level    source

   1          #include "..\Header\SPDA2K.h"
   2          #include "..\IR\remote.h"
   3          #include "..\LCM\LCM_BMP.h"
   4          #include "..\DSP\DSPPHYSIC.H"
   5          #include "..\DSP\dspuser.h"
   6          #include "..\header\variables.h"
   7          
   8          void ShowSongFreq(U8 x_Column,U8 x_SongMhz);
   9          void NumberIRKeySuccess(U8 x_MHz_SONG);
  10          void ShowIrNumber(U8 x_Num,U8 x_Song_Freq);
  11          
  12          
  13          void IR_Init(void)
  14          {
  15   1          // set time out
  16   1          XBYTE[0xBA00] = LO_BYTE(TIME_OUT_MIN);
  17   1          XBYTE[0xBA01] = HI_BYTE(TIME_OUT_MIN);
  18   1          // start 1 max
  19   1          XBYTE[0xBA02] = LO_BYTE(START1_MAX);
  20   1          XBYTE[0xBA03] = HI_BYTE(START1_MAX);
  21   1          // start 1 min
  22   1          XBYTE[0xBA04] = LO_BYTE(START1_MIN);
  23   1          XBYTE[0xBA05] = HI_BYTE(START1_MIN);
  24   1          // start 0 max
  25   1          XBYTE[0xBA06] = LO_BYTE(START0_MAX);
  26   1          XBYTE[0xBA07] = HI_BYTE(START0_MAX);
  27   1          // start 0 min
  28   1          XBYTE[0xBA08] = LO_BYTE(START0_MIN);
  29   1          XBYTE[0xBA09] = HI_BYTE(START0_MIN);
  30   1      #if (IR_MODULATION==IR_MOD_PPM) || (IR_MODULATION==IR_MOD_PWM)
  31   1          // logic 1 max
  32   1          XBYTE[0xBA0A] = LO_BYTE(LOGIC1_MAX);
  33   1          XBYTE[0xBA0B] = HI_BYTE(LOGIC1_MAX);
  34   1          // logic 1 min
  35   1          XBYTE[0xBA0C] = LO_BYTE(LOGIC1_MIN);
  36   1          XBYTE[0xBA0D] = HI_BYTE(LOGIC1_MIN);
  37   1      #else
                  // bit time
                  XBYTE[0xBA0A] = LO_BYTE(BIT_TIME);
                  XBYTE[0xBA0B] = HI_BYTE(BIT_TIME);
                  // sample point
                  XBYTE[0xBA0C] = LO_BYTE(SAMPLE_POINT);
                  XBYTE[0xBA0D] = HI_BYTE(SAMPLE_POINT);
              #endif
  45   1          // logic 0 max
  46   1          XBYTE[0xBA0E] = LO_BYTE(LOGIC0_MAX);
  47   1          XBYTE[0xBA0F] = HI_BYTE(LOGIC0_MAX);
  48   1          // logic 0 min
  49   1          XBYTE[0xBA10] = LO_BYTE(LOGIC0_MIN);
  50   1          XBYTE[0xBA11] = HI_BYTE(LOGIC0_MIN);
  51   1          // set sampling period = 1 usec
  52   1          XBYTE[0xBA12] = LO_BYTE(T_SAMPLE);
  53   1          XBYTE[0xBA13] = HI_BYTE(T_SAMPLE);       
  54   1          // set polarity
C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 2   

  55   1      #if IR_MODULATION == IR_MOD_PPM
  56   1          XBYTE[0xBA17] = 0x01;
  57   1      #elif IR_MODULATION == IR_MOD_PWM
                  XBYTE[0xBA17] = 0x03;
              #elif IR_MODULATION == IR_MOD_BIPHASE
                  XBYTE[0xBA17] = 0x07;
              #elif IR_MODULATION == IR_MOD_BINARY
                  XBYTE[0xBA17] = 0x05;
              #else
                  while(1);
              #endif
  66   1      
  67   1          XBYTE[0xBA19]=0x07; // clear all events
  68   1          XBYTE[0xBA18]=0x07; // enable all IR interrupts
  69   1          XBYTE[0xBA17]|=0x80; // IR reveiver HW enabled
  70   1          XBYTE[0xBA19]=0x07; // clear all events
  71   1      }
  72          
  73          
  74          void ClearIRNumberVariable(void)
  75          {
  76   1              memset(gc_NUMBER,0,4); //Clear
  77   1              gc_ComColumn=0;
  78   1              gb_IRNumberFlag=0;
  79   1              gc_IRNumberCnt=0;
  80   1      }
  81          
  82          
  83          //----------------------------------------------------------------------------
  84          // 顯示 SONG 0
  85          // 顯示 MHz  1
  86          //---------------------------------------------------------------------------
  87          void ShowSongFreq(U8 x_Column,U8 x_SongMhz)
  88          {
  89   1          if(x_SongMhz)
  90   1          {
  91   2             LCM_ShowChar12x32(21,x_Column+12);   // M
  92   2             LCM_ShowChar12x32(17,x_Column+24);   // H
  93   2             LCM_ShowChar12x32(30,x_Column+36);   // z
  94   2          }
  95   1              else
  96   1              {
  97   2             LCM_ShowChar12x32(26,x_Column);      // S        
  98   2             LCM_ShowChar12x32(23,x_Column+12);   // O
  99   2             LCM_ShowChar12x32(22,x_Column+24);   // N
 100   2             LCM_ShowChar12x32(16,x_Column+36);   // G
 101   2             LCM_ShowChar12x32(31,x_Column+48);   // space
 102   2          }
 103   1      }
 104          //---------------------------------------------------------------------------
 105          //  x_MHz_SONG ==2   SONG
 106          //  x_MHz_SONG ==1   Freqency
 107          //---------------------------------------------------------------------------
 108          void NumberIRKeySuccess(U8 x_MHz_SONG)
 109          {
 110   1              U16 xw_temp;
 111   1      
 112   1              xw_temp = (gc_NUMBER[3]&0x0F)*1000;
 113   1              xw_temp += (gc_NUMBER[2]&0x0F)*100;
 114   1              xw_temp += (gc_NUMBER[1]&0x0F)*10;
 115   1              xw_temp += (gc_NUMBER[0]&0x0F);
 116   1      
C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 3   

 117   1              if(x_MHz_SONG==1)   //1==FREQ
 118   1              {
 119   2                      LCM_Clear_L2_L5();
 120   2                      if((xw_temp<875)||(xw_temp>1080))
 121   2                      {
 122   3                              LCM_ShowERROR();
 123   3                      }
 124   2                      else
 125   2                      {
 126   3      //-t                    FMIRNumberKey(xw_temp);
 127   3                      }
 128   2              }
 129   1              else
 130   1              {            //SONG
 131   2                      if((xw_temp>gw_FileTotalNumber[0])||(xw_temp==0))
 132   2                      {
 133   3                              LCM_Clear_L2_L5();
 134   3                              LCM_ShowERROR();
 135   3                      }
 136   2                      else
 137   2                      {//Select Song Success-----------------------------
 138   3                              if(xw_temp==gw_FileIndex[0])
 139   3                              {
 140   4                                      gc_IR_Timer=0;
 141   4                              }
 142   3                              else if(xw_temp>gw_FileIndex[0])
 143   3                              {
 144   4                                      gw_FileSkipNumber=xw_temp-gw_FileIndex[0];
 145   4                                      play_next();
 146   4                              }
 147   3                              else
 148   3                              {
 149   4                                      gw_FileSkipNumber=(gw_FileTotalNumber[0]-gw_FileIndex[0])+xw_temp;
 150   4                                      play_next();
 151   4                              }
 152   3                      }
 153   2              }
 154   1              gb_ClearBigIcon=1;
 155   1              ClearIRNumberVariable();
 156   1      }
 157          
 158          //-------------------------------------------------------------------------------
 159          // U8 x_Song_Freq 0=最後在設定
 160          //                1=頻率
 161          //                2=歌曲
 162          //   x_Num==數字 0~9
 163          //-------------------------------------------------------------------------------
 164          void ShowIrNumber(U8 x_Num,U8 x_Song_Freq)
 165          {
 166   1          if(gs_System_State.c_Phase==TASK_PHASE_PAUSE) return;
 167   1          gb_IRNumberFlag=1;
 168   1          switch(gc_IRNumberCnt)
 169   1          {
 170   2            case 0x00:
 171   2                 LCM_Clear_L2_L5();
 172   2                 if(x_Song_Freq==1)
 173   2                 {
 174   3                    ShowSongFreq(70,1);    //SHOW MHz
 175   3                    gc_NUMBER[0] = x_Num;  //Save Number
 176   3                    gc_ComColumn=5;
 177   3                    LCM_ShowChar12x32(gc_NUMBER[0],gc_ComColumn);
 178   3                 }
C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 4   

 179   2                 else if(x_Song_Freq==2)
 180   2                 {
 181   3                    ShowSongFreq(0,0);     //Show Song 12*5=60
 182   3                    gc_NUMBER[0] = x_Num;  //Save Number
 183   3                    gc_ComColumn=60;
 184   3                    LCM_ShowChar12x32(gc_NUMBER[0],gc_ComColumn);
 185   3                 }
 186   2                 else                      //Null
 187   2                 {
 188   3                    gc_NUMBER[0] = x_Num;  //Save Number
 189   3                    gc_ComColumn=60;
 190   3                    LCM_ShowChar12x32(gc_NUMBER[0],gc_ComColumn);
 191   3                 }
 192   2                 break;
 193   2            case 0x01:
 194   2                 gc_NUMBER[1] = gc_NUMBER[0];
 195   2                 gc_NUMBER[0] = x_Num;  //Save Number
 196   2      
 197   2                 LCM_ShowChar12x32(gc_NUMBER[1],gc_ComColumn);
 198   2                 LCM_ShowChar12x32(gc_NUMBER[0],gc_ComColumn+12);
 199   2                 break;
 200   2            case 0x02:
 201   2                 gc_NUMBER[2] = gc_NUMBER[1];
 202   2                 gc_NUMBER[1] = gc_NUMBER[0];
 203   2                 gc_NUMBER[0] = x_Num;  //Save Number
 204   2                 LCM_ShowChar12x32(gc_NUMBER[2],gc_ComColumn);
 205   2                 LCM_ShowChar12x32(gc_NUMBER[1],gc_ComColumn+12);
 206   2                 LCM_ShowChar12x32(gc_NUMBER[0],gc_ComColumn+12+12);
 207   2                 break;
 208   2            case 0x03:
 209   2                 gc_NUMBER[3] = gc_NUMBER[2];
 210   2                 gc_NUMBER[2] = gc_NUMBER[1];
 211   2                 gc_NUMBER[1] = gc_NUMBER[0];
 212   2                 gc_NUMBER[0] = x_Num;  //Save Number
 213   2                 LCM_ShowChar12x32(gc_NUMBER[3],gc_ComColumn);
 214   2                 LCM_ShowChar12x32(gc_NUMBER[2],gc_ComColumn+12);
 215   2                 LCM_ShowChar12x32(gc_NUMBER[1],gc_ComColumn+12+12);
 216   2                 LCM_ShowChar12x32(gc_NUMBER[0],gc_ComColumn+12+12+12);
 217   2                 break;
 218   2          }
 219   1          gc_IR_Timer=120;
 220   1          if(gc_IRNumberCnt>=3)
 221   1          {
 222   2             NumberIRKeySuccess(x_Song_Freq);
 223   2             return;
 224   2          }
 225   1          gc_IRNumberCnt++;
 226   1      }
 227          //-------------------------------------------------------------------------------
 228          // x_Sg_Fr == 0 or 2   SONG
 229          // x_Sg_Fr == 1   Frequency
 230          //-------------------------------------------------------------------------------
 231          void CheckIRKeyPushDownTimerOut(U8 x_Sg_Fr)
 232          {
 233   1              if(gc_IR_Timer==0)
 234   1              {
 235   2                      NumberIRKeySuccess(x_Sg_Fr);
 236   2              }
 237   1      }
 238          
 239          
 240          void IR_Service_Process(void)
C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 5   

 241          {
 242   1              data    U16 x_IrTemp;
 243   1              data    U8      tc_IR_NUM;
 244   1              
 245   1              ((U8*)(&x_IrTemp))[0]=XBYTE[0xBA1B];
 246   1              ((U8*)(&x_IrTemp))[1]=XBYTE[0xBA1A];
 247   1      
 248   1              tc_IR_NUM=0xFF;
 249   1              switch(x_IrTemp)   //用戶碼
 250   1              {
 251   2                      case IR_CustomerCode://-----IR 21 Key Function-----
 252   2                              if((XBYTE[0xBA1C]+XBYTE[0xBA1D])!=0xFF) 
 253   2                              {
 254   3                                      return; //Code ERROR
 255   3                              }
 256   2      
 257   2                              switch(XBYTE[0xBA1C])
 258   2                              {
 259   3                                      case 0x19://-------------- +100/RPT---------------
 260   3                                              switch(gc_Task_Current)
 261   3                                              {
 262   4                                                      case C_Task_FM:
 263   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 264   4                                                              {
 265   5                                                                      gc_KeyEvent=0;        //NULL Key
 266   5                                                              }
 267   4                                                      break;
 268   4                          
 269   4                                                      case C_Task_MusicPlay:
 270   4                                                              if(gc_IRCmdStatus==1)   // Short Key
 271   4                                                              {
 272   5                                                                      gc_KeyEvent=0x12;       // Play Mode change
 273   5                                                              }
 274   4                                                      break;
 275   4                                              }
 276   3                                      break;
 277   3      
 278   3                                      case 0x0D://----------- +200/ U/SD----------------------
 279   3                                              switch(gc_Task_Current)
 280   3                                              {
 281   4                                                      case C_Task_FM:
 282   4                                                              if(gc_IRCmdStatus==1)    // Short Key
 283   4                                                              {
 284   5                                                                      gc_KeyEvent=0x05;    // Media change
 285   5                                                              }
 286   4                                                      break;
 287   4      
 288   4                                                      case C_Task_MusicPlay:
 289   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 290   4                                                              {
 291   5                                                                      gc_KeyEvent=0x05;    // Media change
 292   5                                                              }
 293   4                                                      break;
 294   4                                              }
 295   3                                      break;
 296   3      
 297   3                                      case 0x43://-----------Play/Pause-----------------------
 298   3                                              switch(gc_Task_Current)
 299   3                                              {
 300   4                                                      case C_Task_FM:
 301   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 302   4                                                              {
C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 6   

 303   5                                                                      gc_KeyEvent=0;        //NULL Key
 304   5                                                              }
 305   4                                                      break;
 306   4                          
 307   4                                                      case C_Task_MusicPlay:
 308   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 309   4                                                              {
 310   5                                                                      gc_KeyEvent=0x02;     //Play/Pause
 311   5                                                              }
 312   4                                                      break;
 313   4                                              }
 314   3                                      break;
 315   3      
 316   3                                      case 0x44://-----------Prev---------------------
 317   3                                              switch(gc_Task_Current)
 318   3                                              {
 319   4                                                      case C_Task_FM:
 320   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 321   4                                                              {
 322   5                                                                      gc_KeyEvent=0;        //NULL Key
 323   5                                                              }
 324   4                                                      break;
 325   4                          
 326   4                                                      case C_Task_MusicPlay:
 327   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 328   4                                                              {
 329   5                                                                      gc_KeyEvent=0x04;     //Prev
 330   5                                                              }
 331   4                                                              else if(gc_IRCmdStatus==2)    //Long Key
 332   4                                                              {
 333   5                                                                      gc_KeyEvent=0x14;     //Prev folder
 334   5                                                              }
 335   4                                                      break;
 336   4                                              }
 337   3                                      break;
 338   3      
 339   3                                      case 0x40://-----------Next-----------------------
 340   3                                              switch(gc_Task_Current)
 341   3                                              {
 342   4                                                      case C_Task_FM:
 343   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 344   4                                                              {
 345   5                                                                      gc_KeyEvent=0;        //NULL Key
 346   5                                                              }
 347   4                                                      break;
 348   4      
 349   4                                                      case C_Task_MusicPlay:
 350   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 351   4                                                              {
 352   5                                                                      gc_KeyEvent=0x03;     //Next
 353   5                                                              }
 354   4                                                              else if(gc_IRCmdStatus==2)    //Long Key
 355   4                                                              {
 356   5                                                                      gc_KeyEvent=0x13;     //Next folder
 357   5                                                              }
 358   4                                                      break;
 359   4                                              }
 360   3                                      break;
 361   3      
 362   3                                      case 0x09://-----------EQ Mode--------------------
 363   3                                              switch(gc_Task_Current)
 364   3                                              {
C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 7   

 365   4                                                      case C_Task_FM:
 366   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 367   4                                                              {
 368   5                                                                      gc_KeyEvent=0;        //NULL Key
 369   5                                                              }
 370   4                                                      break;
 371   4      
 372   4                                                      case C_Task_MusicPlay:
 373   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 374   4                                                              {
 375   5                                                                      gc_KeyEvent=0x15;     //EQ Mode
 376   5                                                              }
 377   4                                                      break;
 378   4                                              }
 379   3                                      break;
 380   3          
 381   3                                      case 0x07://-----------VolumeDown-----------------------
 382   3                                              switch(gc_Task_Current)
 383   3                                              {
 384   4                                                      case C_Task_FM:
 385   4                                                      case C_Task_MusicPlay:
 386   4                                                              if(gc_IRCmdStatus==1)           //Short Key
 387   4                                                              {
 388   5                                                                      gc_KeyEvent=0x07;               //Vol-
 389   5                                                              }
 390   4                                                              else if(gc_IRCmdStatus==2)      //Long Key
 391   4                                                              {
 392   5                                                                      gc_IRLongKeyCount=IRKEY_REPEATTIMES-3;
 393   5                                                                      gc_KeyEvent=0x07;               //Vol-
 394   5                                                              }
 395   4                                                      break;
 396   4                                              }
 397   3                                      break;
 398   3          
 399   3                                      case 0x15://-----------VolumeUp-----------------------
 400   3                                              switch(gc_Task_Current)
 401   3                                              {
 402   4                                                      case C_Task_FM:
 403   4                                                      case C_Task_MusicPlay:
 404   4                                                              if(gc_IRCmdStatus==1)           //Short Key
 405   4                                                              {
 406   5                                                                      gc_KeyEvent=0x06;               //Vol+
 407   5                                                              }
 408   4                                                              else if(gc_IRCmdStatus==2)      //Long Key
 409   4                                                              {
 410   5                                                                      gc_IRLongKeyCount=IRKEY_REPEATTIMES-3;
 411   5                                                                      gc_KeyEvent=0x06;               //Vol+
 412   5                                                              }
 413   4                                                      break;          
 414   4                                              }
 415   3                                      break;
 416   3      
 417   3                                      case 0x45://-----------CH- -------------------------
 418   3                                              switch(gc_Task_Current)
 419   3                                              {
 420   4                                                      case C_Task_FM:
 421   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 422   4                                                              {
 423   5                                                                      gc_KeyEvent=0x04;     //Fequency Down
 424   5                                                              }
 425   4                                                      break;
 426   4      
C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 8   

 427   4                                                      case C_Task_MusicPlay:
 428   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 429   4                                                              {
 430   5                                                                      gc_KeyEvent=0x00;     //Null Key
 431   5                                                              }
 432   4                                                      break;
 433   4                                              }
 434   3                                      break;
 435   3                              
 436   3                                      case 0x47://-----------CH+-----------------------
 437   3                                              switch(gc_Task_Current)
 438   3                                              {
 439   4                                                      case C_Task_FM:
 440   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 441   4                                                              {
 442   5                                                                      gc_KeyEvent=0x03;     //Fequency Up
 443   5                                                              }
 444   4                                                      break;
 445   4                              
 446   4                                                      case C_Task_MusicPlay:
 447   4                                                              if(gc_IRCmdStatus==1)    //Short Key
 448   4                                                              {
 449   5                                                                      gc_KeyEvent=0x00;     //Null Key
 450   5                                                              }
 451   4                                                      break;
 452   4                                              }
 453   3                                      break;
 454   3              
 455   3                                      case 0x46://-----------CH-----------------------
 456   3                                              if(gc_IRCmdStatus==1)
 457   3                                              {
 458   4                                                      gc_Task_Current=C_Task_Suspend;
 459   4                                              }
 460   3                                      break;
 461   3      
 462   3                                      case 0x16://-----------0------------------------
 463   3                                              if(gc_IRCmdStatus==1)    //Short Key
 464   3                                              {
 465   4                                                      tc_IR_NUM=0;
 466   4                                              }
 467   3                                      break;
 468   3                              
 469   3                                      case 0x0C://-----------1---------------------------
 470   3                                              if(gc_IRCmdStatus==1)    //Short Key
 471   3                                              {
 472   4                                                      tc_IR_NUM=1;
 473   4                                              }
 474   3                                      break;
 475   3                  
 476   3                                      case 0x18://-----------2--------------------------
 477   3                                              if(gc_IRCmdStatus==1)    //Short Key
 478   3                                              {
 479   4                                                      tc_IR_NUM=2;                                    
 480   4                                              }
 481   3                                      break;
 482   3      
 483   3                                      case 0x5E://-----------3--------------------------
 484   3                                              if(gc_IRCmdStatus==1)    //Short Key
 485   3                                              {
 486   4                                                      tc_IR_NUM=3;
 487   4                                              }
 488   3                                      break;
C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 9   

 489   3      
 490   3                                      case 0x08://-----------4---------------------------
 491   3                                              if(gc_IRCmdStatus==1)    //Short Key
 492   3                                              {
 493   4                                                      tc_IR_NUM=4;
 494   4                                              }
 495   3                                      break;
 496   3      
 497   3                                      case 0x1C://-----------5-----------------------
 498   3                                              if(gc_IRCmdStatus==1)    //Short Key
 499   3                                              {
 500   4                                                      tc_IR_NUM=5;
 501   4                                              }
 502   3                                      break;
 503   3      
 504   3                                      case 0x5A://-----------6-----------------------
 505   3                                              if(gc_IRCmdStatus==1)    //Short Key
 506   3                                              {
 507   4                                                      tc_IR_NUM=6;
 508   4                                              }
 509   3                                      break;
 510   3      
 511   3                                      case 0x42://-----------7-----------------------
 512   3                                              if(gc_IRCmdStatus==1)    //Short Key
 513   3                                              {
 514   4                                                      tc_IR_NUM=7;
 515   4                                              }
 516   3                                      break;
 517   3                  
 518   3                                      case 0x52://-----------8-----------------------
 519   3                                              if(gc_IRCmdStatus==1)    //Short Key
 520   3                                              {
 521   4                                                      tc_IR_NUM=8;
 522   4                                              }
 523   3                                      break;
 524   3                              
 525   3                                      case 0x4A://-----------9-----------------------
 526   3                                              if(gc_IRCmdStatus==1)    //Short Key
 527   3                                              {
 528   4                                                      tc_IR_NUM=9;
 529   4                                              }
 530   3                                      break;
 531   3                              }
 532   2      
 533   2                              if(tc_IR_NUM!=0xFF)
 534   2                              {
 535   3                                      if(gc_Task_Current==C_Task_FM)
 536   3                                      {
 537   4                                              ShowIrNumber(tc_IR_NUM,1);    //FM MODE
 538   4                                      }
 539   3                                      else
 540   3                                      {
 541   4                                              ShowIrNumber(tc_IR_NUM,2);    //SONG MODE
 542   4                                      }       
 543   3                              }               
 544   2                      break;
 545   2              }
 546   1              gc_IRCmdStatus=0;
 547   1      }
 548          
 549          
 550          void Change_EQ(void)
C51 COMPILER V9.00   REMOTE                                                                07/09/2012 21:16:48 PAGE 10  

 551          {
 552   1              gs_DSP_GLOBAL_RAM.sc_EQ_Type++;
 553   1              if(gs_DSP_GLOBAL_RAM.sc_EQ_Type>5)
 554   1              {
 555   2                      gs_DSP_GLOBAL_RAM.sc_EQ_Type=0;    
 556   2              }
 557   1              Music_EQ_Cmd();
 558   1              LCM_Clear_L2_L5();
 559   1              //---Show EQ大圖形------------------------------------
 560   1              LCM_ShowEQ();
 561   1              //---Show EQ小圖形------------------------------------
 562   1              LCM_ShowEQIcon();
 563   1              gc_ShowTimer=72;
 564   1      }
 565          
 566          
 567          void MediaChange(void)
 568          {
 569   1              gb_Dosinitfail=0;
 570   1              switch(gc_CurrentCard)
 571   1              {
 572   2                      case 0x02:  //SD-->HOST
 573   2                              if(gb_Host_Exist==0)
 574   2                              {
 575   3                                      return;
 576   3                              }
 577   2                              gb_MediaMask=1;
 578   2                      break;
 579   2      
 580   2                      case 0x05:  //HOST--->SD
 581   2                              if(gb_SD_Exist==0)
 582   2                              {
 583   3                                      return;
 584   3                              }
 585   2                              gb_MediaMask=1;
 586   2                      break;
 587   2              }
 588   1              gb_LrcFileName_Exist=0;
 589   1              play_stop();
 590   1      }
 591          
 592          
 593          
 594          
 595          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1465    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
