C51 COMPILER V9.00   SETCLOCK                                                              07/09/2012 21:16:54 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SETCLOCK
OBJECT MODULE PLACED IN .\obj\SetClock.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Setup\SetClock.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource\
                    -header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\SetClock.lst) OBJECT(.\obj\SetClock.obj)

line level    source

   1          #include "..\Header\SPDA2K.h"
   2          #include "..\header\variables.h"
   3          
   4          code    U16     K_Year[4]={365,365,366,365};
   5          code    U8      K_Month[12]={31,28,31,30,31,30,31,31,30,31,30,31};
   6          
   7          void SetClock(void)
   8          {
   9   1              data    U8      i;
  10   1              data    U16     tw_Days;
  11   1              data    U32     tdw_Seconds;
  12   1      
  13   1              RTC_Calendar();
  14   1              LCM_Clear_L0_L7();
  15   1              LCM_ShowTitle_SetClock();
  16   1              gc_LCM_line=3;
  17   1              LCM_ShowChar8x16(11,56);        // "/"
  18   1              LCM_ShowChar8x16(11,80);        // "/"
  19   1              gc_LCM_line=5;
  20   1              LCM_ShowChar8x16(10,48);        // ":"
  21   1              LCM_ShowChar8x16(10,72);        // ":"
  22   1      
  23   1              LCM_ShowMonth(gc_Month);
  24   1              LCM_ShowDay(gc_Day);
  25   1              LCM_ShowHour(gc_Hour);
  26   1              LCM_ShowMin(gc_Min);
  27   1              LCM_ShowSec(gc_Sec);
  28   1              gb_LCM_InverseDisp=1;
  29   1              LCM_ShowYear(gc_Year);
  30   1      
  31   1              gc_MenuTimer=6;
  32   1              i=0;
  33   1              while(1)
  34   1              {
  35   2                      Key_Detect();
  36   2                      if(gc_KeyEvent!=0)
  37   2                      {
  38   3                              gc_MenuTimer=6; // Reset Function Menu timer
  39   3                              gb_LCM_InverseDisp=1;
  40   3                              switch(gc_KeyEvent)
  41   3                              {
  42   4                                      case 0x16:      // L-M
  43   4                                              gc_MenuTimer=0;         // Abort
  44   4                                      break;
  45   4      
  46   4                                      case 0x03:      // Next
  47   4                                              gb_ADJ=0;
  48   4                                              switch(i)
  49   4                                              {
  50   5                                                      case 0: // Year(2010(0)~2039(29))
  51   5                                                              gc_Year++;
  52   5                                                              if(gc_Year>29)
  53   5                                                              {
  54   6                                                                      gc_Year=0;
C51 COMPILER V9.00   SETCLOCK                                                              07/09/2012 21:16:54 PAGE 2   

  55   6                                                              }
  56   5                                                              LCM_ShowYear(gc_Year);
  57   5                                                      break;
  58   5      
  59   5                                                      case 1: // Month
  60   5                                                              Month_Adj();
  61   5                                                              LCM_ShowMonth(gc_Month);
  62   5                                                              gb_LCM_InverseDisp=0;
  63   5                                                              LCM_ShowDay(gc_Day);
  64   5                                                      break;
  65   5      
  66   5                                                      case 2: // Day
  67   5                                                              Day_Adj();
  68   5                                                              LCM_ShowDay(gc_Day);
  69   5                                                      break;
  70   5      
  71   5                                                      case 3: // Hour
  72   5                                                              gc_Hour++;
  73   5                                                              if(gc_Hour==24)
  74   5                                                              {
  75   6                                                                      gc_Hour=0;
  76   6                                                              }
  77   5                                                              LCM_ShowHour(gc_Hour);
  78   5                                                      break;
  79   5      
  80   5                                                      case 4: // Minute
  81   5                                                              gc_Min++;
  82   5                                                              if(gc_Min==60)
  83   5                                                              {
  84   6                                                                      gc_Min=0;
  85   6                                                              }
  86   5                                                              LCM_ShowMin(gc_Min);
  87   5                                                      break;
  88   5      
  89   5                                                      case 5: // Second
  90   5                                                              gc_Sec++;
  91   5                                                              if(gc_Sec==60)
  92   5                                                              {
  93   6                                                                      gc_Sec=0;
  94   6                                                              }
  95   5                                                              LCM_ShowSec(gc_Sec);
  96   5                                                      break;
  97   5                                              }
  98   4                                      break;
  99   4      
 100   4                                      case 0x04:      // Prev
 101   4                                              gb_ADJ=1;
 102   4                                              switch(i)
 103   4                                              {
 104   5                                                      case 0: // Year(2010(0)~2039(29))
 105   5                                                              if(gc_Year==0)
 106   5                                                              {
 107   6                                                                      gc_Year=29;
 108   6                                                              }
 109   5                                                              else
 110   5                                                              {
 111   6                                                                      gc_Year--;
 112   6                                                              }
 113   5                                                              LCM_ShowYear(gc_Year);
 114   5                                                      break;
 115   5      
 116   5                                                      case 1: // Month
C51 COMPILER V9.00   SETCLOCK                                                              07/09/2012 21:16:54 PAGE 3   

 117   5                                                              Month_Adj();
 118   5                                                              LCM_ShowMonth(gc_Month);
 119   5                                                              gb_LCM_InverseDisp=0;
 120   5                                                              LCM_ShowDay(gc_Day);
 121   5                                                      break;
 122   5      
 123   5                                                      case 2: // Day
 124   5                                                              Day_Adj1();
 125   5                                                              LCM_ShowDay(gc_Day);
 126   5                                                      break;
 127   5                      
 128   5                                                      case 3: // Hour
 129   5                                                              gc_Hour--;
 130   5                                                              if(gc_Hour==-1)
 131   5                                                              {
 132   6                                                                      gc_Hour=23;
 133   6                                                              }
 134   5                                                              LCM_ShowHour(gc_Hour);
 135   5                                                      break;
 136   5      
 137   5                                                      case 4: // Minute
 138   5                                                              gc_Min--;
 139   5                                                              if(gc_Min==-1)
 140   5                                                              {
 141   6                                                                      gc_Min=59;
 142   6                                                              }
 143   5                                                              LCM_ShowMin(gc_Min);
 144   5                                                      break;
 145   5      
 146   5                                                      case 5: // Second
 147   5                                                              gc_Sec--;
 148   5                                                              if(gc_Sec==-1)
 149   5                                                              {
 150   6                                                                      gc_Sec=59;
 151   6                                                              }
 152   5                                                              LCM_ShowSec(gc_Sec);
 153   5                                                      break;
 154   5                                              }
 155   4                                      break;
 156   4      
 157   4                                      case 0x06:      // M
 158   4                                              gb_LCM_InverseDisp=0;
 159   4                                              switch(i)
 160   4                                              {
 161   5                                                      case 0:
 162   5                                                              LCM_ShowYear(gc_Year);
 163   5                                                      break;
 164   5                                                      case 1:
 165   5                                                              LCM_ShowMonth(gc_Month);
 166   5                                                      break;
 167   5                                                      case 2:
 168   5                                                              LCM_ShowDay(gc_Day);
 169   5                                                      break;
 170   5                                                      case 3:
 171   5                                                              LCM_ShowHour(gc_Hour);
 172   5                                                      break;
 173   5                                                      case 4:
 174   5                                                              LCM_ShowMin(gc_Min);
 175   5                                                      break;
 176   5                                              }
 177   4                                              i++;
 178   4                                              gb_LCM_InverseDisp=1;
C51 COMPILER V9.00   SETCLOCK                                                              07/09/2012 21:16:54 PAGE 4   

 179   4                                              switch(i)
 180   4                                              {
 181   5                                                      case 1:
 182   5                                                              LCM_ShowMonth(gc_Month);
 183   5                                                      break;
 184   5                                                      case 2:
 185   5                                                              LCM_ShowDay(gc_Day);
 186   5                                                      break;
 187   5                                                      case 3:
 188   5                                                              LCM_ShowHour(gc_Hour);
 189   5                                                      break;
 190   5                                                      case 4:
 191   5                                                              LCM_ShowMin(gc_Min);
 192   5                                                      break;
 193   5                                                      case 5:
 194   5                                                              LCM_ShowSec(gc_Sec);
 195   5                                                      break;
 196   5                                                      case 6:
 197   5                                                              gc_LCM_line=0;
 198   5                                                              gb_LCM_InverseDisp=0;
 199   5                                                              // Set into RTC
 200   5                                                              tw_Days=gc_Day-1;
 201   5                                                              gc_Month--;
 202   5                                                              while(gc_Month)
 203   5                                                              {
 204   6                                                                      gc_Month--;
 205   6                                                                      tw_Days+=K_Month[gc_Month];
 206   6                                                              }
 207   5                                                              while(gc_Year)
 208   5                                                              {
 209   6                                                                      gc_Year--;
 210   6                                                                      tw_Days+=K_Year[gc_Year&0x03];
 211   6                                                              }
 212   5                                                              if(((gc_Year+2)&3==0)&&(gc_Month>2))
 213   5                                                              {
 214   6                                                                      tw_Days++;
 215   6                                                              }
 216   5      
 217   5                                                              tdw_Seconds=gc_Sec;
 218   5                                                              tdw_Seconds+=(U16)gc_Min*60;
 219   5                                                              tdw_Seconds+=(U32)gc_Hour*3600;
 220   5                                                              tdw_Seconds+=(U32)tw_Days*86400;
 221   5                                                              RTC_Write(0x00,0x0D);   // enable RTC, load mode
 222   5                                                              RTC_Write(0x10,0xFF);
 223   5                                                              RTC_DisableInterrupt();
 224   5                                                              if(tdw_Seconds&0x01)
 225   5                                                              {
 226   6                                                                      RTC_Write(0x11,0xF0);
 227   6                                                              }
 228   5                                                              else
 229   5                                                              {
 230   6                                                                      RTC_Write(0x11,0x70);
 231   6                                                              }
 232   5                                                              tdw_Seconds=tdw_Seconds>>1;
 233   5                                                              RTC_Write(0x12,(U8)tdw_Seconds);
 234   5                                                              tdw_Seconds=tdw_Seconds>>8;
 235   5                                                              RTC_Write(0x13,(U8)tdw_Seconds);
 236   5                                                              tdw_Seconds=tdw_Seconds>>8;
 237   5                                                              RTC_Write(0x14,(U8)tdw_Seconds);
 238   5                                                              tdw_Seconds=tdw_Seconds>>8;
 239   5                                                              RTC_Write(0x15,(U8)tdw_Seconds);
 240   5                                                              RTC_Write(0xB0,0x01);   // load start value
C51 COMPILER V9.00   SETCLOCK                                                              07/09/2012 21:16:54 PAGE 5   

 241   5                                                              RTC_Write(0x00,0x05);
 242   5                                                              RTC_EnableInterrupt();
 243   5                                                              LCM_Clear_L0_L7();
 244   5                                                              gc_Task_Current=C_Task_Setup;
 245   5                                                              return;
 246   5                                                      break;
 247   5                                              }                               
 248   4                                      break;
 249   4                              }
 250   3                      }
 251   2      
 252   2                      if(gb_AlarmTrigger==1)
 253   2                      {
 254   3                              if(CheckAlarmSetting()==0)      // Match Alarm Clock Setting
 255   3                              {
 256   4                                      gc_Task_Last=C_Task_SetClock;
 257   4                                      gc_Task_Current=C_Task_AlarmON;
 258   4                              }
 259   3                      }
 260   2      
 261   2                      if(gc_MenuTimer==0)
 262   2                      {
 263   3                              gc_Task_Current=C_Task_Idle;
 264   3                              gc_LCM_line=0;
 265   3                              gb_LCM_InverseDisp=0;
 266   3                              break;
 267   3                      }
 268   2              }
 269   1      }
 270          
 271          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    890    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
