C51 COMPILER V9.00   SYSTEM                                                                07/09/2012 21:16:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SYSTEM
OBJECT MODULE PLACED IN .\obj\System.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE MAIN\System.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource\hea
                    -der) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\System.lst) OBJECT(.\obj\System.obj)

line level    source

   1          #include "..\header\SPDA2K.h"
   2          #include "..\header\host_init.h"
   3          #include "..\header\UI_config.h"
   4          #include "..\header\variables.h"
   5          #include "..\LCM\LCM_BMP.h"
   6          
   7          extern void LineIn_Task(void);//
   8          
   9          data bit gbt_USB_Detected;           
  10          void USB_PlugDetect(void){//(JC)H0613
  11   1              U8 tc_i;
  12   1              U8 tc_usb_detect;
  13   1      
  14   1              GLOBAL_REG[0xD1] = 0xf0;                                                        //(JC)from debounce ckt
  15   1              tc_i =0x08;
  16   1              while(tc_i)
  17   1              {
  18   2                      tc_usb_detect = GLOBAL_REG[0xD1]&0x02;
  19   2                      tc_i--;
  20   2              }
  21   1              if(tc_usb_detect){
  22   2                  gbt_USB_Detected = 1;                                               // USB_Detected
  23   2              }
  24   1              else{
  25   2                  gbt_USB_Detected = 0;
  26   2              }
  27   1      }
  28          
  29          
  30          void main(void)
  31          {
  32   1              InitCPURAM();
  33   1      SYSTEM_ON:
  34   1              InitSystemRAM();
  35   1              Variables_Init();
  36   1              Sysetm_Init();
  37   1          SPI_Init();
  38   1              RTC_Init();
  39   1      //      if(gc_SW_RESET!=0x36)
  40   1              {
  41   2              LCM_Init();
  42   2                      USB_Task();
  43   2              }
  44   1      //      else
  45   1              {
  46   2                      LCM_BACKLIGHT=0;
  47   2              }
  48   1              IE=0x83;
  49   1              IR_Init();
  50   1      
  51   1              if(gb_AlarmTrigger==1)
  52   1              {
  53   2                      gc_Task_Current=C_Task_AlarmON;
  54   2                      gc_LCMBacklightTimer=0;
C51 COMPILER V9.00   SYSTEM                                                                07/09/2012 21:16:50 PAGE 2   

  55   2                      goto For_AlarmClock;
  56   2              }
  57   1              SourceDevicePreSet();
  58   1              gc_LCMBacklightTimer=gc_LCMBacklightTime;
  59   1              while(gb_RTC_wakeup==0);//蜆逄曆峈脹渾奀潔載陔.
  60   1          gc_LastCard=gc_CurrentCard;
  61   1              if(gb_OrderRecordTrigger==1)
  62   1              {
  63   2                      gc_Task_Current=C_Task_FM;
  64   2              }
  65   1      
  66   1              if(gb_SuspendKeyRelease==1)     // Wakeup By [Press], Wait Key Release
  67   1              {
  68   2                      while(READ_SARADC(0)<240)
  69   2                      {
  70   3      //                      dbprintf("%bx ",gc_key_Pressed);
  71   3                      }
  72   2              }
  73   1      For_AlarmClock:
  74   1              gc_key_Pressed=0;
  75   1              gc_KeyValue=0;
  76   1              gc_IRCmdStatus=0;
  77   1      
  78   1              while(1)
  79   1              {
  80   2                      dbprintf("gc_Task_Current=%bx\n",gc_Task_Current);
  81   2                      gs_DSP_GLOBAL_RAM.s_DSP_RAM.sc_RepeatMode=REPEAT_AB_NULL;
  82   2                      switch(gc_Task_Current)
  83   2                      {
  84   3      
  85   3                              case C_Task_Idle:               // 顯示時間 HH:MM:SS
  86   3                                      Idle_Task();
  87   3                              break;
  88   3      
  89   3                              case C_Task_Suspend:    // 省電模式
  90   3                                      Suspend();
  91   3                                      EA=0;
  92   3                                      goto SYSTEM_ON;
  93   3                              break;  
  94   3      
  95   3                              case C_Task_FuncOption: // 音樂/錄音播放/FM/日曆/設定
  96   3                                      MainMenu();
  97   3                              break;
  98   3      
  99   3                              case C_Task_MusicPlay:  // 音樂
 100   3                                      Play_Task();
 101   3                              break;
 102   3      
 103   3                              case C_Task_PlayWAV:    // FM錄音播放
 104   3                                      gc_RepPlayMode_Bak=gc_RepPlayMode;
 105   3                                      gc_RepPlayMode=0;       // Always Play-All
 106   3                                      WAV_Play();
 107   3                                      gc_RepPlayMode=gc_RepPlayMode_Bak;
 108   3                              break;
 109   3      
 110   3                              case C_Task_FM:                 // FM
 111   3                                      FM_Task();
 112   3                              break;                  
 113   3              
 114   3                              case C_Task_Calendar:   // Calendar
 115   3                                      DisplayCalendar();
 116   3                              break;
C51 COMPILER V9.00   SYSTEM                                                                07/09/2012 21:16:50 PAGE 3   

 117   3      
 118   3                              case C_Task_Setup:              // Setup menu
 119   3                                      SetupMenu();
 120   3                              break;
 121   3      
 122   3                              case C_Task_SetClock:   // Set Clock
 123   3                                      SetClock();
 124   3                              break;
 125   3      
 126   3                              case C_Task_SetBacklight:       // Set Backlight timer
 127   3                                      SetBacklight();
 128   3                              break;
 129   3      
 130   3                              case C_Task_SetLanguage:        // Select Language
 131   3                                      SetLanguage();
 132   3                              break;
 133   3      
 134   3                              case C_Task_SetAlarm:           // Set Alarm Clock
 135   3                                      SetAlarmClock();
 136   3                              break;
 137   3      
 138   3                              case C_Task_SetOFFTimer:        // Set OFF timer
 139   3                                      SetOFFTimer();
 140   3                              break;
 141   3      
 142   3                              case C_Task_AlarmON:            // Issue Alarm Sound
 143   3                                      AlarmMusic();
 144   3                              break;
 145   3                      
 146   3                              case C_Task_LineIn:             // Issue Alarm Sound
 147   3                                      LineIn_Task();
 148   3                              break;
 149   3              }
 150   2          }
 151   1      }
 152          
 153          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    297    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
