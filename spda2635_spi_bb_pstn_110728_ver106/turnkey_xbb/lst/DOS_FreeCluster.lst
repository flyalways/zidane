C51 COMPILER V9.00   DOS_FREECLUSTER                                                       07/09/2012 21:16:46 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DOS_FREECLUSTER
OBJECT MODULE PLACED IN .\obj\DOS_FreeCluster.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DOS\DOS_FreeCluster.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libso
                    -urce\header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\DOS_FreeCluster.lst) OBJECT(.\obj\DOS_FreeCluster.obj)

line level    source

   1          #include "..\header\SPDA2K.h"
   2          #include "..\header\variables.h"
   3          
   4          U8 DOS_SearchFreeCluster(U8 tc_SearchMode)
   5          {
   6   1              data    bit     tb_is_fat16;
   7   1              data    bit     tb_SectorEnd=0;
   8   1              data    U8      tc_loop1_counter;
   9   1              data    U8      tc_loop2_counter;
  10   1              data    U8      tc_temp;
  11   1              data    U8      tc_local_cluster_count_minus_1;
  12   1              data    U8      tc_log2_local_cluster_count;
  13   1              data    U16     tw_size;
  14   1              xdata   U32 tdw_end;
  15   1              xdata   U32 tdw_FreeClusterNum;
  16   1              xdata   U32 tdw_FAT_sect_address;
  17   1              xdata   U32     tdw_last_FAT_sector;
  18   1              xdata   U8      xdata   *p_buf;
  19   1      
  20   1              tb_is_fat16=1;
  21   1              if(gc_DOS_FileSystemType==2)
  22   1              {
  23   2                      tb_is_fat16=0;
  24   2              }
  25   1      
  26   1              if((tc_SearchMode==0)&&gw_ClusBufValidSize>=512)
  27   1              {
  28   2                      return 0;
  29   2              }
  30   1      
  31   1              if(gw_ClusBufValidSize<8&&gdw_FreeClusterNum[0]<(gdw_DOS_FatMaxCluster-1))
  32   1              {
  33   2                      tc_SearchMode=0;
  34   2              }
  35   1      
  36   1              tdw_FreeClusterNum=gdw_FreeClusterNum[tc_SearchMode]+1;
  37   1              if(gc_DOS_FileSystemType==1)                                            // FAT16
  38   1              {
  39   2                      tc_local_cluster_count_minus_1=256-1;
  40   2                      tc_log2_local_cluster_count=8;
  41   2              }
  42   1              else
  43   1              {
  44   2                      tc_local_cluster_count_minus_1=128-1;
  45   2                      tc_log2_local_cluster_count=7;
  46   2              }
  47   1      
  48   1              tdw_FAT_sect_address=gdw_DOS_Fat1Addr+(tdw_FreeClusterNum>>tc_log2_local_cluster_count); // tdw_FreeClust
             -erNum must be a multiple of 256/128.
  49   1              tdw_last_FAT_sector=gdw_DOS_Fat1Addr+((gdw_DOS_FatMaxCluster+tc_local_cluster_count_minus_1)>>tc_log2_loc
             -al_cluster_count)-1;
  50   1              tdw_end=gdw_DOS_FatMaxCluster-((U16)tc_local_cluster_count_minus_1+1);
  51   1      
  52   1              gb_ReadWriteDataArea=1;
C51 COMPILER V9.00   DOS_FREECLUSTER                                                       07/09/2012 21:16:46 PAGE 2   

  53   1              while(tdw_FreeClusterNum<gdw_DOS_FatMaxCluster)
  54   1              {
  55   2                      DOS_Read_LogicSector(tdw_FAT_sect_address);
  56   2                      tc_temp=((U8)tdw_FreeClusterNum)&tc_local_cluster_count_minus_1; // get the index of cluster entry to se
             -arch yet.
  57   2      
  58   2                      if(tc_temp!=0) // If not start from the beginning of sector buffer.
  59   2                      { // to deal with the case that doesn't search from gc_UserDataBuf[0]
  60   3                              if(tb_is_fat16)
  61   3                              {
  62   4                                      p_buf=gc_UserDataBuf+(tc_temp*2);
  63   4                              }
  64   3                              else
  65   3                              {
  66   4                                      p_buf=gc_UserDataBuf+(tc_temp*4);
  67   4                              }
  68   3      
  69   3                              if(tdw_FAT_sect_address==tdw_last_FAT_sector)
  70   3                              {
  71   4                                      tw_size=(U16)(gdw_DOS_FatMaxCluster-tdw_FreeClusterNum);
  72   4                              }
  73   3                              else
  74   3                              {
  75   4                                      tw_size=(tc_local_cluster_count_minus_1+1)-tc_temp;
  76   4                              }
  77   3                      }
  78   2                      else
  79   2                      {
  80   3                              p_buf=gc_UserDataBuf;
  81   3                              if(tdw_FAT_sect_address==tdw_last_FAT_sector)//(JC)tdw_FreeClusterNum is in the last FAT sector, as the
             - same sector with gdw_DOS_FatMaxCluster
  82   3                              {
  83   4                                      tw_size=(U16)(gdw_DOS_FatMaxCluster-tdw_FreeClusterNum);
  84   4                              }
  85   3                              else
  86   3                              {
  87   4                                      tw_size=(tc_local_cluster_count_minus_1+1);
  88   4                              }
  89   3                      }
  90   2      
  91   2                      if(tw_size>128)
  92   2                      {
  93   3                              tc_loop1_counter=128;
  94   3                              tc_loop2_counter=tw_size-128;
  95   3                      }
  96   2                      else
  97   2                      {
  98   3                              tc_loop1_counter=(U8)tw_size;
  99   3                              tc_loop2_counter=0;
 100   3                      }
 101   2      
 102   2                      if(tc_SearchMode==0)    // search free clusters
 103   2                      {
 104   3                              if(tb_is_fat16) // FAT16
 105   3                              {
 106   4                                      if(free_clusters_in_sector(p_buf,tc_loop1_counter,2,tdw_FreeClusterNum))
 107   4                                      {
 108   5                                              return 0;
 109   5                                      }
 110   4                                      tdw_FreeClusterNum+=tc_loop1_counter;
 111   4                                      if(free_clusters_in_sector(p_buf+tc_loop1_counter*2,tc_loop2_counter,2,tdw_FreeClusterNum))
 112   4                                      {
C51 COMPILER V9.00   DOS_FREECLUSTER                                                       07/09/2012 21:16:46 PAGE 3   

 113   5                                              return 0;
 114   5                                      }
 115   4                                      tdw_FreeClusterNum+=tc_loop2_counter;
 116   4                              }
 117   3                              else    // FAT32
 118   3                              {
 119   4                                      if(free_clusters_in_sector(p_buf,tc_loop1_counter,4,tdw_FreeClusterNum))
 120   4                                      {
 121   5                                              return 0;
 122   5                                      }
 123   4                                      tdw_FreeClusterNum+=tc_loop1_counter;
 124   4                              }
 125   3                      }
 126   2                      else // count free clusters
 127   2                      {
 128   3                              tdw_FreeClusterNum+=tw_size;
 129   3                              if(tb_is_fat16)
 130   3                              {
 131   4                                      count_free_cluster_fat16(p_buf,tc_loop1_counter,tc_loop2_counter);
 132   4                              }
 133   3                              else
 134   3                              {
 135   4                                      gdw_TotalFreeClusNumber+=count_free_cluster_in_fat32_sector(p_buf,tc_loop1_counter);
 136   4                              }
 137   3                      }
 138   2      
 139   2                      if(((U8)tdw_FAT_sect_address&0x1F)==0&&gc_CurrentCard==2)       // return after every 32 sector analysis
 140   2                      {
 141   3                              break;
 142   3                      }
 143   2                      else if(((U8)tdw_FAT_sect_address&0x0F)==0&&gc_CurrentCard==2)
 144   2                      {
 145   3                              break;
 146   3                      }
 147   2                      tdw_FAT_sect_address++;
 148   2              }
 149   1      
 150   1              gdw_FreeClusterNum[tc_SearchMode]=tdw_FreeClusterNum-1;
 151   1              return 0;
 152   1      }
 153          
 154          U8 free_clusters_in_sector(U8 *p,U8 size,U8 cluster_entry_size,U32 tdw_FreeClusterNum)
 155          {
 156   1              data    U16     i;
 157   1              data    U16     uTemp;
 158   1              data    U8  search_index;
 159   1      
 160   1              search_index=0;
 161   1              while(1)
 162   1              {
 163   2                      if(cluster_entry_size==2)
 164   2                      {
 165   3                              search_index+=fat16_free_cluster_offset(p+search_index*2,size-search_index);
 166   3                      }
 167   2                      else
 168   2                      {
 169   3                              search_index+=fat32_free_cluster_offset(p+search_index*4,size-search_index);
 170   3                      }
 171   2      
 172   2                      if(search_index<size)
 173   2                      {
 174   3                              i=gw_ClusBufValidSize;
C51 COMPILER V9.00   DOS_FREECLUSTER                                                       07/09/2012 21:16:46 PAGE 4   

 175   3                              uTemp=(gw_ClusBufValidPoint+i)&0x1FF;
 176   3                              gdw_ClusterBuffer[uTemp]=tdw_FreeClusterNum+search_index;
 177   3                              gdw_FreeClusterNum[0]=tdw_FreeClusterNum+search_index;
 178   3                              i++;
 179   3                              gw_ClusBufValidSize=i;
 180   3                              if(i==512)
 181   3                              {
 182   4                                      return 1;
 183   4                              }
 184   3                              search_index++;
 185   3                              continue;
 186   3                      }
 187   2                      else
 188   2                      {// end is reached. searched_size should equals to size
 189   3                              return 0;
 190   3                      }
 191   2              }
 192   1              return 0;
 193   1      }
 194          
 195          void count_free_cluster_fat16(U8 *p,U8 size1,U8 size2)
 196          {
 197   1              gdw_TotalFreeClusNumber+=count_free_cluster_in_fat16_sector(p,size1);
 198   1              gdw_TotalFreeClusNumber+=count_free_cluster_in_fat16_sector(p+size1*2,size2);
 199   1      }
 200          
 201          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1081    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      33
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
