C51 COMPILER V9.00   SYSTEM_INIT                                                           07/09/2012 21:16:50 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SYSTEM_INIT
OBJECT MODULE PLACED IN .\obj\System_Init.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE MAIN\System_Init.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsourc
                    -e\header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\System_Init.lst) OBJECT(.\obj\System_Init.obj)

line level    source

   1          #include "..\header\SPDA2K.h"
   2          #include "..\header\variables.h"
   3          
   4          
   5          void Sysetm_Init(void)
   6          {
   7   1              XBYTE[0xB091]=0x01;     // 1.8v/3.3v regulator turn on 
   8   1              XBYTE[0xB092]=0x77; // 3.2V & 1.9V
   9   1              XBYTE[0xB093]=0x00;     // LVR=2.4V
  10   1              XBYTE[0xB0D1]=0xF0;
  11   1              
  12   1              XBYTE[0xB002]=0x07;     // 0000 0111 reset USB device
  13   1              XBYTE[0xB002]=0x0B;     // 0000 1011 reset FM(flash memory) & memory card, include DSP memory mode, DMA, FM r
             -egs
  14   1              XBYTE[0xB002]=0x13;     // 0001 0011 reset IR controller
  15   1              XBYTE[0xB002]=0x83;     // 1000 0011 reset DSP memory controller
  16   1              XBYTE[0xB002]=0x03;     // 0000 0011 reset finish (keep reset DSP and HOST)
  17   1              XBYTE[0xB002]=0x02;     // Release DSP Reset, Jimi 080729 for pop noise as 1st time play
  18   1              
  19   1              XBYTE[0xB010]=0x00;     // Disable DSP & DSP memory controller clock
  20   1              XBYTE[0xB011]=0xE6;     // Enable DMA, FM, RTC USB, Host clock
  21   1              
  22   1              XBYTE[0xB08A]|=0x08;    //(JC)MCU:audio DAC on
  23   1              XBYTE[0xB08A]|=0x10;    //(JC)MCU:Headphone driver on
  24   1              XBYTE[0xB08A]|=0x20;    //(JC)MCU:Headphone driver DD comm-mode bias o/p
  25   1              XBYTE[0xB0ED]|=0x02;    //(Jimi 091027)Audio DA zero cross reset bypass on
  26   1              XBYTE[0xB0C1]=0xB0;             //(Jimi 091027)Pre-mux , post-mux and internal XCK select
  27   1              XBYTE[0xB0C4]=2;                //(Jimi 091027)LCH speaker volume(i.e LCH OP Gain)
  28   1              XBYTE[0xB0C5]=2;                //(Jimi 091027)RCH speaker volume(i.e RCH OP Gain)
  29   1              
  30   1              XBYTE[0xB05E]=0;                // disable SAR FS clock
  31   1              XBYTE[0xB05F]=0x5F;             // SAR clock = 12MHz/16/6 = 125kHz = 8us
  32   1              XBYTE[0xB09F]|=0x06;    //(JC)Vref Fast setup mode 'n Internal reference voltage power control
  33   1              
  34   1              CKCON=0x10;//(JC)H0229
  35   1              TMOD=0x21;
  36   1              TCON=0x05;
  37   1              TH1=243;        // UART baud rate = 14400bps at CPU 12MHz
  38   1              SCON=0xC8;  // if UART, set value=0xD8
  39   1              PCON=0x80;      
  40   1              
  41   1              TR1=1;          // TR1:  timer 1 run
  42   1              TI=1;           // TI:   set TI to send first char of UART
  43   1              ET0=1;
  44   1              TR0=1;
  45   1              
  46   1              P1=0xFF;        // P1 output high to turn off transistor and to avoid input grounded.
  47   1              XBYTE[0xB102]=0x00;
  48   1              P3=0xFF;        // P3 output high to turn off transistor and to avoid input grounded.
  49   1              XBYTE[0xB103]=0x02;     // set P3.1 UART Tx pin output enabled.
  50   1      
  51   1              XBYTE[0xb400] =0x00;
  52   1              XBYTE[0xb401] |= 0x04;//fmgpio2 input//for linein det
  53   1              XBYTE[0xb405] &= ~0x04;//fmgpio2 input//for linein det
C51 COMPILER V9.00   SYSTEM_INIT                                                           07/09/2012 21:16:50 PAGE 2   

  54   1       
  55   1      }
  56          
  57          
  58          void Variables_Init(void)
  59          {
  60   1              gb_DirPlay_Flag=1;
  61   1              gb_Play_firstPlay=1;
  62   1              gc_HostSectorUnit=1;
  63   1              gw_FM_frequency=875;
  64   1              gc_FM_Vol=0x0F;
  65   1              gc_CurrentHZK=HZK_LANGUAGE;
  66   1              TH0=gc_T0IntervalMSB;
  67   1              TL0=gc_T0IntervalLSB;
  68   1              gb_Host_Exist=1;
  69   1              gb_SD_Exist=1;
  70   1      }
  71          
  72          
  73          void SourceDevicePreSet(void)
  74          {
  75   1              Get_LogData_PageIndex();
  76   1              USER_LogFile_ReadWrite(0);//use reserveblock for log
  77   1              USER_LogFile_ReadWrite(1);
  78   1              if(gc_PlayRecordDataBuf[508]!='L')
  79   1              {
  80   2                      gc_FM_CHAmount=0;
  81   2                      gb_DirPlay_Flag=0;
  82   2                      gs_DSP_GLOBAL_RAM.sc_Volume=20;
  83   2                      USER_LogFile_ReadWrite(1);
  84   2                      gc_LastCard=5;      
  85   2              }
  86   1              
  87   1              if((gc_LastCard!=5)&&(gc_LastCard!=2)&&(gc_LastCard!=9))  //LastCard 2:SD 5:Host 9:FM
  88   1              {           
  89   2                      gc_LastCard=5;
  90   2              }
  91   1      
  92   1              //-----HOST--> SD-->FM
  93   1              switch(gc_LastCard)
  94   1              {
  95   2                      case 0x05:  //HOST--SD--FM
  96   2                              if(HOST_Check())
  97   2                              {
  98   3                                      if(SD_Check())
  99   3                                      {
 100   4                                              gc_CurrentCard=9;
 101   4                                      }
 102   3                              }
 103   2                      break;
 104   2      
 105   2                      case 0x02:  //SD
 106   2                              if(SD_Check())
 107   2                              {
 108   3                                      if(HOST_Check())
 109   3                                      {
 110   4                                              gc_CurrentCard=9;
 111   4                                      }
 112   3                              }
 113   2                      break;
 114   2      
 115   2                      case 0x09:  //FM
C51 COMPILER V9.00   SYSTEM_INIT                                                           07/09/2012 21:16:50 PAGE 3   

 116   2                              gc_CurrentCard=9;
 117   2              break;
 118   2              }
 119   1      
 120   1              gs_System_State.c_Phase=TASK_PHASE_STOP;
 121   1              if((gc_CurrentCard==9)/*||(gc_SW_RESET==0x36)*/)
 122   1              {
 123   2                      gc_Task_Current=C_Task_Idle;
 124   2                      return;
 125   2              }
 126   1      
 127   1              LCM_Clear_L0_L7();
 128   1              LCM_ShowWait();
 129   1              Play_SDFlash_DosInit();
 130   1              gc_Task_Current=C_Task_MusicPlay;
 131   1      }
 132          
 133          
 134          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    340    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
