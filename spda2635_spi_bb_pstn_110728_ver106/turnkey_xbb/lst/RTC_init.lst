C51 COMPILER V9.00   RTC_INIT                                                              07/09/2012 21:16:53 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE RTC_INIT
OBJECT MODULE PLACED IN .\obj\RTC_init.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE RTC\RTC_init.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource\he
                    -ader) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\RTC_init.lst) OBJECT(.\obj\RTC_init.obj)

line level    source

   1          #include "..\header\SPDA2K.h"
   2          
   3          #define RELIABLE_CODE   0xA5
   4          
   5          void RTC_Init(void)
   6          {
   7   1              data    U8      i;
   8   1              data    U8      reliable_code;
   9   1              data    U16     count;
  10   1      
  11   1              XBYTE[0xB066]=0x21;             // RTC serial interface(bit 0) Enable
  12   1              RTC_Write(0x00,0x0D);   // Enable RTC, Load mode
  13   1              reliable_code=RTC_Read(0x02);
  14   1              if(reliable_code!=RELIABLE_CODE)        // reliable code is not reliable. RTC needs a reset.
  15   1              {
  16   2                      XBYTE[0xB002]|=0x40;    // reset RTC
  17   2                      XBYTE[0xB002]&=~0x40;
  18   2                      RTC_Write(0x00,0x0F);   // enable RTC, load mode, reset RTC macro according to C1's suggestion.
  19   2                      RTC_Write(0x00,0x0D);   // enable RTC, load mode
  20   2                      RTC_DisableInterrupt(); // disable RTC interrupt here to power off for avoiding RTC auto start-up
  21   2                                                                      // when 1st time powered. RELIABLE_CODE writing should be after this line
  22   2                                                                      // for judging whether it is the 1st-time RTC setting in later power-on.
  23   2      
  24   2                      RTC_Write(0x02,RELIABLE_CODE); // write reliable code
  25   2                      count=1000;
  26   2                      while(--count)
  27   2                      {
  28   3                              reliable_code=RTC_Read(0x02);
  29   3                              if(reliable_code==RELIABLE_CODE)
  30   3                              {
  31   4                                      break;
  32   4                              }
  33   3                              else
  34   3                              {
  35   4                                      RTC_Write(0x02,RELIABLE_CODE);
  36   4                              }
  37   3                      }
  38   2      
  39   2                      if(count==0)
  40   2                      {
  41   3                              return;
  42   3                      }
  43   2                      
  44   2                      // Clear RTC alarm counter & RTC time value
  45   2                      for(i=0;i<6;i++)
  46   2                      {
  47   3                              RTC_Write(0x10+i,0);
  48   3                              RTC_Write(0x20+i,0);
  49   3                      }
  50   2                      RTC_Write(0xB0,0x01);   // load start value
  51   2                      RTC_Write(0x00,0x05);   // enable RTC, read mode
  52   2              }
  53   1      
  54   1              RTC_EnableInterrupt();
C51 COMPILER V9.00   RTC_INIT                                                              07/09/2012 21:16:53 PAGE 2   

  55   1              RTC_Write(0x00,0x05); // enable RTC, read mode
  56   1              if(RTC_Read(0xD0)&0x03) // if RTC interrupt enabled
  57   1              {
  58   2                      XBYTE[0xB0D0]|=0x08;    // RTC interrupt enable
  59   2              }
  60   1      }
  61          
  62          
  63          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    186    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
