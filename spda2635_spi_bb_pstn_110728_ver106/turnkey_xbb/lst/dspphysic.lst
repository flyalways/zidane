C51 COMPILER V9.00   DSPPHYSIC                                                             07/09/2012 21:16:46 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DSPPHYSIC
OBJECT MODULE PLACED IN .\obj\dspphysic.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE DSP\dspphysic.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource\h
                    -eader) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\dspphysic.lst) OBJECT(.\obj\dspphysic.obj)

line level    source

   1          #include "..\header\SPDA2K.h"
   2          #include "..\header\define.h"
   3          #include "..\header\Rambase.h"
   4          #include "..\header\DSP.h"
   5          #include "dspphysic.h"
   6          
   7          
   8          void L2_DSP_Write_DMem24(U16 tw_Addr,U32 tdw_Data)
   9          {
  10   1          XBYTE[0xBE40]=LOBYTE(tw_Addr);
  11   1          XBYTE[0xBE41]=HIBYTE(tw_Addr);
  12   1          XBYTE[0xBE42]=*((U8 *)&tdw_Data+3);
  13   1          XBYTE[0xBE43]=*((U8 *)&tdw_Data+2);
  14   1          XBYTE[0xBE44]=*((U8 *)&tdw_Data+1);
  15   1          XBYTE[0xBE45]=0x01;        //write. after R/W, the addr will be incremented
  16   1          L2_DSP_DM_Triger(C_DSP_WriteMemError);
  17   1      }
  18          
  19          
  20          void L2_DSP_MCU_IM_DMA(U8 BufferIndex, U16 tw_Src)
  21          {
  22   1              xdata   U16 tw_DSPAddr;
  23   1              data    U16 tw_DSP_Word_Align;
  24   1      
  25   1              tw_DSPAddr= (U16)(BufferIndex<<9);
  26   1      
  27   1              // ----- DMA Reset -----
  28   1              XBYTE[0xB304]=0x09;
  29   1              XBYTE[0xB304]=0x08;
  30   1              XBYTE[0xB3C0]=0x00;             // clear DMA complete
  31   1              XBYTE[0xB330]=0x01;             // clear checksum
  32   1              
  33   1              // ----- DMA initial settings for IM transfer -----
  34   1              XBYTE[0xB216]=0x04;     // Enable IM DMA
  35   1              XBYTE[0xB301]=0x30;     // DMA : SRAM --> IM
  36   1      
  37   1              // Define data size in DMA transfer =512 byte (0xB302, 0xB303)
  38   1              XBYTE[0xB302]=0xFF;
  39   1              XBYTE[0xB303]=0x01;
  40   1      
  41   1              XBYTE[0xB340]=0x00;     // 24-bit DMA
  42   1      
  43   1              // Destination
  44   1              tw_DSP_Word_Align = tw_DSPAddr/3;
  45   1              XBYTE[0xB21F]=tw_DSPAddr%3;             // offset
  46   1              XBYTE[0xB21B]=(tw_DSP_Word_Align<<8)>>8;
  47   1              XBYTE[0xB21C]=(tw_DSP_Word_Align)>>8;
  48   1              // Source
  49   1              XBYTE[0xB112]=(tw_Src<<8)>>8;
  50   1              XBYTE[0xB113]=(tw_Src>>8);
  51   1      
  52   1              // ------------------------------------------------
  53   1      
  54   1              XBYTE[0xB3B0]=0x01;
C51 COMPILER V9.00   DSPPHYSIC                                                             07/09/2012 21:16:46 PAGE 2   

  55   1              while(!(XBYTE[0xB3C0]&0x01));
  56   1              XBYTE[0xB3C0]=0x00;
  57   1              XBYTE[0xB216]=0x00;  //Enable DM,IM,PM
  58   1      }
  59          
  60          void L2_DSP_MCU_PM_DMA(U8 BufferIndex, U16 tw_Src)
  61          {
  62   1              xdata   U16 tw_DSPAddr;
  63   1              data    U16 tw_DSP_Word_Align;
  64   1      
  65   1              tw_DSPAddr= (U16)(BufferIndex<<9);
  66   1      
  67   1              // ----- DMA Reset -----
  68   1              XBYTE[0xB304]=0x09;
  69   1              XBYTE[0xB304]=0x08;
  70   1              XBYTE[0xB3C0]=0x00;             // clear DMA complete
  71   1              XBYTE[0xB330]=0x01;             // clear checksum
  72   1      
  73   1              // ----- DMA initial settings for PM transfer -----
  74   1              XBYTE[0xB216]=0x02;     // Enable PM DMA
  75   1              XBYTE[0xB301]=0x40;     // DMA : SRAM --> PM
  76   1      
  77   1              // Define data size in DMA transfer=512 byte (0xB302, 0xB303)
  78   1              XBYTE[0xB302]=0xFF;
  79   1              XBYTE[0xB303]=0x01;
  80   1      
  81   1              XBYTE[0xB340]=0x00;     // 24-bit DMA
  82   1      
  83   1              // Destination
  84   1              tw_DSP_Word_Align = tw_DSPAddr/3;
  85   1              XBYTE[0xB21E]=tw_DSPAddr%3;     // offset
  86   1              XBYTE[0xB219]=(tw_DSP_Word_Align<<8)>>8;
  87   1              XBYTE[0xB21A]=(tw_DSP_Word_Align)>>8;
  88   1              // Source
  89   1              XBYTE[0xB112]=(tw_Src<<8)>>8;
  90   1              XBYTE[0xB113]=(tw_Src>>8);
  91   1                      
  92   1              XBYTE[0xB3B0]=0x01;     // DMA Run (0xB3B0)
  93   1              while(!(XBYTE[0xB3C0]&0x01));
  94   1              XBYTE[0xB3C0]=0x00;
  95   1              XBYTE[0xB216]=0x00;  //Enable DM,IM,PM
  96   1      }
  97          
  98          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    256    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
