C51 COMPILER V9.00   USB_BULK                                                              07/09/2012 21:16:55 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE USB_BULK
OBJECT MODULE PLACED IN .\obj\USB_BULK.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE USB\USB_BULK.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource\he
                    -ader) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\USB_BULK.lst) OBJECT(.\obj\USB_BULK.obj)

line level    source

   1          #include "..\header\SPDA2K.h"
   2          #include "..\header\variables.h"
   3          #include "..\header\USB_MSDC.h"
   4          
   5          void Save_CBW_Packet(void) 
   6          {
   7   1              xdata   U8      i;
   8   1              //  解參數      
   9   1          while(XBYTE[0xB5A1]&0x02); 
  10   1          XBYTE[0xB5D2]&=0xDD;                                //Disable Bulk-Out中斷
  11   1          gc_dCBW_Tag[0]=USB_BUF_Bank0[4];
  12   1          gc_dCBW_Tag[1]=USB_BUF_Bank0[5];
  13   1          gc_dCBW_Tag[2]=USB_BUF_Bank0[6];
  14   1          gc_dCBW_Tag[3]=USB_BUF_Bank0[7];
  15   1              gdw_dCBW_DataXferLength.BY[0]=USB_BUF_Bank0[11];        // MSB  gdw_dCBW_DataXferLength
  16   1              gdw_dCBW_DataXferLength.BY[1]=USB_BUF_Bank0[10];        //      是用來表示CBW 的資料傳輸長度
  17   1              gdw_dCBW_DataXferLength.BY[2]=USB_BUF_Bank0[ 9];        //
  18   1              gdw_dCBW_DataXferLength.BY[3]=USB_BUF_Bank0[ 8];        // LSB
  19   1              gb_bmCBWFlag=USB_BUF_Bank0[12]>>7;                                      // CBW的資料傳輸方向 '1' =>  in,Device => Hhost
  20   1              gc_bCBWLUN = (USB_BUF_Bank0[13]&0x0F);                          // 決定目前是操作那一台磁碟機
  21   1              //決OS支援多槽的功能的功能嗎  ==> yes(1)    ==> No(2)
  22   1              switch(gc_bCBWLUN)
  23   1              {
  24   2                      case 0x00 :
  25   2                              if(gb_CardDetect^gb_CardExist)
  26   2                              {
  27   3                                      if(gb_Start_Stop_Flag==0)
  28   3                                      {
  29   4                                              if(!SD_Identification_Flow())
  30   4                                              {
  31   5                                                      gb_CardDetect=0; 
  32   5                                              gb_CardExist=0;
  33   5                                                  gb_Start_Stop_Flag=0;
  34   5                                                      break;  
  35   5                                              }
  36   4                                              else
  37   4                                              {
  38   5                                                      gb_MediaChanged=1;
  39   5                                                      gb_CardChangeStage=1;
  40   5                                                      gb_CardExist=1;
  41   5                                              }
  42   4                                      }
  43   3                              }                       
  44   2                      break;
  45   2              }
  46   1      
  47   1              for(i=0;i<10;i++)
  48   1              {
  49   2                      gc_COMD_IN[i]=USB_BUF_Bank0[i+15];
  50   2              }
  51   1          XBYTE[0xB5E9]=0x02;
  52   1      }      
  53          
  54          
C51 COMPILER V9.00   USB_BULK                                                              07/09/2012 21:16:55 PAGE 2   

  55          void Decode_CBW_Command(void) 
  56          {
  57   1              switch (gc_COMD_IN[0]) 
  58   1              {
  59   2                      case 0x28:
  60   2                              if(gb_CardExist)
  61   2                              {                                       
  62   3                                      if(Check_LBA_ID())
  63   3                                      {                           
  64   4                              gc_USBStage =BulkInReadSectorsStage;      
  65   4                          gc_bCSWStatus=0x00;                       
  66   4                          gc_RequestSenseCode  = 0xFF;              
  67   4                      }                                             
  68   3                      else
  69   3                                      {
  70   4                          gc_USBStage =BulkInReadBufferStage;      
  71   4                              gc_bCSWStatus=0x01;                       
  72   4                              gc_RequestSenseCode  = 0x07;    
  73   4                      }                  
  74   3                              }
  75   2                              else
  76   2                              {
  77   3                                      LBA.BY[0]=0x00;                               
  78   3                      LBA.BY[1]=0x00;                               
  79   3                      LBA.BY[2]=0x00;                               
  80   3                      LBA.BY[3]=0x00;                               
  81   3                      TotalXferPageNum.BY[0]=gc_COMD_IN[7];            
  82   3                      TotalXferPageNum.BY[1]=gc_COMD_IN[8];            
  83   3                      gc_USBStage =BulkInReadBufferStage;             
  84   3                      gc_bCSWStatus=0x01;                           
  85   3                      gc_RequestSenseCode  = 0x00;                  
  86   3                              }
  87   2                      break;
  88   2      
  89   2                      case 0x2A:
  90   2                              if(gb_CardExist) 
  91   2                              {
  92   3                                      if(Check_LBA_ID())
  93   3                                      {
  94   4                                      gc_USBStage=BulkOutWriteSectorsStage;       
  95   4                              gc_bCSWStatus=0x00;                         
  96   4                              gc_RequestSenseCode  = 0xFF;                
  97   4                      }                                               
  98   3                      else
  99   3                                      {                                           
 100   4                          gc_USBStage=BulkOutWriteBufferStage;        
 101   4                              gc_bCSWStatus=0x01;                         
 102   4                              gc_RequestSenseCode  = 0x07;
 103   4                      }                  
 104   3                              }
 105   2                              else
 106   2                              {
 107   3                                      LBA.BY[0]=0x00;                                 
 108   3                      LBA.BY[1]=0x00;                                 
 109   3                      LBA.BY[2]=0x00;                                 
 110   3                      LBA.BY[3]=0x00;                                 
 111   3                      TotalXferPageNum.BY[0]=gc_COMD_IN[7];            
 112   3                      TotalXferPageNum.BY[1]=gc_COMD_IN[8];              
 113   3                      gc_USBStage=BulkOutWriteBufferStage;            
 114   3                      gc_bCSWStatus=0x01;                             
 115   3                      gc_RequestSenseCode  = 0x00;                    
 116   3                              }
C51 COMPILER V9.00   USB_BULK                                                              07/09/2012 21:16:55 PAGE 3   

 117   2                      break;
 118   2      
 119   2                      case 0x00:
 120   2                              if(gb_CardExist)
 121   2                              {
 122   3                                      gc_bCSWStatus = 0x00;                                                           
 123   3                                      gc_RequestSenseCode = 0xFF ;                                                    
 124   3                              }
 125   2                              else
 126   2                              {
 127   3                                      gc_bCSWStatus = 0x01;                                                           
 128   3                                      gc_RequestSenseCode = 0x00 ;                                                    
 129   3                              }                       
 130   2                      
 131   2                              if(gb_MediaChanged) 
 132   2                              {
 133   3                                      if(gb_CardChangeStage)
 134   3                                      {  // Media change
 135   4                                              gc_bCSWStatus = 0x01;
 136   4                                              gc_RequestSenseCode = 0x01 ; 
 137   4                                      }
 138   3                              }
 139   2                              gc_USBStage=CSWStage;
 140   2                      break;
 141   2      
 142   2                      case 0x03:
 143   2                              SetRequestSenseData();
 144   2                              gc_USBStage=BulkInResponseStage;
 145   2                              gc_bCSWStatus = 0x00;
 146   2                      break;
 147   2      
 148   2                      case 0x12:
 149   2                              SetResponseINQUIRYData();
 150   2                              gc_USBStage=BulkInResponseStage;
 151   2                              gdw_dCBW_DataXferLength.WD[1]=36;
 152   2                              gc_bCSWStatus=0x00;
 153   2                      break;
 154   2      
 155   2                      case 0x5A:
 156   2                      case 0x1A:
 157   2                              if (gc_COMD_IN[2] != 0x3F) 
 158   2                              {
 159   3                                      gb_StallWhichEndPoint=0;
 160   3                                      gc_USBStage=BulkStallStage;
 161   3                                      gc_bCSWStatus=0x01;
 162   3                                      gc_RequestSenseCode=0x03;
 163   3                              }
 164   2                              else 
 165   2                              {
 166   3                                      if(gc_COMD_IN[0]==0x1A) 
 167   3                                      {
 168   4                                              USB_BUF_Bank0[0]=0x03;
 169   4                                              USB_BUF_Bank0[1]=0x00;
 170   4                                              USB_BUF_Bank0[2]=0x00;
 171   4                                              USB_BUF_Bank0[3]=0x00;
 172   4                                      }
 173   3                                      else
 174   3                                      {
 175   4                                              USB_BUF_Bank0[0]=0x00;
 176   4                                              USB_BUF_Bank0[1]=0x07;
 177   4                                              USB_BUF_Bank0[2]=0x00;
 178   4                                              USB_BUF_Bank0[3]=0x00;
C51 COMPILER V9.00   USB_BULK                                                              07/09/2012 21:16:55 PAGE 4   

 179   4                                      }                                                                                                     
             - 
 180   3                                      USB_BUF_Bank0[4]=0x00;
 181   3                                      USB_BUF_Bank0[5]=0x00;
 182   3                                      USB_BUF_Bank0[6]=0x00;
 183   3                                      USB_BUF_Bank0[7]=0x00;
 184   3                                      gc_USBStage=BulkInResponseStage;
 185   3                                      gb_XferNormalResponseData_ModeSense=ModeSenseResponseData;
 186   3                                      gc_bCSWStatus=0x00;
 187   3                              }
 188   2                      break;
 189   2                      
 190   2                      case 0x1E:
 191   2                              if(gc_COMD_IN[4]&0x01) 
 192   2                              {
 193   3                                      gc_bCSWStatus=0x01;
 194   3                                      gc_RequestSenseCode=0x03;
 195   3                              }
 196   2                              else 
 197   2                              {
 198   3                                      gc_bCSWStatus=0x00;
 199   3                              }
 200   2                              gc_USBStage=CSWStage;
 201   2                      break;
 202   2                      
 203   2                      case 0x1B:
 204   2                              gc_USBStage=CSWStage;
 205   2                              gc_bCSWStatus=0x00;
 206   2                              if(gc_COMD_IN[4]&0x01)
 207   2                              {
 208   3                              gb_CardExist=1;
 209   3                              gb_Start_Stop_Flag=0;
 210   3                              }                                               
 211   2                              else
 212   2                              {
 213   3                                      gb_CardExist=0;
 214   3                                      gb_Start_Stop_Flag=1;
 215   3                              }
 216   2                      break;
 217   2                      
 218   2                      case 0x23: 
 219   2                              if(gb_CardExist)
 220   2                              {
 221   3                                      SetReadFormatCapacity();
 222   3                                      gc_USBStage=BulkInResponseStage;
 223   3                      gc_bCSWStatus=0x00;
 224   3                                      gc_RequestSenseCode=0xFF;
 225   3                  }
 226   2                  else
 227   2                              {
 228   3                      gb_StallWhichEndPoint=0;
 229   3                                      gc_USBStage=BulkStallStage;
 230   3                                      gc_bCSWStatus=0x01;
 231   3                                  gc_RequestSenseCode=0x00;
 232   3                  }
 233   2                  if(gb_MediaChanged) 
 234   2                              {                                                       
 235   3                                      if(gb_CardChangeStage)
 236   3                                      {  // Media change
 237   4                                              gc_bCSWStatus = 0x01;     
 238   4                                              gc_RequestSenseCode = 0x01 ; 
 239   4                                      }                               
C51 COMPILER V9.00   USB_BULK                                                              07/09/2012 21:16:55 PAGE 5   

 240   3                              }
 241   2                      break;
 242   2      
 243   2                      case 0x25:
 244   2                              if(gb_CardExist)
 245   2                              {
 246   3                                      SetReadCapacityData();
 247   3                                      gc_USBStage=BulkInResponseStage;
 248   3                      gc_bCSWStatus=0x00;
 249   3                                      gc_RequestSenseCode=0xFF;
 250   3                  }
 251   2                  else
 252   2                              {
 253   3                      gb_StallWhichEndPoint=0;
 254   3                                      gc_USBStage=BulkStallStage;
 255   3                                      gc_bCSWStatus=0x01;
 256   3                                  gc_RequestSenseCode=0x00;
 257   3                  }
 258   2                  if(gb_MediaChanged) 
 259   2                              {                                                       
 260   3                                      if(gb_CardChangeStage)
 261   3                                      {  // Media change
 262   4                                              gc_bCSWStatus = 0x01;     
 263   4                                              gc_RequestSenseCode = 0x01 ; 
 264   4                                      }                               
 265   3                              }           
 266   2                      break;
 267   2      
 268   2                      case 0x2F:
 269   2                  gc_USBStage=CSWStage;
 270   2                  gc_bCSWStatus=0x00;
 271   2                  gc_RequestSenseCode=0xFF;
 272   2                  break;
 273   2      
 274   2              case 0x2E:
 275   2                  TotalXferPageNum.BY[0]=gc_COMD_IN[7];            
 276   2                  TotalXferPageNum.BY[1]=gc_COMD_IN[8];             
 277   2                  gc_USBStage = BulkOutWriteBufferStage;
 278   2                  gc_bCSWStatus=0x00;                     
 279   2                  gc_RequestSenseCode = 0xFF;                                        
 280   2                  break;
 281   2      
 282   2              default:
 283   2                              // 此時應Stall EndPoint1/2才對吧
 284   2                              if(gb_bmCBWFlag) 
 285   2                              {
 286   3                                      gb_StallWhichEndPoint=0;    // for bulk in stall
 287   3                              }
 288   2                              else
 289   2                              {
 290   3                                      gb_StallWhichEndPoint=1;    // for bulk in stall
 291   3                              }
 292   2                              gc_USBStage=BulkStallStage;                   // '7'
 293   2                              gc_bCSWStatus=0x01;
 294   2                              gc_RequestSenseCode=0x02;                     // 不明原因錯誤，設OPcode不支援
 295   2                      break;
 296   2              }
 297   1      }
 298          
 299          
 300          void SetResponseINQUIRYData(void) 
 301          {
C51 COMPILER V9.00   USB_BULK                                                              07/09/2012 21:16:55 PAGE 6   

 302   1              xdata   U8      i;
 303   1      
 304   1              for(i=0;i<36;i++)
 305   1              {
 306   2                      USB_BUF_Bank0[i]=Standard_INQUIRY_Format_SDMMC[i];
 307   2              }
 308   1      }
 309          
 310          
 311          void SetRequestSenseData(void) 
 312          {
 313   1              xdata   U8      i;
 314   1      
 315   1              for(i=1;i<18;i++)
 316   1              {
 317   2                      USB_BUF_Bank0[i]=0x00;
 318   2              }
 319   1              USB_BUF_Bank0[0]=0x70;
 320   1              USB_BUF_Bank0[7]=0x0A;
 321   1      
 322   1              switch(gc_RequestSenseCode) 
 323   1              {
 324   2                      case 0x00:      // 02 3A 00 - Medium not present
 325   2                              USB_BUF_Bank0[ 2]=0x02;
 326   2                              USB_BUF_Bank0[12]=0x3A;
 327   2                      break;
 328   2      
 329   2                      case 0x01:      // 06 28 00 - Media changed
 330   2                              USB_BUF_Bank0[ 2]=0x06;
 331   2                              USB_BUF_Bank0[12]=0x28;
 332   2                              gb_MediaChanged=0;
 333   2                              gb_CardChangeStage=0;
 334   2                      break;
 335   2                      
 336   2                      case 0x02:      // 05 20 00 - Invalid command operaion code
 337   2                              USB_BUF_Bank0[ 2]=0x05;
 338   2                              USB_BUF_Bank0[12]=0x20;
 339   2                      break;
 340   2      
 341   2                      case 0x03:      // 05 24 00 - Invalid field in command packet
 342   2                              USB_BUF_Bank0[ 2]=0x05;
 343   2                              USB_BUF_Bank0[12]=0x24;
 344   2                      break;          
 345   2      
 346   2                      case 0x05:      // 07 27 00 - Write protected media
 347   2                              USB_BUF_Bank0[ 2]=0x07;
 348   2                              USB_BUF_Bank0[12]=0x27;
 349   2                      break;
 350   2      
 351   2                      case 0x06:      // 03 11 00 - Unrecovered read error
 352   2                              USB_BUF_Bank0[ 2]=0x03;
 353   2                              USB_BUF_Bank0[12]=0x11;
 354   2                      break;
 355   2      
 356   2                      case 0x07:      // 05 21 00 - Logical block address out of range
 357   2                              USB_BUF_Bank0[ 2]=0x05;
 358   2                              USB_BUF_Bank0[12]=0x21;
 359   2                      break;
 360   2      
 361   2                      case 0x08:      // 03 03 00 - Write fault
 362   2                              USB_BUF_Bank0[ 2]=0x03;
 363   2                              USB_BUF_Bank0[12]=0x03;
C51 COMPILER V9.00   USB_BULK                                                              07/09/2012 21:16:55 PAGE 7   

 364   2                      break;
 365   2              }       
 366   1              gc_RequestSenseCode=0xFF;
 367   1      }
 368          
 369          
 370          void SetReadFormatCapacity(void)
 371          {
 372   1              USB_BUF_Bank0[ 0]=0x00;
 373   1              USB_BUF_Bank0[ 1]=0x00;
 374   1              USB_BUF_Bank0[ 2]=0x00;
 375   1              USB_BUF_Bank0[ 3]=0x08;
 376   1              USB_BUF_Bank0[ 4]=SD_Capacity.BY[0];
 377   1              USB_BUF_Bank0[ 5]=SD_Capacity.BY[1];
 378   1              USB_BUF_Bank0[ 6]=SD_Capacity.BY[2];
 379   1              USB_BUF_Bank0[ 7]=SD_Capacity.BY[3];
 380   1              USB_BUF_Bank0[ 8]=0x02;
 381   1              USB_BUF_Bank0[ 9]=0x00;
 382   1              USB_BUF_Bank0[10]=0x02;
 383   1              USB_BUF_Bank0[11]=0x00;
 384   1      }
 385          
 386          
 387          void SetReadCapacityData(void)
 388          {
 389   1              SD_Capacity.LW--;
 390   1              USB_BUF_Bank0[0]=SD_Capacity.BY[0];
 391   1              USB_BUF_Bank0[1]=SD_Capacity.BY[1];
 392   1              USB_BUF_Bank0[2]=SD_Capacity.BY[2];
 393   1              USB_BUF_Bank0[3]=SD_Capacity.BY[3];
 394   1              USB_BUF_Bank0[4]=0x00;
 395   1              USB_BUF_Bank0[5]=0x00;
 396   1              USB_BUF_Bank0[6]=0x02;
 397   1              USB_BUF_Bank0[7]=0x00;
 398   1              SD_Capacity.LW ++;
 399   1      }
 400          
 401          
 402          bit Check_LBA_ID(void) 
 403          {
 404   1              if ((gc_COMD_IN[0] == 0x28) || (gc_COMD_IN[0] == 0x2A)) 
 405   1              {
 406   2                      LBA.BY[0] = gc_COMD_IN[2];
 407   2                      LBA.BY[1] = gc_COMD_IN[3];
 408   2                      LBA.BY[2] = gc_COMD_IN[4];
 409   2                      LBA.BY[3] = gc_COMD_IN[5];      
 410   2                      TotalXferPageNum.BY[0] = gc_COMD_IN[7];
 411   2                      TotalXferPageNum.BY[1] = gc_COMD_IN[8];
 412   2              }
 413   1              else 
 414   1              {
 415   2                      LBA.BY[0] = 0x00;
 416   2                      LBA.BY[1] = gc_COMD_IN[1]& 0x0F;
 417   2                      LBA.BY[2] = gc_COMD_IN[2];
 418   2                      LBA.BY[3] = gc_COMD_IN[3];      
 419   2                      TotalXferPageNum.BY[0] = 0x00;    
 420   2                      TotalXferPageNum.BY[1] = gc_COMD_IN[4];
 421   2              }
 422   1      
 423   1              if(LBA.LW>=SD_Capacity.LW)
 424   1              {
 425   2                      LBA.LW=SD_Capacity.LW;
C51 COMPILER V9.00   USB_BULK                                                              07/09/2012 21:16:55 PAGE 8   

 426   2                      return 0;               
 427   2              }
 428   1              else
 429   1              {
 430   2                      return 1;
 431   2              }
 432   1      }
 433          
 434          
 435          void StallBulkRW(void) 
 436          {
 437   1              if(gb_StallWhichEndPoint==0) 
 438   1              {  // for bulk in stall
 439   2                      XBYTE[0xB5EB]=0x01;
 440   2                      while(XBYTE[0xB5EE]==0);
 441   2                      XBYTE[0xB5E8]=0x04;//in stall
 442   2              }
 443   1              else //if gb_StallWhichEndPoint==1) 
 444   1              {  // for bulk out stall
 445   2                      XBYTE[0xB5EB]=0x02;
 446   2                      while(XBYTE[0xB5EE]==0);
 447   2                      XBYTE[0xB5E8]=0x08;//out stall
 448   2              }
 449   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1084    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
