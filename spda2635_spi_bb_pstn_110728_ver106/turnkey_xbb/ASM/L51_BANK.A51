
$NOMOD51 NOLINES
$NOCOND

P3	EQU	0B0H
DPL1	EQU     084H
DPH1	EQU     085H
DPS	EQU	086H
IE	EQU	0A8H
EA	EQU	0A8H.7
ACC	EQU	0E0H
TH1	EQU	08DH
;************************ Configuration Section *******************************
?B_NBANKS       EQU  32   ; Define max. Number of Banks                       *
;                         ; The following values are allowed: 2, 4, 8, 16, 32 *
;                         ; the max. value for ?B_BANKS is 32                 *
;                                                                             *
?B_MODE         EQU  0    ; 0 for Bank-Switching via 8051 Port                *
;                         ; 1 for Bank-Switching via XDATA Port               *
;                         ; 4 for user-provided bank switch code              *
;                                                                             *
?B_RTX          EQU  0    ; 0 for applications without RTX-51 FULL            *
;                         ; 1 for applications using RTX-51 FULL              *
;                                                                             *
?B_VAR_BANKING  EQU  0    ; Enable Variable Banking in XDATA and CODE memory  *
;                         ; 0 Variable Banking is disabled                    *
;                         ; 1 XDATA and CODE banking with same address lines  *
;                         ; 2 XDATA uses a different banking port             *
;                                                                             *
ROMPAGE         DATA    9AH      ; I/O Port Address                           *

IF  ?B_VAR_BANKING <> 0;                                                      *
;-----------------------------------------------------------------------------*
; if ?B_VAR_BANKING is enabled define the following values                    *
;                                                                             *
?B_COMMON_XRAM  EQU  0    ; Specify if your hardware has uses XDATA RAM       *
;                         ; 0 no common RAM: complete 64KB XDATA is banked    *
;                         ; 1 all XDATA variables are located to common RAM   *
;                                                                             *
?B_INTR_ACCESS  EQU  0    ; 0 unlimited access to XDATA memory in interrupts  *
;                         ; 1 interupts access to XDATA variables is allowed  *
;                         ;   after call to  ToDo                             *
;                                                                             *
;-----------------------------------------------------------------------------*
ENDIF;                                                                        *
;                                                                             *
;-----------------------------------------------------------------------------*
; if ?BANK?MODE is 0 define the following values                              *
; For Bank-Switching via 8051 Port define Port Address / Bits                 *
;                                                                             *                                                                        
?B_PORT         EQU     ROMPAGE  ; default is P1                              *
?B_FIRSTBIT     EQU     0        ; default is Bit 0                           *
;-----------------------------------------------------------------------------*

;                                                                             *
;******************************************************************************
;                                                                             *
; THEORY OF OPERATION                                                         *
; -------------------                                                         *
; The section below describes the code generated by BL51 or L251 and the      *
; operation of the L51_BANK.A51 module.  BL51/L251 generates for each         *
; function that is located in a code memory bank and called from the common   *
; area or a different code bank and entry into the INTRABANK CALL TABLE.  The *
; INTRABANK CALL TABLE is located in the SEGMENT ?BANK?SELECT and listed in   *
; the Linker MAP file. The entries in that TABLE have the following format:   *
;                                                                             *
;   ?FCT?1:  MOV  DPTR,#FCT     ; Load Address of target FCT                  *
;            JMP  ?B_BANKn      ; Switch to Bank and Jump to Target Code      *
;                                                                             *
; Instead of directly calling the function FCT, the Linker changes the entry  *
; to ?FCT?1.  This entry selects the bank where the function FCT is located   *
; and calls that function via the routines defined in this L51_BANK.A51 file. *
; The L51_BANK.A51 file contains two sets of functions for each bank:         *
;                                                                             *
; ?B_BANKn    is a routine which saves the entry of the ?B_SWITCHn function   *
;             for the current active bank on the STACK and switches to the    *
;             bank 'n'.  Then it jumps to the address specified by the DPTR   *
;             register.  It is allowed to modify the following registers in   *
;             the ?B_BANKn routine:  A, B, R0, DPTR, PSW                      *
;                                                                             *
; ?B_SWITCHn  is a function which selects the bank 'n'.  This function is     *
;             used at the end of a user function to return to the calling     *
;             code bank.  Only the following registers may be altered in the  *
;             ?B_SWITCHn function:  R0, DPTR                                  *
;                                                                             *
; The current active bank is stored in ?B_CURRENTBANK.  RTX-51 uses this      *
; variable to restore the code bank after a task switch.  To get correct      *
; results, ?B_CURRENTBANK must be set to the code bank before the hardware    *
; switch is done, or the code banking sequences must be interrupt protected.  *
;******************************************************************************

                NAME    ?BANK?SWITCHING

                PUBLIC  ?B_NBANKS

; Standard SFR Symbols required in L51_BANK.A51

;EXTRN DATA (gc_bank_status, gc_bank_number)
EXTRN CODE (perform_nand_bank_call)
;;==============MACRO===================
SELECT          MACRO   N
                PUBLIC  ?B_BANK&N
?B_BANK&N:   
		        mov	A,#0N
                jmp	?B_SWITCH&N
                ENDM

;;==============BANK SELECT=============
?BANK?SELECT    SEGMENT  CODE ;INBLOCK

                RSEG    ?BANK?SELECT
CNT             SET     0

                REPT    ?B_NBANKS
                SELECT  %CNT
CNT             SET     CNT+1
                ENDM
;;======================================
;;==============MACRO===================
SWITCH          MACRO   N
                ORG     1;N * 8
                PUBLIC  ?B_SWITCH&N
?B_SWITCH&N:  
		jmp	perform_nand_bank_call
                ENDM

;;==============BANK SWITCH=============			
?BANK?SWITCH    SEGMENT  CODE  

                RSEG    ?BANK?SWITCH
CNT             SET     0

                REPT    ?B_NBANKS
                SWITCH  %CNT
CNT             SET     CNT+1
                ENDM
;;======================================

                END

