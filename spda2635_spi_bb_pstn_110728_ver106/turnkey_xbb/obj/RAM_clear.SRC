; .\obj\RAM_clear.SRC generated from: MAIN\RAM_clear.c
; COMPILER INVOKED BY:
;        C:\Keil\C51\BIN\C51.EXE MAIN\RAM_clear.c LARGE OPTIMIZE(9,SIZE) BROWSE NOAREGS INCDIR(..\libsource\header) DEFINE(K_ICTYPE=0x03) DEBUG OBJECTEXTEND PRINT(.\lst\RAM_clear.lst) SRC(.\obj\RAM_clear.SRC)

$NOMOD51

NAME	RAM_CLEAR

ACC7	BIT	0E0H.7
P0	DATA	080H
P1	DATA	090H
P2	DATA	0A0H
P3	DATA	0B0H
T0	BIT	0B0H.4
AC	BIT	0D0H.6
T1	BIT	0B0H.5
EA	BIT	0A8H.7
IE	DATA	0A8H
EXF2	BIT	0C8H.6
RD	BIT	0B0H.7
ES	BIT	0A8H.4
IP	DATA	0B8H
RI	BIT	098H.0
INT0	BIT	0B0H.2
CY	BIT	0D0H.7
TI	BIT	098H.1
INT1	BIT	0B0H.3
RamPage	DATA	09BH
RCAP2H	DATA	0CBH
PS	BIT	0B8H.4
SP	DATA	081H
OV	BIT	0D0H.2
RCAP2L	DATA	0CAH
C_T2	BIT	0C8H.1
WR	BIT	0B0H.6
RCLK	BIT	0C8H.5
TCLK	BIT	0C8H.4
SBUF	DATA	099H
PCON	DATA	087H
SCON	DATA	098H
TMOD	DATA	089H
TCON	DATA	088H
IE0	BIT	088H.1
IE1	BIT	088H.3
B	DATA	0F0H
CP_RL2	BIT	0C8H.0
ACC	DATA	0E0H
ET0	BIT	0A8H.1
ET1	BIT	0A8H.3
TF0	BIT	088H.5
ET2	BIT	0A8H.5
TF1	BIT	088H.7
TF2	BIT	0C8H.7
RB8	BIT	098H.2
TH0	DATA	08CH
EX0	BIT	0A8H.0
IT0	BIT	088H.0
TH1	DATA	08DH
TB8	BIT	098H.3
EX1	BIT	0A8H.2
IT1	BIT	088H.2
TH2	DATA	0CDH
P	BIT	0D0H.0
SM0	BIT	098H.7
TL0	DATA	08AH
SM1	BIT	098H.6
TL1	DATA	08BH
SM2	BIT	098H.5
TL2	DATA	0CCH
SD_Detect	BIT	090H.1
PT0	BIT	0B8H.1
PT1	BIT	0B8H.3
RS0	BIT	0D0H.3
PT2	BIT	0B8H.5
TR0	BIT	088H.4
RS1	BIT	0D0H.4
TR1	BIT	088H.6
TR2	BIT	0C8H.2
PX0	BIT	0B8H.0
PX1	BIT	0B8H.2
DPH	DATA	083H
DPL	DATA	082H
EXEN2	BIT	0C8H.3
REN	BIT	098H.4
T2CON	DATA	0C8H
RXD	BIT	0B0H.0
CKCON	DATA	08EH
TXD	BIT	0B0H.1
F0	BIT	0D0H.5
ACC0	BIT	0E0H.0
ACC1	BIT	0E0H.1
ACC2	BIT	0E0H.2
ACC3	BIT	0E0H.3
PSW	DATA	0D0H
ACC4	BIT	0E0H.4
ACC5	BIT	0E0H.5
ACC6	BIT	0E0H.6
?PR?InitSystemRAM?RAM_CLEAR              SEGMENT CODE 
?PR?InitCPURAM?RAM_CLEAR                 SEGMENT CODE 
	PUBLIC	InitCPURAM
	PUBLIC	InitSystemRAM
; #include "..\header\SPDA2K.h"
; 
; 
; void InitSystemRAM(void)

	RSEG  ?PR?InitSystemRAM?RAM_CLEAR
InitSystemRAM:
	USING	0
			; SOURCE LINE # 4
; {
			; SOURCE LINE # 5
; 	// Clear System RAM(0x7000~0x7FFF)
; #pragma asm
; 		mov		dptr,#7000h
	  mov		dptr,#7000h
; ?loop:	movx	@dptr,a
	  ?loop:	movx	@dptr,a
; 		inc		dptr
	  inc		dptr
; 		mov		r0,dph
	  mov		r0,dph
; 		cjne	r0,#80h,?loop
	  cjne	r0,#80h,?loop
; #pragma endasm
; }
			; SOURCE LINE # 14
	RET  	
; END OF InitSystemRAM

; 
; void InitCPURAM(void)

	RSEG  ?PR?InitCPURAM?RAM_CLEAR
InitCPURAM:
	USING	0
			; SOURCE LINE # 16
; {
			; SOURCE LINE # 17
; 	// Clear 8051 RAM(20h~8Fh)
; #pragma asm
; 		clr		a
	  clr		a
; 		mov		r0,#20h
	  mov		r0,#20h
; ?loop1:	mov		@r0,a
	  ?loop1:	mov		@r0,a
; 		inc		r0
	  inc		r0
; 		cjne	r0,#90h,?loop1
	  cjne	r0,#90h,?loop1
; #pragma endasm
; }
			; SOURCE LINE # 26
	RET  	
; END OF InitCPURAM

	END
